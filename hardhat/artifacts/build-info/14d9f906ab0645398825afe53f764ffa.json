{"id":"14d9f906ab0645398825afe53f764ffa","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual override returns (uint256[] memory) {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory amounts) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Create2.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Create2.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        require(address(this).balance >= amount, \"Create2: insufficient balance\");\n        require(bytecode.length != 0, \"Create2: bytecode length is zero\");\n        /// @solidity memory-safe-assembly\n        assembly {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n        }\n        require(addr != address(0), \"Create2: Failed on deploy\");\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := keccak256(start, 85)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/AuctionEstate.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract AuctionEstate is ERC1155,IERC1155Receiver {\r\n\r\n    uint256 private estateId;\r\n    uint256 private estateEvaluation;\r\n    uint256 private highestBid;\r\n    address payable private auctionWinner;\r\n    uint256 private timestamp;\r\n    address payable private estateOwner;\r\n\r\n    address payable [] private bidders;\r\n    \r\n    mapping (address=>uint256) private BidsPlaced;\r\n\r\n\r\n    constructor(uint256 _id,uint256 _evaluation,uint256 _timestamp,address payable owner)\r\n        ERC1155(\"\")\r\n    {   estateId = _id;\r\n        estateEvaluation = _evaluation;\r\n        timestamp = _timestamp;\r\n        highestBid = 0;\r\n        estateOwner = owner;\r\n    }\r\n\r\n    function getAuctionDetails() external view returns(uint256,uint256,uint256,address payable,address payable,uint256){\r\n        return(estateId,estateEvaluation,highestBid,estateOwner,auctionWinner,timestamp);\r\n    }\r\n\r\n    function getAllBidders() external view returns(address payable [] memory){\r\n        return bidders;\r\n    }\r\n\r\n    function getBidDetails(address payable bidder) external view returns(uint256){\r\n        return (BidsPlaced[bidder]);\r\n    }\r\n\r\n    function placeBid(uint256 bid) external payable  {\r\n        //require(block.timestamp - timestamp <= 24 hours,\"This listing has expired\");\r\n        require(bid>estateEvaluation, \"Bid placed must be higher than the evaluation of the timestamp\");\r\n        BidsPlaced[msg.sender] = bid;\r\n        bidders.push(payable(address(msg.sender)));\r\n        if(highestBid<bid){\r\n            highestBid = bid;\r\n            auctionWinner = payable(address(msg.sender));\r\n        }\r\n    }\r\n\r\n    function declareWinner() public view returns(address payable) {\r\n        //require(block.timestamp-timestamp> 24 hours, \"Winner cannot be declared before 24 hours of the listing\");\r\n        return auctionWinner;\r\n    }\r\n\r\n    function withdrawMyFunds() external payable {\r\n        //require(block.timestamp-timestamp> 24 hours, \"Funds cannot be withdrawn before 24 hours of the listing\");\r\n        if(payable(address(msg.sender))!=auctionWinner){\r\n            uint256 bidPlaced = BidsPlaced[msg.sender];\r\n            require(bidPlaced!=0 , \"You have not placed any bet in this auction\");\r\n            payable(address(msg.sender)).transfer(bidPlaced);\r\n            BidsPlaced[address(msg.sender)] = 0;\r\n        }\r\n    }\r\n\r\n    function claimPrize() external payable {\r\n        //require(block.timestamp-timestamp> 24 hours, \"Estate cannnot be claimed before 24 hours of the listing\");\r\n        if(payable(address(msg.sender))==auctionWinner){\r\n            estateOwner.transfer(highestBid);\r\n            safeTransferFrom(address(this), auctionWinner, estateId, 0, \"\");\r\n            BidsPlaced[address(msg.sender)] = 0;\r\n        }  \r\n    }\r\n\r\n    function onERC1155Received(address, address, uint256, uint256, bytes memory) public virtual returns (bytes4) {\r\n        return this.onERC1155Received.selector;\r\n    }\r\n\r\n    function onERC1155BatchReceived(address, address, uint256[] memory, uint256[] memory, bytes memory) public virtual returns (bytes4) {\r\n        return this.onERC1155BatchReceived.selector;\r\n    }\r\n\r\n    // The following functions are overrides required by Solidity.\r\n\r\n}\r\n"},"contracts/FactoryEstate.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/utils/Create2.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\";\nimport \"./AuctionEstate.sol\";\nimport \"./WalletEstate.sol\";\n\ncontract EstateFactory is ERC1155,IERC1155Receiver{\n\n    uint256 private _nextTokenId=1;\n\n    constructor()\n        ERC1155(\"\")        \n    {}\n\n    struct Estate{\n        uint256 estateID;\n        address payable estateOwner;\n        uint256 estateEvaluation;\n        string estateMetadata;\n        bool isListedForAuction;\n        bool isListedForInvestment;\n    }\n\n    mapping (uint256 => Estate) private Estates;\n    mapping (uint256 => address) private EstateInvestmentListings; //estate id -> estate wallet contract address\n    mapping (uint256 => address) private EstateAuctionListings; //estate id -> estate auction contract address\n\n    function tokenizeEstate(string memory _metadata,uint256 _evaluation) external  {\n        require(_evaluation>0, \"Evaluation of the Estate must be more than zero!\");\n        address payable addr = payable(address(msg.sender));\n        //Mint Estate Token to Owner\n                 \n         uint256 tokenId = _nextTokenId;\n        _nextTokenId++;\n        mint(addr,tokenId,1,\"\");\n        setURI(_metadata);\n\n        //Create Estate Listing\n        Estates[tokenId] = Estate({\n            estateID:tokenId,\n            estateOwner: payable(address(msg.sender)),\n            estateMetadata:_metadata,\n            estateEvaluation: _evaluation,\n            isListedForAuction:false,\n            isListedForInvestment:false\n        });\n        \n    }\n\n    function listEstateForAuction(uint256 estateId) external {\n        bytes32 _salt = keccak256(abi.encodePacked(block.timestamp, msg.sender));\n        address latestAuctionAddress = Create2.deploy(0,_salt, abi.encodePacked(type(AuctionEstate).creationCode, abi.encode(estateId,Estates[estateId].estateEvaluation,block.timestamp,Estates[estateId].estateOwner))\n        );\n        safeTransferFrom(msg.sender,latestAuctionAddress, estateId, 1, \"\");\n        EstateAuctionListings[estateId] = latestAuctionAddress;\n        Estates[estateId].isListedForAuction = true;\n    }\n\n     function listEstateForInvestment(uint256 estateId) external  {\n      \n        IERC1155Receiver newContract = new WalletEstate(estateId,Estates[estateId].estateEvaluation);\n        safeTransferFrom(msg.sender,address(newContract), estateId, 1, \"\");\n        _mint(address(msg.sender), 0, 100, \"\");\n         safeTransferFrom(msg.sender,address(newContract), 0, 100, \"\");\n\n        EstateInvestmentListings[estateId] = address(newContract);\n        Estates[estateId].isListedForInvestment = true;\n        \n    }\n\n    function getEstateListing(uint256 estateId) external view returns (Estate memory) {\n        return Estates[estateId];\n    }\n\n    function getEstateInvestmentListing(uint256 estateId) external view returns (address) {\n        return EstateInvestmentListings[estateId];\n    }\n\n    function updateOwner(uint256 estateID,address payable newOwner) external {\n        Estates[estateID].estateOwner = newOwner;\n        Estates[estateID].isListedForAuction = false;\n        Estates[estateID].isListedForInvestment = false;\n    }\n\n    function getEstateAuctionListing(uint256 estateId) external view returns (address) {\n        return EstateAuctionListings[estateId];\n    }\n\n    function getNumEstates() external view returns (uint256) {\n        return _nextTokenId;\n    }\n\n    function setURI(string memory newuri) private {\n        _setURI(newuri);\n    }\n\n    function mint(address account, uint256 id, uint256 amount,bytes memory data) private\n    {\n        _mint(account, id, amount,data);\n    }\n\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\n        private\n        \n    {\n        _mintBatch(to, ids, amounts, data);\n    }\n\n     function onERC1155Received(address, address, uint256, uint256, bytes memory) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(address, address, uint256[] memory, uint256[] memory, bytes memory) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC1155, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n\n\n\n\n}"},"contracts/WalletEstate.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\ncontract WalletEstate is ERC1155,IERC1155Receiver {\r\n\r\n    uint256 private constant WALLET_TOKEN = 0;\r\n    uint256 private estateId;\r\n    uint256 private estateEvaluation;\r\n    address payable private estateOwner;\r\n\r\n    mapping (address=>uint256) estateShareHolders;\r\n\r\n    address payable [] private investors;\r\n\r\n    constructor(uint256 _id,uint256 _evaluation)\r\n        ERC1155(\"\")\r\n    {   estateId = _id;\r\n        estateEvaluation = _evaluation;\r\n        estateOwner = payable(address(msg.sender));\r\n        \r\n    }\r\n\r\n     function getInvestmentDetails() external view returns(uint256,uint256,address payable){\r\n        return(estateId,estateEvaluation,estateOwner);\r\n    }\r\n\r\n    function getAllInvestors() external view returns(address payable [] memory){\r\n        return investors;\r\n    }\r\n\r\n    function getInvestmentDetails(address payable investor) external view returns(uint256){\r\n        return (estateShareHolders[investor]);\r\n    }\r\n\r\n    function purchaseShares(uint256 quantity) external payable  {\r\n        require(quantity<=100,\"Maximum number of shares that can be purchased is 100\");\r\n        require(quantity>0, \"Number of shares purchased cannot be zero or less\");\r\n        require(quantity<balanceOf(address(this), WALLET_TOKEN),\"There aren't sufficient shares to be purchased\");\r\n\r\n        //uint256 share_evaluation = ((estateEvaluation*10**18)/100)*quantity;\r\n        //require(share_evaluation==msg.value,\"Incorrect funds sent!\");\r\n        payable(address(this)).transfer(msg.value);\r\n\r\n       safeTransferFrom(address(this), address(msg.sender), WALLET_TOKEN, quantity, \"\");\r\n       estateShareHolders[address(msg.sender)] = quantity;\r\n       investors.push(payable(address(msg.sender)));\r\n    }\r\n\r\n    function transferShares(address receiver,uint256 quantity) external {\r\n        require(quantity <= estateShareHolders[address(msg.sender)], \"Insufficient shares to be transferred to recepient\");\r\n        safeTransferFrom(address(msg.sender), receiver, WALLET_TOKEN, quantity, \"\");\r\n        estateShareHolders[address(msg.sender)] -= quantity;\r\n        estateShareHolders[receiver] += quantity;\r\n    }\r\n\r\n    function sellShares(uint256 quantity) external payable {\r\n        require(quantity <= estateShareHolders[address(msg.sender)], \"Insufficient shares to be sold\");\r\n        safeTransferFrom(address(msg.sender), address(this), WALLET_TOKEN, quantity, \"\");\r\n\r\n        uint256 share_evaluation = ((estateEvaluation*10**18)/100)*quantity;\r\n        payable(address(msg.sender)).transfer(share_evaluation);\r\n        estateShareHolders[address(msg.sender)] -=quantity; \r\n    }\r\n\r\n    function onERC1155Received(address, address, uint256, uint256, bytes memory) external virtual returns (bytes4) {\r\n        return this.onERC1155Received.selector;\r\n    }\r\n\r\n    function onERC1155BatchReceived(address, address, uint256[] memory, uint256[] memory, bytes memory) external virtual returns (bytes4) {\r\n        return this.onERC1155BatchReceived.selector;\r\n    }\r\n\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":400},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1865],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1866,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1865],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[],"usedEvents":[13]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Address":[1843],"Context":[1865],"ERC1155":[1335],"ERC165":[1970],"IERC1155":[1457],"IERC1155MetadataURI":[1513],"IERC1155Receiver":[1498],"IERC165":[1982]},"id":1336,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1458,"src":"134:24:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"./IERC1155Receiver.sol","id":116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1499,"src":"159:32:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1514,"src":"192:46:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1844,"src":"239:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":119,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1866,"src":"273:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":120,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1971,"src":"307:46:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":122,"name":"Context","nameLocations":["590:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"590:7:1"},"id":123,"nodeType":"InheritanceSpecifier","src":"590:7:1"},{"baseName":{"id":124,"name":"ERC165","nameLocations":["599:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":1970,"src":"599:6:1"},"id":125,"nodeType":"InheritanceSpecifier","src":"599:6:1"},{"baseName":{"id":126,"name":"IERC1155","nameLocations":["607:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":1457,"src":"607:8:1"},"id":127,"nodeType":"InheritanceSpecifier","src":"607:8:1"},{"baseName":{"id":128,"name":"IERC1155MetadataURI","nameLocations":["617:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":1513,"src":"617:19:1"},"id":129,"nodeType":"InheritanceSpecifier","src":"617:19:1"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"355:214:1","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"},"fullyImplemented":true,"id":1335,"linearizedBaseContracts":[1335,1513,1457,1970,1982,1865],"name":"ERC1155","nameLocation":"579:7:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":132,"libraryName":{"id":130,"name":"Address","nameLocations":["649:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1843,"src":"649:7:1"},"nodeType":"UsingForDirective","src":"643:26:1","typeName":{"id":131,"name":"address","nodeType":"ElementaryTypeName","src":"661:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":false,"id":138,"mutability":"mutable","name":"_balances","nameLocation":"780:9:1","nodeType":"VariableDeclaration","scope":1335,"src":"724:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":137,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"732:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"724:47:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":136,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"751:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"743:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"762:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":144,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"899:18:1","nodeType":"VariableDeclaration","scope":1335,"src":"846:71:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":143,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"846:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":142,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"865:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":141,"name":"bool","nodeType":"ElementaryTypeName","src":"884:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":146,"mutability":"mutable","name":"_uri","nameLocation":"1053:4:1","nodeType":"VariableDeclaration","scope":1335,"src":"1038:19:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":145,"name":"string","nodeType":"ElementaryTypeName","src":"1038:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":156,"nodeType":"Block","src":"1139:30:1","statements":[{"expression":{"arguments":[{"id":153,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"1157:4:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":152,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"1149:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":155,"nodeType":"ExpressionStatement","src":"1149:13:1"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"1064:38:1","text":" @dev See {_setURI}."},"id":157,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"uri_","nameLocation":"1133:4:1","nodeType":"VariableDeclaration","scope":157,"src":"1119:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":148,"name":"string","nodeType":"ElementaryTypeName","src":"1119:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1118:20:1"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"1139:0:1"},"scope":1335,"src":"1107:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1969,1981],"body":{"id":187,"nodeType":"Block","src":"1344:197:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":168,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"1373:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":170,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"1393:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1457_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1457_$","typeString":"type(contract IERC1155)"}],"id":169,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1388:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1388:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1457","typeString":"type(contract IERC1155)"}},"id":172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1403:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1388:26:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1373:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"1430:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":176,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"1450:19:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1513_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1513_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":175,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1445:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1513","typeString":"type(contract IERC1155MetadataURI)"}},"id":178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1471:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1445:37:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1430:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1373:109:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":183,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"1522:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":181,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1498:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1335_$","typeString":"type(contract super ERC1155)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1504:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1969,"src":"1498:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1373:161:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":167,"id":186,"nodeType":"Return","src":"1354:180:1"}]},"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"1175:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":188,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1245:17:1","nodeType":"FunctionDefinition","overrides":{"id":164,"nodeType":"OverrideSpecifier","overrides":[{"id":162,"name":"ERC165","nameLocations":["1312:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":1970,"src":"1312:6:1"},{"id":163,"name":"IERC165","nameLocations":["1320:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"1320:7:1"}],"src":"1303:25:1"},"parameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"interfaceId","nameLocation":"1270:11:1","nodeType":"VariableDeclaration","scope":188,"src":"1263:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":159,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1263:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1262:20:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":188,"src":"1338:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1338:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1337:6:1"},"scope":1335,"src":"1236:305:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1512],"body":{"id":199,"nodeType":"Block","src":"2015:28:1","statements":[{"expression":{"id":197,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2032:4:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":196,"id":198,"nodeType":"Return","src":"2025:11:1"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"1547:388:1","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":200,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"1949:3:1","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"1982:8:1"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":200,"src":"1953:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1952:9:1"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":200,"src":"2000:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":194,"name":"string","nodeType":"ElementaryTypeName","src":"2000:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1999:15:1"},"scope":1335,"src":"1940:103:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1395],"body":{"id":227,"nodeType":"Block","src":"2280:132:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":212,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"2298:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2309:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"2309:7:1","typeDescriptions":{}}},"id":216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2309:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2298:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2321:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","typeString":"literal_string \"ERC1155: address zero is not a valid owner\""},"value":"ERC1155: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","typeString":"literal_string \"ERC1155: address zero is not a valid owner\""}],"id":211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2290:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:76:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":220,"nodeType":"ExpressionStatement","src":"2290:76:1"},{"expression":{"baseExpression":{"baseExpression":{"id":221,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2383:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":223,"indexExpression":{"id":222,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"2393:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2383:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":225,"indexExpression":{"id":224,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"2397:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2383:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":210,"id":226,"nodeType":"Return","src":"2376:29:1"}]},"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2049:131:1","text":" @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":228,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2194:9:1","nodeType":"FunctionDefinition","overrides":{"id":207,"nodeType":"OverrideSpecifier","overrides":[],"src":"2253:8:1"},"parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"account","nameLocation":"2212:7:1","nodeType":"VariableDeclaration","scope":228,"src":"2204:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"2204:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"id","nameLocation":"2229:2:1","nodeType":"VariableDeclaration","scope":228,"src":"2221:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"2221:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2203:29:1"},"returnParameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"2271:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":208,"name":"uint256","nodeType":"ElementaryTypeName","src":"2271:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2270:9:1"},"scope":1335,"src":"2185:227:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1408],"body":{"id":291,"nodeType":"Block","src":"2720:335:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":243,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2738:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2747:6:1","memberName":"length","nodeType":"MemberAccess","src":"2738:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":245,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"2757:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:6:1","memberName":"length","nodeType":"MemberAccess","src":"2757:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""},"value":"ERC1155: accounts and ids length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""}],"id":242,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2730:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:83:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":250,"nodeType":"ExpressionStatement","src":"2730:83:1"},{"assignments":[255],"declarations":[{"constant":false,"id":255,"mutability":"mutable","name":"batchBalances","nameLocation":"2841:13:1","nodeType":"VariableDeclaration","scope":291,"src":"2824:30:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"2824:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":254,"nodeType":"ArrayTypeName","src":"2824:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":262,"initialValue":{"arguments":[{"expression":{"id":259,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2871:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2880:6:1","memberName":"length","nodeType":"MemberAccess","src":"2871:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2857:13:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":256,"name":"uint256","nodeType":"ElementaryTypeName","src":"2861:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":257,"nodeType":"ArrayTypeName","src":"2861:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2857:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2824:63:1"},{"body":{"id":287,"nodeType":"Block","src":"2944:74:1","statements":[{"expression":{"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":274,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2958:13:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":276,"indexExpression":{"id":275,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2972:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2958:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":278,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2987:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":280,"indexExpression":{"id":279,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2996:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2987:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":281,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"3000:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":283,"indexExpression":{"id":282,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3004:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3000:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":277,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"2977:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2977:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2958:49:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":286,"nodeType":"ExpressionStatement","src":"2958:49:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2918:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":268,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2922:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2931:6:1","memberName":"length","nodeType":"MemberAccess","src":"2922:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2918:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":288,"initializationExpression":{"assignments":[264],"declarations":[{"constant":false,"id":264,"mutability":"mutable","name":"i","nameLocation":"2911:1:1","nodeType":"VariableDeclaration","scope":288,"src":"2903:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":266,"initialValue":{"hexValue":"30","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2915:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2903:13:1"},"loopExpression":{"expression":{"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2939:3:1","subExpression":{"id":271,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2941:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":273,"nodeType":"ExpressionStatement","src":"2939:3:1"},"nodeType":"ForStatement","src":"2898:120:1"},{"expression":{"id":289,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"3035:13:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":241,"id":290,"nodeType":"Return","src":"3028:20:1"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"2418:146:1","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":292,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2578:14:1","nodeType":"FunctionDefinition","overrides":{"id":237,"nodeType":"OverrideSpecifier","overrides":[],"src":"2684:8:1"},"parameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"accounts","nameLocation":"2619:8:1","nodeType":"VariableDeclaration","scope":292,"src":"2602:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"2602:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":231,"nodeType":"ArrayTypeName","src":"2602:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":235,"mutability":"mutable","name":"ids","nameLocation":"2654:3:1","nodeType":"VariableDeclaration","scope":292,"src":"2637:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":233,"name":"uint256","nodeType":"ElementaryTypeName","src":"2637:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":234,"nodeType":"ArrayTypeName","src":"2637:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2592:71:1"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":292,"src":"2702:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":238,"name":"uint256","nodeType":"ElementaryTypeName","src":"2702:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":239,"nodeType":"ArrayTypeName","src":"2702:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2701:18:1"},"scope":1335,"src":"2569:486:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1416],"body":{"id":308,"nodeType":"Block","src":"3207:69:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":302,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"3236:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":304,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"3250:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":305,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"3260:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":301,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"3217:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3217:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":307,"nodeType":"ExpressionStatement","src":"3217:52:1"}]},"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"3061:57:1","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":309,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3132:17:1","nodeType":"FunctionDefinition","overrides":{"id":299,"nodeType":"OverrideSpecifier","overrides":[],"src":"3198:8:1"},"parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"operator","nameLocation":"3158:8:1","nodeType":"VariableDeclaration","scope":309,"src":"3150:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":294,"name":"address","nodeType":"ElementaryTypeName","src":"3150:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"approved","nameLocation":"3173:8:1","nodeType":"VariableDeclaration","scope":309,"src":"3168:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":296,"name":"bool","nodeType":"ElementaryTypeName","src":"3168:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3149:33:1"},"returnParameters":{"id":300,"nodeType":"ParameterList","parameters":[],"src":"3207:0:1"},"scope":1335,"src":"3123:153:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1426],"body":{"id":326,"nodeType":"Block","src":"3448:61:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":320,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"3465:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":322,"indexExpression":{"id":321,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"3484:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3465:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":324,"indexExpression":{"id":323,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"3493:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3465:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":319,"id":325,"nodeType":"Return","src":"3458:44:1"}]},"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"3282:56:1","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":327,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3352:16:1","nodeType":"FunctionDefinition","overrides":{"id":316,"nodeType":"OverrideSpecifier","overrides":[],"src":"3424:8:1"},"parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"account","nameLocation":"3377:7:1","nodeType":"VariableDeclaration","scope":327,"src":"3369:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"3369:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"operator","nameLocation":"3394:8:1","nodeType":"VariableDeclaration","scope":327,"src":"3386:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3368:35:1"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":327,"src":"3442:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":317,"name":"bool","nodeType":"ElementaryTypeName","src":"3442:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3441:6:1"},"scope":1335,"src":"3343:166:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1440],"body":{"id":364,"nodeType":"Block","src":"3745:225:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":343,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3776:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":344,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"3784:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3784:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3776:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":348,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3817:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"3823:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":347,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3800:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3776:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3850:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":342,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3755:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3755:153:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":355,"nodeType":"ExpressionStatement","src":"3755:153:1"},{"expression":{"arguments":[{"id":357,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3936:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":358,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3942:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":359,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"3946:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":360,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3950:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":361,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3958:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":356,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3918:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3918:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"3918:45:1"}]},"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"3515:56:1","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":365,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3585:16:1","nodeType":"FunctionDefinition","overrides":{"id":340,"nodeType":"OverrideSpecifier","overrides":[],"src":"3736:8:1"},"parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"from","nameLocation":"3619:4:1","nodeType":"VariableDeclaration","scope":365,"src":"3611:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"3611:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"to","nameLocation":"3641:2:1","nodeType":"VariableDeclaration","scope":365,"src":"3633:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"3633:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"id","nameLocation":"3661:2:1","nodeType":"VariableDeclaration","scope":365,"src":"3653:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"amount","nameLocation":"3681:6:1","nodeType":"VariableDeclaration","scope":365,"src":"3673:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"3673:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"data","nameLocation":"3710:4:1","nodeType":"VariableDeclaration","scope":365,"src":"3697:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":337,"name":"bytes","nodeType":"ElementaryTypeName","src":"3697:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3601:119:1"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"3745:0:1"},"scope":1335,"src":"3576:394:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1456],"body":{"id":404,"nodeType":"Block","src":"4236:232:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":383,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4267:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":384,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"4275:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4267:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":388,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4308:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":389,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"4314:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4314:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":387,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"4291:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4291:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4267:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4341:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4246:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4246:153:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":395,"nodeType":"ExpressionStatement","src":"4246:153:1"},{"expression":{"arguments":[{"id":397,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4432:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":398,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"4438:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":399,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"4442:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":400,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"4447:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":401,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"4456:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":396,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"4409:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4409:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":403,"nodeType":"ExpressionStatement","src":"4409:52:1"}]},"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"3976:61:1","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":405,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4051:21:1","nodeType":"FunctionDefinition","overrides":{"id":380,"nodeType":"OverrideSpecifier","overrides":[],"src":"4227:8:1"},"parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"from","nameLocation":"4090:4:1","nodeType":"VariableDeclaration","scope":405,"src":"4082:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"4082:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"to","nameLocation":"4112:2:1","nodeType":"VariableDeclaration","scope":405,"src":"4104:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"4104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"ids","nameLocation":"4141:3:1","nodeType":"VariableDeclaration","scope":405,"src":"4124:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":372,"nodeType":"ArrayTypeName","src":"4124:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"amounts","nameLocation":"4171:7:1","nodeType":"VariableDeclaration","scope":405,"src":"4154:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"4154:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":375,"nodeType":"ArrayTypeName","src":"4154:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"data","nameLocation":"4201:4:1","nodeType":"VariableDeclaration","scope":405,"src":"4188:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":377,"name":"bytes","nodeType":"ElementaryTypeName","src":"4188:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4072:139:1"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"4236:0:1"},"scope":1335,"src":"4042:426:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":521,"nodeType":"Block","src":"5081:784:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":420,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5099:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5113:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5105:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"5105:7:1","typeDescriptions":{}}},"id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5105:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5099:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5117:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":419,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5091:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"ExpressionStatement","src":"5091:66:1"},{"assignments":[430],"declarations":[{"constant":false,"id":430,"mutability":"mutable","name":"operator","nameLocation":"5176:8:1","nodeType":"VariableDeclaration","scope":521,"src":"5168:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"5168:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":433,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":431,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"5187:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5187:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5168:31:1"},{"assignments":[438],"declarations":[{"constant":false,"id":438,"mutability":"mutable","name":"ids","nameLocation":"5226:3:1","nodeType":"VariableDeclaration","scope":521,"src":"5209:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"5209:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"nodeType":"ArrayTypeName","src":"5209:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":442,"initialValue":{"arguments":[{"id":440,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5250:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":439,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"5232:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5232:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5209:44:1"},{"assignments":[447],"declarations":[{"constant":false,"id":447,"mutability":"mutable","name":"amounts","nameLocation":"5280:7:1","nodeType":"VariableDeclaration","scope":521,"src":"5263:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":446,"nodeType":"ArrayTypeName","src":"5263:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":451,"initialValue":{"arguments":[{"id":449,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5308:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":448,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"5290:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5290:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5263:52:1"},{"expression":{"arguments":[{"id":453,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"5347:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5357:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":455,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5363:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":456,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"5367:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":457,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"5372:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":458,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5381:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":452,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"5326:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5326:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":460,"nodeType":"ExpressionStatement","src":"5326:60:1"},{"assignments":[462],"declarations":[{"constant":false,"id":462,"mutability":"mutable","name":"fromBalance","nameLocation":"5405:11:1","nodeType":"VariableDeclaration","scope":521,"src":"5397:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"5397:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":468,"initialValue":{"baseExpression":{"baseExpression":{"id":463,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"5419:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":465,"indexExpression":{"id":464,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5429:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5419:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":467,"indexExpression":{"id":466,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5433:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5419:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5397:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":470,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"5456:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":471,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5471:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5456:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5479:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":469,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5448:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5448:76:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"5448:76:1"},{"id":486,"nodeType":"UncheckedBlock","src":"5534:77:1","statements":[{"expression":{"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":476,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"5558:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":479,"indexExpression":{"id":477,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5568:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5558:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":480,"indexExpression":{"id":478,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5572:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5558:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":481,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"5580:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":482,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5594:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5580:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5558:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":485,"nodeType":"ExpressionStatement","src":"5558:42:1"}]},{"expression":{"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":487,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"5620:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":490,"indexExpression":{"id":488,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5630:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5620:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":491,"indexExpression":{"id":489,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5634:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5620:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":492,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5641:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5620:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":494,"nodeType":"ExpressionStatement","src":"5620:27:1"},{"eventCall":{"arguments":[{"id":496,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"5678:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":497,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5688:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":498,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5694:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":499,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5698:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":500,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5702:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":495,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"5663:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5663:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":502,"nodeType":"EmitStatement","src":"5658:51:1"},{"expression":{"arguments":[{"id":504,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"5740:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":505,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5750:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":506,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5756:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":507,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"5760:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":508,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"5765:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":509,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5774:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":503,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"5720:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"ExpressionStatement","src":"5720:59:1"},{"expression":{"arguments":[{"id":513,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"5821:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":514,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5831:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":515,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5837:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":516,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5841:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":517,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5845:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":518,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5853:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":512,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"5790:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5790:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"5790:68:1"}]},"documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"4474:439:1","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":522,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"4927:17:1","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"from","nameLocation":"4962:4:1","nodeType":"VariableDeclaration","scope":522,"src":"4954:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":410,"mutability":"mutable","name":"to","nameLocation":"4984:2:1","nodeType":"VariableDeclaration","scope":522,"src":"4976:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"4976:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"id","nameLocation":"5004:2:1","nodeType":"VariableDeclaration","scope":522,"src":"4996:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"4996:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"amount","nameLocation":"5024:6:1","nodeType":"VariableDeclaration","scope":522,"src":"5016:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"5016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"data","nameLocation":"5053:4:1","nodeType":"VariableDeclaration","scope":522,"src":"5040:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":415,"name":"bytes","nodeType":"ElementaryTypeName","src":"5040:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4944:119:1"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"5081:0:1"},"scope":1335,"src":"4918:947:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":656,"nodeType":"Block","src":"6399:927:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":539,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6417:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6421:6:1","memberName":"length","nodeType":"MemberAccess","src":"6417:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":541,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6431:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6439:6:1","memberName":"length","nodeType":"MemberAccess","src":"6431:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6417:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6447:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":538,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6409:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6409:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":546,"nodeType":"ExpressionStatement","src":"6409:81:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":548,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"6508:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6522:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6514:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"6514:7:1","typeDescriptions":{}}},"id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6514:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6508:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6526:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":547,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6500:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6500:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":556,"nodeType":"ExpressionStatement","src":"6500:66:1"},{"assignments":[558],"declarations":[{"constant":false,"id":558,"mutability":"mutable","name":"operator","nameLocation":"6585:8:1","nodeType":"VariableDeclaration","scope":656,"src":"6577:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"6577:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":561,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":559,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"6596:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6596:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6577:31:1"},{"expression":{"arguments":[{"id":563,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"6640:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"6650:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"6656:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":566,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6660:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":567,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6665:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":568,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"6674:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":562,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6619:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6619:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":570,"nodeType":"ExpressionStatement","src":"6619:60:1"},{"body":{"id":628,"nodeType":"Block","src":"6731:370:1","statements":[{"assignments":[583],"declarations":[{"constant":false,"id":583,"mutability":"mutable","name":"id","nameLocation":"6753:2:1","nodeType":"VariableDeclaration","scope":628,"src":"6745:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"6745:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":587,"initialValue":{"baseExpression":{"id":584,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6758:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":586,"indexExpression":{"id":585,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"6762:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6758:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6745:19:1"},{"assignments":[589],"declarations":[{"constant":false,"id":589,"mutability":"mutable","name":"amount","nameLocation":"6786:6:1","nodeType":"VariableDeclaration","scope":628,"src":"6778:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"6778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":593,"initialValue":{"baseExpression":{"id":590,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6795:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":592,"indexExpression":{"id":591,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"6803:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6795:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6778:27:1"},{"assignments":[595],"declarations":[{"constant":false,"id":595,"mutability":"mutable","name":"fromBalance","nameLocation":"6828:11:1","nodeType":"VariableDeclaration","scope":628,"src":"6820:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"6820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":601,"initialValue":{"baseExpression":{"baseExpression":{"id":596,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"6842:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":598,"indexExpression":{"id":597,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"6852:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6842:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":600,"indexExpression":{"id":599,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"6856:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6842:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6820:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"6883:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":604,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6898:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6883:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6906:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":602,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6875:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6875:76:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":608,"nodeType":"ExpressionStatement","src":"6875:76:1"},{"id":619,"nodeType":"UncheckedBlock","src":"6965:85:1","statements":[{"expression":{"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":609,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"6993:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":612,"indexExpression":{"id":610,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"7003:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6993:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":613,"indexExpression":{"id":611,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"7007:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6993:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"7015:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":615,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7029:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7015:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6993:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":618,"nodeType":"ExpressionStatement","src":"6993:42:1"}]},{"expression":{"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":620,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"7063:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":623,"indexExpression":{"id":621,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"7073:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7063:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":624,"indexExpression":{"id":622,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"7077:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7063:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":625,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7084:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7063:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":627,"nodeType":"ExpressionStatement","src":"7063:27:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":575,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"6710:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":576,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6714:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6718:6:1","memberName":"length","nodeType":"MemberAccess","src":"6714:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6710:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":629,"initializationExpression":{"assignments":[572],"declarations":[{"constant":false,"id":572,"mutability":"mutable","name":"i","nameLocation":"6703:1:1","nodeType":"VariableDeclaration","scope":629,"src":"6695:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"6695:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":574,"initialValue":{"hexValue":"30","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6707:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6695:13:1"},"loopExpression":{"expression":{"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6726:3:1","subExpression":{"id":579,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"6728:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":581,"nodeType":"ExpressionStatement","src":"6726:3:1"},"nodeType":"ForStatement","src":"6690:411:1"},{"eventCall":{"arguments":[{"id":631,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7130:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":632,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"7140:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"7146:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"7150:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":635,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"7155:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":630,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"7116:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7116:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"EmitStatement","src":"7111:52:1"},{"expression":{"arguments":[{"id":639,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7194:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"7204:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":641,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"7210:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":642,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"7214:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":643,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"7219:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":644,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"7228:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":638,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"7174:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7174:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":646,"nodeType":"ExpressionStatement","src":"7174:59:1"},{"expression":{"arguments":[{"id":648,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7280:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":649,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"7290:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":650,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"7296:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"7300:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":652,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"7305:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":653,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"7314:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":647,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"7244:35:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7244:75:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":655,"nodeType":"ExpressionStatement","src":"7244:75:1"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"5871:335:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":657,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"6220:22:1","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"from","nameLocation":"6260:4:1","nodeType":"VariableDeclaration","scope":657,"src":"6252:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"6252:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"to","nameLocation":"6282:2:1","nodeType":"VariableDeclaration","scope":657,"src":"6274:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"6274:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":530,"mutability":"mutable","name":"ids","nameLocation":"6311:3:1","nodeType":"VariableDeclaration","scope":657,"src":"6294:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":529,"nodeType":"ArrayTypeName","src":"6294:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"amounts","nameLocation":"6341:7:1","nodeType":"VariableDeclaration","scope":657,"src":"6324:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"6324:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":532,"nodeType":"ArrayTypeName","src":"6324:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"data","nameLocation":"6371:4:1","nodeType":"VariableDeclaration","scope":657,"src":"6358:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":534,"name":"bytes","nodeType":"ElementaryTypeName","src":"6358:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6242:139:1"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"6399:0:1"},"scope":1335,"src":"6211:1115:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":667,"nodeType":"Block","src":"8205:30:1","statements":[{"expression":{"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":663,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"8215:4:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":664,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"8222:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8215:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":666,"nodeType":"ExpressionStatement","src":"8215:13:1"}]},"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"7332:812:1","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":668,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"8158:7:1","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"newuri","nameLocation":"8180:6:1","nodeType":"VariableDeclaration","scope":668,"src":"8166:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":659,"name":"string","nodeType":"ElementaryTypeName","src":"8166:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8165:22:1"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"8205:0:1"},"scope":1335,"src":"8149:86:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":768,"nodeType":"Block","src":"8699:580:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":681,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"8717:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8731:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8723:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"8723:7:1","typeDescriptions":{}}},"id":685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8723:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8717:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8735:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":680,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8709:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8709:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":689,"nodeType":"ExpressionStatement","src":"8709:62:1"},{"assignments":[691],"declarations":[{"constant":false,"id":691,"mutability":"mutable","name":"operator","nameLocation":"8790:8:1","nodeType":"VariableDeclaration","scope":768,"src":"8782:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"8782:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":694,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":692,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"8801:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8801:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8782:31:1"},{"assignments":[699],"declarations":[{"constant":false,"id":699,"mutability":"mutable","name":"ids","nameLocation":"8840:3:1","nodeType":"VariableDeclaration","scope":768,"src":"8823:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":697,"name":"uint256","nodeType":"ElementaryTypeName","src":"8823:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":698,"nodeType":"ArrayTypeName","src":"8823:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":703,"initialValue":{"arguments":[{"id":701,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"8864:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":700,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"8846:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8846:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8823:44:1"},{"assignments":[708],"declarations":[{"constant":false,"id":708,"mutability":"mutable","name":"amounts","nameLocation":"8894:7:1","nodeType":"VariableDeclaration","scope":768,"src":"8877:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"8877:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":707,"nodeType":"ArrayTypeName","src":"8877:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":712,"initialValue":{"arguments":[{"id":710,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"8922:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":709,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"8904:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8904:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8877:52:1"},{"expression":{"arguments":[{"id":714,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"8961:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8979:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8971:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"8971:7:1","typeDescriptions":{}}},"id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8971:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":719,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"8983:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"8987:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":721,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"8992:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":722,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9001:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":713,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"8940:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8940:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":724,"nodeType":"ExpressionStatement","src":"8940:66:1"},{"expression":{"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":725,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"9017:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":728,"indexExpression":{"id":726,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"9027:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9017:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":729,"indexExpression":{"id":727,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"9031:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9017:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":730,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"9038:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9017:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":732,"nodeType":"ExpressionStatement","src":"9017:27:1"},{"eventCall":{"arguments":[{"id":734,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"9074:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9092:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9084:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"9084:7:1","typeDescriptions":{}}},"id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9084:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":739,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"9096:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":740,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"9100:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":741,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"9104:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":733,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"9059:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9059:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":743,"nodeType":"EmitStatement","src":"9054:57:1"},{"expression":{"arguments":[{"id":745,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"9142:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9160:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"9152:7:1","typeDescriptions":{}}},"id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":750,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"9164:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":751,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"9168:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":752,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"9173:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":753,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9182:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":744,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"9122:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9122:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"ExpressionStatement","src":"9122:65:1"},{"expression":{"arguments":[{"id":757,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"9229:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9247:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9239:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"9239:7:1","typeDescriptions":{}}},"id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9239:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":762,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"9251:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":763,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"9255:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":764,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"9259:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":765,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9267:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":756,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"9198:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9198:74:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":767,"nodeType":"ExpressionStatement","src":"9198:74:1"}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"8241:362:1","text":" @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":769,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8617:5:1","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"to","nameLocation":"8631:2:1","nodeType":"VariableDeclaration","scope":769,"src":"8623:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"8623:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":673,"mutability":"mutable","name":"id","nameLocation":"8643:2:1","nodeType":"VariableDeclaration","scope":769,"src":"8635:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":675,"mutability":"mutable","name":"amount","nameLocation":"8655:6:1","nodeType":"VariableDeclaration","scope":769,"src":"8647:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":674,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"data","nameLocation":"8676:4:1","nodeType":"VariableDeclaration","scope":769,"src":"8663:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":676,"name":"bytes","nodeType":"ElementaryTypeName","src":"8663:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8622:59:1"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[],"src":"8699:0:1"},"scope":1335,"src":"8608:671:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":879,"nodeType":"Block","src":"9823:637:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"9841:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9855:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9847:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"9847:7:1","typeDescriptions":{}}},"id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9847:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9841:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9859:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":783,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9833:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9833:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"ExpressionStatement","src":"9833:62:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":794,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"9913:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9917:6:1","memberName":"length","nodeType":"MemberAccess","src":"9913:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":796,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"9927:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9935:6:1","memberName":"length","nodeType":"MemberAccess","src":"9927:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9913:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9943:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":793,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9905:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9905:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":801,"nodeType":"ExpressionStatement","src":"9905:81:1"},{"assignments":[803],"declarations":[{"constant":false,"id":803,"mutability":"mutable","name":"operator","nameLocation":"10005:8:1","nodeType":"VariableDeclaration","scope":879,"src":"9997:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"9997:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":806,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":804,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10016:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10016:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9997:31:1"},{"expression":{"arguments":[{"id":808,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"10060:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:1","typeDescriptions":{}}},"id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":813,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10082:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":814,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10086:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":815,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10091:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":816,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10100:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":807,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"10039:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10039:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"10039:66:1"},{"body":{"id":842,"nodeType":"Block","src":"10157:60:1","statements":[{"expression":{"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":830,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"10171:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":835,"indexExpression":{"baseExpression":{"id":831,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10181:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":833,"indexExpression":{"id":832,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10185:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10181:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10171:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":836,"indexExpression":{"id":834,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10189:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10171:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":837,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10196:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":839,"indexExpression":{"id":838,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10204:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10196:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":841,"nodeType":"ExpressionStatement","src":"10171:35:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":823,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10136:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":824,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10140:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10144:6:1","memberName":"length","nodeType":"MemberAccess","src":"10140:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10136:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":843,"initializationExpression":{"assignments":[820],"declarations":[{"constant":false,"id":820,"mutability":"mutable","name":"i","nameLocation":"10129:1:1","nodeType":"VariableDeclaration","scope":843,"src":"10121:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"10121:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":822,"initialValue":{"hexValue":"30","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10133:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10121:13:1"},"loopExpression":{"expression":{"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10152:3:1","subExpression":{"id":827,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10152:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":829,"nodeType":"ExpressionStatement","src":"10152:3:1"},"nodeType":"ForStatement","src":"10116:101:1"},{"eventCall":{"arguments":[{"id":845,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"10246:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10264:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10256:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"10256:7:1","typeDescriptions":{}}},"id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10256:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":850,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10268:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":851,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10272:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":852,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10277:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":844,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"10232:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10232:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":854,"nodeType":"EmitStatement","src":"10227:58:1"},{"expression":{"arguments":[{"id":856,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"10316:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10334:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10326:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"10326:7:1","typeDescriptions":{}}},"id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10326:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":861,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10338:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":862,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10342:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":863,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10347:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":864,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10356:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":855,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"10296:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10296:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":866,"nodeType":"ExpressionStatement","src":"10296:65:1"},{"expression":{"arguments":[{"id":868,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"10408:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10426:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10418:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"10418:7:1","typeDescriptions":{}}},"id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10418:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":873,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10430:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":874,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10434:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":875,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10439:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":876,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10448:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":867,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"10372:35:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10372:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":878,"nodeType":"ExpressionStatement","src":"10372:81:1"}]},"documentation":{"id":770,"nodeType":"StructuredDocumentation","src":"9285:379:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":880,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"9678:10:1","nodeType":"FunctionDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"to","nameLocation":"9706:2:1","nodeType":"VariableDeclaration","scope":880,"src":"9698:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"9698:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":775,"mutability":"mutable","name":"ids","nameLocation":"9735:3:1","nodeType":"VariableDeclaration","scope":880,"src":"9718:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"9718:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":774,"nodeType":"ArrayTypeName","src":"9718:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"amounts","nameLocation":"9765:7:1","nodeType":"VariableDeclaration","scope":880,"src":"9748:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"9748:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":777,"nodeType":"ArrayTypeName","src":"9748:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"data","nameLocation":"9795:4:1","nodeType":"VariableDeclaration","scope":880,"src":"9782:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":779,"name":"bytes","nodeType":"ElementaryTypeName","src":"9782:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9688:117:1"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[],"src":"9823:0:1"},"scope":1335,"src":"9669:791:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":984,"nodeType":"Block","src":"10820:682:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":891,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"10838:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10854:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10846:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"10846:7:1","typeDescriptions":{}}},"id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10846:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10838:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10858:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":890,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10830:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10830:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":899,"nodeType":"ExpressionStatement","src":"10830:66:1"},{"assignments":[901],"declarations":[{"constant":false,"id":901,"mutability":"mutable","name":"operator","nameLocation":"10915:8:1","nodeType":"VariableDeclaration","scope":984,"src":"10907:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"10907:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":904,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":902,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10926:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10926:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10907:31:1"},{"assignments":[909],"declarations":[{"constant":false,"id":909,"mutability":"mutable","name":"ids","nameLocation":"10965:3:1","nodeType":"VariableDeclaration","scope":984,"src":"10948:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":908,"nodeType":"ArrayTypeName","src":"10948:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":913,"initialValue":{"arguments":[{"id":911,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"10989:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":910,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"10971:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10971:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10948:44:1"},{"assignments":[918],"declarations":[{"constant":false,"id":918,"mutability":"mutable","name":"amounts","nameLocation":"11019:7:1","nodeType":"VariableDeclaration","scope":984,"src":"11002:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"11002:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":917,"nodeType":"ArrayTypeName","src":"11002:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":922,"initialValue":{"arguments":[{"id":920,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"11047:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":919,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"11029:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11029:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11002:52:1"},{"expression":{"arguments":[{"id":924,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"11086:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":925,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"11096:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11110:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11102:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"11102:7:1","typeDescriptions":{}}},"id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11102:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":930,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"11114:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":931,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"11119:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11128:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":923,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"11065:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11065:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":934,"nodeType":"ExpressionStatement","src":"11065:66:1"},{"assignments":[936],"declarations":[{"constant":false,"id":936,"mutability":"mutable","name":"fromBalance","nameLocation":"11150:11:1","nodeType":"VariableDeclaration","scope":984,"src":"11142:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"11142:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":942,"initialValue":{"baseExpression":{"baseExpression":{"id":937,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"11164:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":939,"indexExpression":{"id":938,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"11174:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11164:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":941,"indexExpression":{"id":940,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"11178:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11164:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11142:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":944,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"11201:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":945,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"11216:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11201:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11224:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":943,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11193:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11193:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"11193:70:1"},{"id":960,"nodeType":"UncheckedBlock","src":"11273:77:1","statements":[{"expression":{"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":950,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"11297:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":953,"indexExpression":{"id":951,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"11307:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11297:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":954,"indexExpression":{"id":952,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"11311:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11297:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":955,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"11319:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":956,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"11333:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11319:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11297:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":959,"nodeType":"ExpressionStatement","src":"11297:42:1"}]},{"eventCall":{"arguments":[{"id":962,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"11380:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":963,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"11390:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11404:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11396:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"11396:7:1","typeDescriptions":{}}},"id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11396:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":968,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"11408:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":969,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"11412:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":961,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"11365:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11365:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":971,"nodeType":"EmitStatement","src":"11360:59:1"},{"expression":{"arguments":[{"id":973,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"11450:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":974,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"11460:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11474:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11466:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"11466:7:1","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11466:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":979,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"11478:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":980,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"11483:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11492:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":972,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"11430:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11430:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":983,"nodeType":"ExpressionStatement","src":"11430:65:1"}]},"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"10466:275:1","text":" @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."},"id":985,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10755:5:1","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"from","nameLocation":"10769:4:1","nodeType":"VariableDeclaration","scope":985,"src":"10761:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"10761:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"id","nameLocation":"10783:2:1","nodeType":"VariableDeclaration","scope":985,"src":"10775:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"10775:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":887,"mutability":"mutable","name":"amount","nameLocation":"10795:6:1","nodeType":"VariableDeclaration","scope":985,"src":"10787:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":886,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10760:42:1"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"10820:0:1"},"scope":1335,"src":"10746:756:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1107,"nodeType":"Block","src":"11840:814:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":998,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"11858:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11874:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11866:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"11866:7:1","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11866:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11858:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11878:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":997,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11850:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11850:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1006,"nodeType":"ExpressionStatement","src":"11850:66:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1008,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"11934:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11938:6:1","memberName":"length","nodeType":"MemberAccess","src":"11934:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1010,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"11948:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11956:6:1","memberName":"length","nodeType":"MemberAccess","src":"11948:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11934:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11964:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":1007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11926:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11926:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1015,"nodeType":"ExpressionStatement","src":"11926:81:1"},{"assignments":[1017],"declarations":[{"constant":false,"id":1017,"mutability":"mutable","name":"operator","nameLocation":"12026:8:1","nodeType":"VariableDeclaration","scope":1107,"src":"12018:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"12018:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1020,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1018,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"12037:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12037:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12018:31:1"},{"expression":{"arguments":[{"id":1022,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"12081:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1023,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"12091:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12105:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12097:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"12097:7:1","typeDescriptions":{}}},"id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12097:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1028,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12109:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1029,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"12114:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12123:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1021,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"12060:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12060:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1032,"nodeType":"ExpressionStatement","src":"12060:66:1"},{"body":{"id":1082,"nodeType":"Block","src":"12178:323:1","statements":[{"assignments":[1045],"declarations":[{"constant":false,"id":1045,"mutability":"mutable","name":"id","nameLocation":"12200:2:1","nodeType":"VariableDeclaration","scope":1082,"src":"12192:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1044,"name":"uint256","nodeType":"ElementaryTypeName","src":"12192:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1049,"initialValue":{"baseExpression":{"id":1046,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12205:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1048,"indexExpression":{"id":1047,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"12209:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12205:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12192:19:1"},{"assignments":[1051],"declarations":[{"constant":false,"id":1051,"mutability":"mutable","name":"amount","nameLocation":"12233:6:1","nodeType":"VariableDeclaration","scope":1082,"src":"12225:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1055,"initialValue":{"baseExpression":{"id":1052,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"12242:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1054,"indexExpression":{"id":1053,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"12250:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12242:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12225:27:1"},{"assignments":[1057],"declarations":[{"constant":false,"id":1057,"mutability":"mutable","name":"fromBalance","nameLocation":"12275:11:1","nodeType":"VariableDeclaration","scope":1082,"src":"12267:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1063,"initialValue":{"baseExpression":{"baseExpression":{"id":1058,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"12289:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1060,"indexExpression":{"id":1059,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"12299:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12289:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1062,"indexExpression":{"id":1061,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"12303:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12289:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12267:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"12330:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1066,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"12345:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12330:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12353:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":1064,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12322:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12322:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1070,"nodeType":"ExpressionStatement","src":"12322:70:1"},{"id":1081,"nodeType":"UncheckedBlock","src":"12406:85:1","statements":[{"expression":{"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1071,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"12434:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1074,"indexExpression":{"id":1072,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"12444:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12434:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1075,"indexExpression":{"id":1073,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"12448:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12434:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1076,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"12456:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1077,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"12470:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12456:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12434:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1080,"nodeType":"ExpressionStatement","src":"12434:42:1"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1037,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"12157:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1038,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12161:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:6:1","memberName":"length","nodeType":"MemberAccess","src":"12161:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12157:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1083,"initializationExpression":{"assignments":[1034],"declarations":[{"constant":false,"id":1034,"mutability":"mutable","name":"i","nameLocation":"12150:1:1","nodeType":"VariableDeclaration","scope":1083,"src":"12142:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"12142:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1036,"initialValue":{"hexValue":"30","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12142:13:1"},"loopExpression":{"expression":{"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12173:3:1","subExpression":{"id":1041,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"12173:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1043,"nodeType":"ExpressionStatement","src":"12173:3:1"},"nodeType":"ForStatement","src":"12137:364:1"},{"eventCall":{"arguments":[{"id":1085,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"12530:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1086,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"12540:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12554:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12546:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"12546:7:1","typeDescriptions":{}}},"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12546:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1091,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12558:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1092,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"12563:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1084,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"12516:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12516:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1094,"nodeType":"EmitStatement","src":"12511:60:1"},{"expression":{"arguments":[{"id":1096,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"12602:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1097,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"12612:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12618:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"12618:7:1","typeDescriptions":{}}},"id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12618:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1102,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12630:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1103,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"12635:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12644:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1095,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"12582:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12582:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1106,"nodeType":"ExpressionStatement","src":"12582:65:1"}]},"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"11508:228:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length."},"id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"11750:10:1","nodeType":"FunctionDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"from","nameLocation":"11769:4:1","nodeType":"VariableDeclaration","scope":1108,"src":"11761:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"11761:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":991,"mutability":"mutable","name":"ids","nameLocation":"11792:3:1","nodeType":"VariableDeclaration","scope":1108,"src":"11775:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"11775:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":990,"nodeType":"ArrayTypeName","src":"11775:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"amounts","nameLocation":"11814:7:1","nodeType":"VariableDeclaration","scope":1108,"src":"11797:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"11797:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":993,"nodeType":"ArrayTypeName","src":"11797:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11760:62:1"},"returnParameters":{"id":996,"nodeType":"ParameterList","parameters":[],"src":"11840:0:1"},"scope":1335,"src":"11741:913:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1139,"nodeType":"Block","src":"12883:200:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1119,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"12901:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1120,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"12910:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12901:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12920:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""},"value":"ERC1155: setting approval status for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""}],"id":1118,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12893:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12893:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1124,"nodeType":"ExpressionStatement","src":"12893:71:1"},{"expression":{"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1125,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"12974:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1128,"indexExpression":{"id":1126,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"12993:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12974:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1129,"indexExpression":{"id":1127,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"13000:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12974:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1130,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"13012:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12974:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1132,"nodeType":"ExpressionStatement","src":"12974:46:1"},{"eventCall":{"arguments":[{"id":1134,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"13050:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1135,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"13057:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1136,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"13067:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1133,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"13035:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13035:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1138,"nodeType":"EmitStatement","src":"13030:46:1"}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"12660:125:1","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12799:18:1","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"owner","nameLocation":"12826:5:1","nodeType":"VariableDeclaration","scope":1140,"src":"12818:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"12818:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"operator","nameLocation":"12841:8:1","nodeType":"VariableDeclaration","scope":1140,"src":"12833:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"12833:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"approved","nameLocation":"12856:8:1","nodeType":"VariableDeclaration","scope":1140,"src":"12851:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1114,"name":"bool","nodeType":"ElementaryTypeName","src":"12851:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12817:48:1"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[],"src":"12883:0:1"},"scope":1335,"src":"12790:293:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1158,"nodeType":"Block","src":"14231:2:1","statements":[]},"documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"13089:925:1","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1159,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"14028:20:1","nodeType":"FunctionDefinition","parameters":{"id":1156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"operator","nameLocation":"14066:8:1","nodeType":"VariableDeclaration","scope":1159,"src":"14058:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"14058:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"from","nameLocation":"14092:4:1","nodeType":"VariableDeclaration","scope":1159,"src":"14084:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"14084:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"to","nameLocation":"14114:2:1","nodeType":"VariableDeclaration","scope":1159,"src":"14106:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"14106:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"ids","nameLocation":"14143:3:1","nodeType":"VariableDeclaration","scope":1159,"src":"14126:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1148,"name":"uint256","nodeType":"ElementaryTypeName","src":"14126:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1149,"nodeType":"ArrayTypeName","src":"14126:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"amounts","nameLocation":"14173:7:1","nodeType":"VariableDeclaration","scope":1159,"src":"14156:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"14156:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1152,"nodeType":"ArrayTypeName","src":"14156:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1155,"mutability":"mutable","name":"data","nameLocation":"14203:4:1","nodeType":"VariableDeclaration","scope":1159,"src":"14190:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1154,"name":"bytes","nodeType":"ElementaryTypeName","src":"14190:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14048:165:1"},"returnParameters":{"id":1157,"nodeType":"ParameterList","parameters":[],"src":"14231:0:1"},"scope":1335,"src":"14019:214:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1177,"nodeType":"Block","src":"15377:2:1","statements":[]},"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"14239:922:1","text":" @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1178,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"15175:19:1","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"operator","nameLocation":"15212:8:1","nodeType":"VariableDeclaration","scope":1178,"src":"15204:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"15204:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"from","nameLocation":"15238:4:1","nodeType":"VariableDeclaration","scope":1178,"src":"15230:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"15230:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1166,"mutability":"mutable","name":"to","nameLocation":"15260:2:1","nodeType":"VariableDeclaration","scope":1178,"src":"15252:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"15252:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"ids","nameLocation":"15289:3:1","nodeType":"VariableDeclaration","scope":1178,"src":"15272:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"15272:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1168,"nodeType":"ArrayTypeName","src":"15272:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"amounts","nameLocation":"15319:7:1","nodeType":"VariableDeclaration","scope":1178,"src":"15302:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"15302:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1171,"nodeType":"ArrayTypeName","src":"15302:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"data","nameLocation":"15349:4:1","nodeType":"VariableDeclaration","scope":1178,"src":"15336:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1173,"name":"bytes","nodeType":"ElementaryTypeName","src":"15336:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15194:165:1"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[],"src":"15377:0:1"},"scope":1335,"src":"15166:213:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1240,"nodeType":"Block","src":"15578:532:1","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1193,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"15592:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15595:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1531,"src":"15592:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15592:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1239,"nodeType":"IfStatement","src":"15588:516:1","trueBody":{"id":1238,"nodeType":"Block","src":"15609:495:1","statements":[{"clauses":[{"block":{"id":1220,"nodeType":"Block","src":"15726:184:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1209,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"15748:8:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1210,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"15760:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1498_$","typeString":"type(contract IERC1155Receiver)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15777:17:1","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1479,"src":"15760:34:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15795:8:1","memberName":"selector","nodeType":"MemberAccess","src":"15760:43:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"15748:55:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1219,"nodeType":"IfStatement","src":"15744:152:1","trueBody":{"id":1218,"nodeType":"Block","src":"15805:91:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15834:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1214,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"15827:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15827:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1217,"nodeType":"ExpressionStatement","src":"15827:50:1"}]}}]},"errorName":"","id":1221,"nodeType":"TryCatchClause","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"response","nameLocation":"15716:8:1","nodeType":"VariableDeclaration","scope":1221,"src":"15709:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1206,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15709:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"15708:17:1"},"src":"15700:210:1"},{"block":{"id":1229,"nodeType":"Block","src":"15945:47:1","statements":[{"expression":{"arguments":[{"id":1226,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"15970:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1225,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"15963:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15963:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"ExpressionStatement","src":"15963:14:1"}]},"errorName":"Error","id":1230,"nodeType":"TryCatchClause","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"reason","nameLocation":"15937:6:1","nodeType":"VariableDeclaration","scope":1230,"src":"15923:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1222,"name":"string","nodeType":"ElementaryTypeName","src":"15923:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15922:22:1"},"src":"15911:81:1"},{"block":{"id":1235,"nodeType":"Block","src":"15999:95:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572","id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16024:54:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non-ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""}],"id":1231,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16017:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16017:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1234,"nodeType":"ExpressionStatement","src":"16017:62:1"}]},"errorName":"","id":1236,"nodeType":"TryCatchClause","src":"15993:101:1"}],"externalCall":{"arguments":[{"id":1200,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"15666:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1201,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"15676:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1202,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"15682:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1203,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"15686:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1204,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"15694:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1197,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"15644:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1196,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"15627:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1498_$","typeString":"type(contract IERC1155Receiver)"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15627:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1498","typeString":"contract IERC1155Receiver"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15648:17:1","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1479,"src":"15627:38:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15627:72:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1237,"nodeType":"TryStatement","src":"15623:471:1"}]}}]},"id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeTransferAcceptanceCheck","nameLocation":"15394:30:1","nodeType":"FunctionDefinition","parameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"operator","nameLocation":"15442:8:1","nodeType":"VariableDeclaration","scope":1241,"src":"15434:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"15434:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"from","nameLocation":"15468:4:1","nodeType":"VariableDeclaration","scope":1241,"src":"15460:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1181,"name":"address","nodeType":"ElementaryTypeName","src":"15460:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"to","nameLocation":"15490:2:1","nodeType":"VariableDeclaration","scope":1241,"src":"15482:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"15482:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1186,"mutability":"mutable","name":"id","nameLocation":"15510:2:1","nodeType":"VariableDeclaration","scope":1241,"src":"15502:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"15502:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"amount","nameLocation":"15530:6:1","nodeType":"VariableDeclaration","scope":1241,"src":"15522:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"15522:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"data","nameLocation":"15559:4:1","nodeType":"VariableDeclaration","scope":1241,"src":"15546:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1189,"name":"bytes","nodeType":"ElementaryTypeName","src":"15546:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15424:145:1"},"returnParameters":{"id":1192,"nodeType":"ParameterList","parameters":[],"src":"15578:0:1"},"scope":1335,"src":"15385:725:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1305,"nodeType":"Block","src":"16334:574:1","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1258,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"16348:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16351:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1531,"src":"16348:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16348:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1304,"nodeType":"IfStatement","src":"16344:558:1","trueBody":{"id":1303,"nodeType":"Block","src":"16365:537:1","statements":[{"clauses":[{"block":{"id":1285,"nodeType":"Block","src":"16519:189:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1274,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"16541:8:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1275,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"16553:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1498_$","typeString":"type(contract IERC1155Receiver)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16570:22:1","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1497,"src":"16553:39:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16593:8:1","memberName":"selector","nodeType":"MemberAccess","src":"16553:48:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"16541:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1284,"nodeType":"IfStatement","src":"16537:157:1","trueBody":{"id":1283,"nodeType":"Block","src":"16603:91:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16632:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1279,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16625:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16625:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1282,"nodeType":"ExpressionStatement","src":"16625:50:1"}]}}]},"errorName":"","id":1286,"nodeType":"TryCatchClause","parameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"response","nameLocation":"16496:8:1","nodeType":"VariableDeclaration","scope":1286,"src":"16489:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1271,"name":"bytes4","nodeType":"ElementaryTypeName","src":"16489:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"16471:47:1"},"src":"16463:245:1"},{"block":{"id":1294,"nodeType":"Block","src":"16743:47:1","statements":[{"expression":{"arguments":[{"id":1291,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"16768:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1290,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16761:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16761:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1293,"nodeType":"ExpressionStatement","src":"16761:14:1"}]},"errorName":"Error","id":1295,"nodeType":"TryCatchClause","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"reason","nameLocation":"16735:6:1","nodeType":"VariableDeclaration","scope":1295,"src":"16721:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1287,"name":"string","nodeType":"ElementaryTypeName","src":"16721:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16720:22:1"},"src":"16709:81:1"},{"block":{"id":1300,"nodeType":"Block","src":"16797:95:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572","id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16822:54:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non-ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""}],"id":1296,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16815:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16815:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1299,"nodeType":"ExpressionStatement","src":"16815:62:1"}]},"errorName":"","id":1301,"nodeType":"TryCatchClause","src":"16791:101:1"}],"externalCall":{"arguments":[{"id":1265,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"16427:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1266,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"16437:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1267,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"16443:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1268,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"16448:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1269,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"16457:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1262,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"16400:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1261,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"16383:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1498_$","typeString":"type(contract IERC1155Receiver)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1498","typeString":"contract IERC1155Receiver"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16404:22:1","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1497,"src":"16383:43:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:79:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1302,"nodeType":"TryStatement","src":"16379:513:1"}]}}]},"id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeBatchTransferAcceptanceCheck","nameLocation":"16125:35:1","nodeType":"FunctionDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"operator","nameLocation":"16178:8:1","nodeType":"VariableDeclaration","scope":1306,"src":"16170:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"16170:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"from","nameLocation":"16204:4:1","nodeType":"VariableDeclaration","scope":1306,"src":"16196:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"16196:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"to","nameLocation":"16226:2:1","nodeType":"VariableDeclaration","scope":1306,"src":"16218:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"16218:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"ids","nameLocation":"16255:3:1","nodeType":"VariableDeclaration","scope":1306,"src":"16238:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"16238:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1249,"nodeType":"ArrayTypeName","src":"16238:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"amounts","nameLocation":"16285:7:1","nodeType":"VariableDeclaration","scope":1306,"src":"16268:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1251,"name":"uint256","nodeType":"ElementaryTypeName","src":"16268:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1252,"nodeType":"ArrayTypeName","src":"16268:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"data","nameLocation":"16315:4:1","nodeType":"VariableDeclaration","scope":1306,"src":"16302:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1254,"name":"bytes","nodeType":"ElementaryTypeName","src":"16302:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16160:165:1"},"returnParameters":{"id":1257,"nodeType":"ParameterList","parameters":[],"src":"16334:0:1"},"scope":1335,"src":"16116:792:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1333,"nodeType":"Block","src":"16998:109:1","statements":[{"assignments":[1318],"declarations":[{"constant":false,"id":1318,"mutability":"mutable","name":"array","nameLocation":"17025:5:1","nodeType":"VariableDeclaration","scope":1333,"src":"17008:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"17008:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1317,"nodeType":"ArrayTypeName","src":"17008:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1324,"initialValue":{"arguments":[{"hexValue":"31","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17047:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17033:13:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"17037:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1320,"nodeType":"ArrayTypeName","src":"17037:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17033:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17008:41:1"},{"expression":{"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1325,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"17059:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1327,"indexExpression":{"hexValue":"30","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17065:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17059:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1328,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"17070:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17059:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1330,"nodeType":"ExpressionStatement","src":"17059:18:1"},{"expression":{"id":1331,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"17095:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1313,"id":1332,"nodeType":"Return","src":"17088:12:1"}]},"id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArray","nameLocation":"16923:17:1","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"element","nameLocation":"16949:7:1","nodeType":"VariableDeclaration","scope":1334,"src":"16941:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"16941:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16940:17:1"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1334,"src":"16980:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"16980:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1311,"nodeType":"ArrayTypeName","src":"16980:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16979:18:1"},"scope":1335,"src":"16914:193:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1336,"src":"570:16539:1","usedErrors":[],"usedEvents":[1354,1369,1378,1385]}],"src":"109:17001:1"},"id":1},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1457],"IERC165":[1982]},"id":1458,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1337,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1338,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1458,"sourceUnit":1983,"src":"135:47:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1340,"name":"IERC165","nameLocations":["372:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"372:7:2"},"id":1341,"nodeType":"InheritanceSpecifier","src":"372:7:2"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1339,"nodeType":"StructuredDocumentation","src":"184:165:2","text":" @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":1457,"linearizedBaseContracts":[1457,1982],"name":"IERC1155","nameLocation":"360:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1342,"nodeType":"StructuredDocumentation","src":"386:121:2","text":" @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1354,"name":"TransferSingle","nameLocation":"518:14:2","nodeType":"EventDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"549:8:2","nodeType":"VariableDeclaration","scope":1354,"src":"533:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"533:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1346,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"575:4:2","nodeType":"VariableDeclaration","scope":1354,"src":"559:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"559:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1348,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"597:2:2","nodeType":"VariableDeclaration","scope":1354,"src":"581:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"609:2:2","nodeType":"VariableDeclaration","scope":1354,"src":"601:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1352,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"621:5:2","nodeType":"VariableDeclaration","scope":1354,"src":"613:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1351,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"532:95:2"},"src":"512:116:2"},{"anonymous":false,"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"634:144:2","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1369,"name":"TransferBatch","nameLocation":"789:13:2","nodeType":"EventDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"828:8:2","nodeType":"VariableDeclaration","scope":1369,"src":"812:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1356,"name":"address","nodeType":"ElementaryTypeName","src":"812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1359,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"862:4:2","nodeType":"VariableDeclaration","scope":1369,"src":"846:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"846:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1361,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"892:2:2","nodeType":"VariableDeclaration","scope":1369,"src":"876:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1364,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"914:3:2","nodeType":"VariableDeclaration","scope":1369,"src":"904:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"904:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1363,"nodeType":"ArrayTypeName","src":"904:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1367,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"937:6:2","nodeType":"VariableDeclaration","scope":1369,"src":"927:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"927:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1366,"nodeType":"ArrayTypeName","src":"927:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"802:147:2"},"src":"783:167:2"},{"anonymous":false,"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"956:147:2","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1378,"name":"ApprovalForAll","nameLocation":"1114:14:2","nodeType":"EventDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1145:7:2","nodeType":"VariableDeclaration","scope":1378,"src":"1129:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1170:8:2","nodeType":"VariableDeclaration","scope":1378,"src":"1154:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1376,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1185:8:2","nodeType":"VariableDeclaration","scope":1378,"src":"1180:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1375,"name":"bool","nodeType":"ElementaryTypeName","src":"1180:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1128:66:2"},"src":"1108:87:2"},{"anonymous":false,"documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"1201:343:2","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1385,"name":"URI","nameLocation":"1555:3:2","nodeType":"EventDefinition","parameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1566:5:2","nodeType":"VariableDeclaration","scope":1385,"src":"1559:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1380,"name":"string","nodeType":"ElementaryTypeName","src":"1559:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1383,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1589:2:2","nodeType":"VariableDeclaration","scope":1385,"src":"1573:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1573:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1558:34:2"},"src":"1549:44:2"},{"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"1599:173:2","text":" @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":1395,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1786:9:2","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"account","nameLocation":"1804:7:2","nodeType":"VariableDeclaration","scope":1395,"src":"1796:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1387,"name":"address","nodeType":"ElementaryTypeName","src":"1796:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"id","nameLocation":"1821:2:2","nodeType":"VariableDeclaration","scope":1395,"src":"1813:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1795:29:2"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"1848:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"1848:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1847:9:2"},"scope":1457,"src":"1777:80:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"1863:188:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1408,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2065:14:2","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"accounts","nameLocation":"2108:8:2","nodeType":"VariableDeclaration","scope":1408,"src":"2089:27:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1397,"name":"address","nodeType":"ElementaryTypeName","src":"2089:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1398,"nodeType":"ArrayTypeName","src":"2089:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"ids","nameLocation":"2145:3:2","nodeType":"VariableDeclaration","scope":1408,"src":"2126:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1401,"nodeType":"ArrayTypeName","src":"2126:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2079:75:2"},"returnParameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1408,"src":"2178:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"2178:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1405,"nodeType":"ArrayTypeName","src":"2178:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2177:18:2"},"scope":1457,"src":"2056:140:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1409,"nodeType":"StructuredDocumentation","src":"2202:248:2","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."},"functionSelector":"a22cb465","id":1416,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2464:17:2","nodeType":"FunctionDefinition","parameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"operator","nameLocation":"2490:8:2","nodeType":"VariableDeclaration","scope":1416,"src":"2482:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1410,"name":"address","nodeType":"ElementaryTypeName","src":"2482:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"approved","nameLocation":"2505:8:2","nodeType":"VariableDeclaration","scope":1416,"src":"2500:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1412,"name":"bool","nodeType":"ElementaryTypeName","src":"2500:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2481:33:2"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[],"src":"2523:0:2"},"scope":1457,"src":"2455:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"2530:135:2","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1426,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2679:16:2","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"account","nameLocation":"2704:7:2","nodeType":"VariableDeclaration","scope":1426,"src":"2696:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"2696:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"operator","nameLocation":"2721:8:2","nodeType":"VariableDeclaration","scope":1426,"src":"2713:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2695:35:2"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1426,"src":"2754:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1423,"name":"bool","nodeType":"ElementaryTypeName","src":"2754:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2753:6:2"},"scope":1457,"src":"2670:90:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"2766:556:2","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1440,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3336:16:2","nodeType":"FunctionDefinition","parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"from","nameLocation":"3361:4:2","nodeType":"VariableDeclaration","scope":1440,"src":"3353:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"3353:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"to","nameLocation":"3375:2:2","nodeType":"VariableDeclaration","scope":1440,"src":"3367:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1430,"name":"address","nodeType":"ElementaryTypeName","src":"3367:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"id","nameLocation":"3387:2:2","nodeType":"VariableDeclaration","scope":1440,"src":"3379:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3379:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"amount","nameLocation":"3399:6:2","nodeType":"VariableDeclaration","scope":1440,"src":"3391:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"3391:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"data","nameLocation":"3422:4:2","nodeType":"VariableDeclaration","scope":1440,"src":"3407:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1436,"name":"bytes","nodeType":"ElementaryTypeName","src":"3407:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3352:75:2"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[],"src":"3436:0:2"},"scope":1457,"src":"3327:110:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1441,"nodeType":"StructuredDocumentation","src":"3443:390:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1456,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3847:21:2","nodeType":"FunctionDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1443,"mutability":"mutable","name":"from","nameLocation":"3886:4:2","nodeType":"VariableDeclaration","scope":1456,"src":"3878:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1445,"mutability":"mutable","name":"to","nameLocation":"3908:2:2","nodeType":"VariableDeclaration","scope":1456,"src":"3900:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"3900:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"ids","nameLocation":"3939:3:2","nodeType":"VariableDeclaration","scope":1456,"src":"3920:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"3920:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1447,"nodeType":"ArrayTypeName","src":"3920:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"amounts","nameLocation":"3971:7:2","nodeType":"VariableDeclaration","scope":1456,"src":"3952:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1449,"name":"uint256","nodeType":"ElementaryTypeName","src":"3952:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1450,"nodeType":"ArrayTypeName","src":"3952:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"data","nameLocation":"4003:4:2","nodeType":"VariableDeclaration","scope":1456,"src":"3988:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1452,"name":"bytes","nodeType":"ElementaryTypeName","src":"3988:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3868:145:2"},"returnParameters":{"id":1455,"nodeType":"ParameterList","parameters":[],"src":"4022:0:2"},"scope":1457,"src":"3838:185:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1458,"src":"350:3675:2","usedErrors":[],"usedEvents":[1354,1369,1378,1385]}],"src":"110:3916:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1498],"IERC165":[1982]},"id":1499,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1459,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1499,"sourceUnit":1983,"src":"143:47:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1462,"name":"IERC165","nameLocations":["262:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"262:7:3"},"id":1463,"nodeType":"InheritanceSpecifier","src":"262:7:3"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"192:39:3","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":1498,"linearizedBaseContracts":[1498,1982],"name":"IERC1155Receiver","nameLocation":"242:16:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1464,"nodeType":"StructuredDocumentation","src":"276:826:3","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1479,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1116:17:3","nodeType":"FunctionDefinition","parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"operator","nameLocation":"1151:8:3","nodeType":"VariableDeclaration","scope":1479,"src":"1143:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1468,"mutability":"mutable","name":"from","nameLocation":"1177:4:3","nodeType":"VariableDeclaration","scope":1479,"src":"1169:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1470,"mutability":"mutable","name":"id","nameLocation":"1199:2:3","nodeType":"VariableDeclaration","scope":1479,"src":"1191:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"value","nameLocation":"1219:5:3","nodeType":"VariableDeclaration","scope":1479,"src":"1211:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"data","nameLocation":"1249:4:3","nodeType":"VariableDeclaration","scope":1479,"src":"1234:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1473,"name":"bytes","nodeType":"ElementaryTypeName","src":"1234:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1133:126:3"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1479,"src":"1278:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1476,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1278:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1277:8:3"},"scope":1498,"src":"1107:179:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"1292:994:3","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1497,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2300:22:3","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"operator","nameLocation":"2340:8:3","nodeType":"VariableDeclaration","scope":1497,"src":"2332:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1481,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1484,"mutability":"mutable","name":"from","nameLocation":"2366:4:3","nodeType":"VariableDeclaration","scope":1497,"src":"2358:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"2358:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1487,"mutability":"mutable","name":"ids","nameLocation":"2399:3:3","nodeType":"VariableDeclaration","scope":1497,"src":"2380:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1486,"nodeType":"ArrayTypeName","src":"2380:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"values","nameLocation":"2431:6:3","nodeType":"VariableDeclaration","scope":1497,"src":"2412:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"2412:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1489,"nodeType":"ArrayTypeName","src":"2412:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"data","nameLocation":"2462:4:3","nodeType":"VariableDeclaration","scope":1497,"src":"2447:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1491,"name":"bytes","nodeType":"ElementaryTypeName","src":"2447:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2322:150:3"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1497,"src":"2491:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1494,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2491:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2490:8:3"},"scope":1498,"src":"2291:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1499,"src":"232:2269:3","usedErrors":[],"usedEvents":[]}],"src":"118:2384:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1457],"IERC1155MetadataURI":[1513],"IERC165":[1982]},"id":1514,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1500,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"117:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1501,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1514,"sourceUnit":1458,"src":"142:25:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1503,"name":"IERC1155","nameLocations":["397:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1457,"src":"397:8:4"},"id":1504,"nodeType":"InheritanceSpecifier","src":"397:8:4"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"169:194:4","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":1513,"linearizedBaseContracts":[1513,1457,1982],"name":"IERC1155MetadataURI","nameLocation":"374:19:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"412:192:4","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1512,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"618:3:4","nodeType":"FunctionDefinition","parameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"id","nameLocation":"630:2:4","nodeType":"VariableDeclaration","scope":1512,"src":"622:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"622:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"621:12:4"},"returnParameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1512,"src":"657:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1509,"name":"string","nodeType":"ElementaryTypeName","src":"657:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"656:15:4"},"scope":1513,"src":"609:63:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1514,"src":"364:310:4","usedErrors":[],"usedEvents":[1354,1369,1378,1385]}],"src":"117:558:4"},"id":4},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1843]},"id":1844,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1515,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1516,"nodeType":"StructuredDocumentation","src":"126:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1843,"linearizedBaseContracts":[1843],"name":"Address","nameLocation":"202:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1530,"nodeType":"Block","src":"1478:254:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1524,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"1702:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:5","memberName":"code","nodeType":"MemberAccess","src":"1702:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:5","memberName":"length","nodeType":"MemberAccess","src":"1702:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1523,"id":1529,"nodeType":"Return","src":"1695:30:5"}]},"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"216:1191:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1531,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:5","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"account","nameLocation":"1440:7:5","nodeType":"VariableDeclaration","scope":1531,"src":"1432:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:5"},"returnParameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"1472:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1521,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:5"},"scope":1843,"src":"1412:320:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1564,"nodeType":"Block","src":"2718:241:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1542,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1843","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1843","typeString":"library Address"}],"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:5","typeDescriptions":{}}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:5","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1545,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"2761:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1539,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1549,"nodeType":"ExpressionStatement","src":"2728:73:5"},{"assignments":[1551,null],"declarations":[{"constant":false,"id":1551,"mutability":"mutable","name":"success","nameLocation":"2818:7:5","nodeType":"VariableDeclaration","scope":1564,"src":"2813:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1550,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1558,"initialValue":{"arguments":[{"hexValue":"","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1552,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"2831:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:5","memberName":"call","nodeType":"MemberAccess","src":"2831:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1554,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"2853:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:5"},{"expression":{"arguments":[{"id":1560,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"2882:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1559,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1563,"nodeType":"ExpressionStatement","src":"2874:78:5"}]},"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"1738:904:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1565,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:5","nodeType":"FunctionDefinition","parameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:5","nodeType":"VariableDeclaration","scope":1565,"src":"2666:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1536,"mutability":"mutable","name":"amount","nameLocation":"2701:6:5","nodeType":"VariableDeclaration","scope":1565,"src":"2693:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1535,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:5"},"returnParameters":{"id":1538,"nodeType":"ParameterList","parameters":[],"src":"2718:0:5"},"scope":1843,"src":"2647:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1582,"nodeType":"Block","src":"3790:96:5","statements":[{"expression":{"arguments":[{"id":1576,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"3829:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1577,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"3837:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1575,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1623,1667],"referencedDeclaration":1667,"src":"3807:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1574,"id":1581,"nodeType":"Return","src":"3800:79:5"}]},"documentation":{"id":1566,"nodeType":"StructuredDocumentation","src":"2965:731:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1583,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:5","nodeType":"FunctionDefinition","parameters":{"id":1571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"target","nameLocation":"3731:6:5","nodeType":"VariableDeclaration","scope":1583,"src":"3723:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1567,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1570,"mutability":"mutable","name":"data","nameLocation":"3752:4:5","nodeType":"VariableDeclaration","scope":1583,"src":"3739:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1569,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:5"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1583,"src":"3776:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1572,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:5"},"scope":1843,"src":"3701:185:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1602,"nodeType":"Block","src":"4255:76:5","statements":[{"expression":{"arguments":[{"id":1596,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"4294:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1597,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"4302:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1599,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"4311:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1595,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1623,1667],"referencedDeclaration":1667,"src":"4272:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1594,"id":1601,"nodeType":"Return","src":"4265:59:5"}]},"documentation":{"id":1584,"nodeType":"StructuredDocumentation","src":"3892:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1603,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:5","nodeType":"FunctionDefinition","parameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"target","nameLocation":"4147:6:5","nodeType":"VariableDeclaration","scope":1603,"src":"4139:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"data","nameLocation":"4176:4:5","nodeType":"VariableDeclaration","scope":1603,"src":"4163:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1587,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1590,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:5","nodeType":"VariableDeclaration","scope":1603,"src":"4190:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1589,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:5"},"returnParameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1603,"src":"4241:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1592,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:5"},"scope":1843,"src":"4108:223:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1622,"nodeType":"Block","src":"4806:111:5","statements":[{"expression":{"arguments":[{"id":1616,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"4845:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1617,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"4853:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"4859:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1615,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1623,1667],"referencedDeclaration":1667,"src":"4823:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1614,"id":1621,"nodeType":"Return","src":"4816:94:5"}]},"documentation":{"id":1604,"nodeType":"StructuredDocumentation","src":"4337:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1623,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:5","nodeType":"FunctionDefinition","parameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"target","nameLocation":"4732:6:5","nodeType":"VariableDeclaration","scope":1623,"src":"4724:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1608,"mutability":"mutable","name":"data","nameLocation":"4753:4:5","nodeType":"VariableDeclaration","scope":1623,"src":"4740:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1607,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1610,"mutability":"mutable","name":"value","nameLocation":"4767:5:5","nodeType":"VariableDeclaration","scope":1623,"src":"4759:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:5"},"returnParameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1623,"src":"4792:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1612,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:5"},"scope":1843,"src":"4693:224:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1666,"nodeType":"Block","src":"5344:267:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1640,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1843","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1843","typeString":"library Address"}],"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:5","typeDescriptions":{}}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:5","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"5387:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1637,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1647,"nodeType":"ExpressionStatement","src":"5354:81:5"},{"assignments":[1649,1651],"declarations":[{"constant":false,"id":1649,"mutability":"mutable","name":"success","nameLocation":"5451:7:5","nodeType":"VariableDeclaration","scope":1666,"src":"5446:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1648,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1651,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:5","nodeType":"VariableDeclaration","scope":1666,"src":"5460:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1650,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1658,"initialValue":{"arguments":[{"id":1656,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"5513:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1652,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"5487:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:5","memberName":"call","nodeType":"MemberAccess","src":"5487:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"5506:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:5"},{"expression":{"arguments":[{"id":1660,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"5562:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1661,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5570:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1662,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"5579:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1663,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"5591:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1659,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"5535:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1636,"id":1665,"nodeType":"Return","src":"5528:76:5"}]},"documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"4923:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1667,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:5","nodeType":"FunctionDefinition","parameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"target","nameLocation":"5213:6:5","nodeType":"VariableDeclaration","scope":1667,"src":"5205:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1625,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1628,"mutability":"mutable","name":"data","nameLocation":"5242:4:5","nodeType":"VariableDeclaration","scope":1667,"src":"5229:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1627,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1630,"mutability":"mutable","name":"value","nameLocation":"5264:5:5","nodeType":"VariableDeclaration","scope":1667,"src":"5256:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1629,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1632,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:5","nodeType":"VariableDeclaration","scope":1667,"src":"5279:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1631,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:5"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1667,"src":"5330:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1634,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:5"},"scope":1843,"src":"5165:446:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1683,"nodeType":"Block","src":"5888:97:5","statements":[{"expression":{"arguments":[{"id":1678,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"5924:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1679,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"5932:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1677,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1684,1713],"referencedDeclaration":1713,"src":"5905:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1676,"id":1682,"nodeType":"Return","src":"5898:80:5"}]},"documentation":{"id":1668,"nodeType":"StructuredDocumentation","src":"5617:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1684,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:5","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"target","nameLocation":"5824:6:5","nodeType":"VariableDeclaration","scope":1684,"src":"5816:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1669,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1672,"mutability":"mutable","name":"data","nameLocation":"5845:4:5","nodeType":"VariableDeclaration","scope":1684,"src":"5832:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1671,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:5"},"returnParameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1684,"src":"5874:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1674,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:5"},"scope":1843,"src":"5788:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1712,"nodeType":"Block","src":"6327:168:5","statements":[{"assignments":[1697,1699],"declarations":[{"constant":false,"id":1697,"mutability":"mutable","name":"success","nameLocation":"6343:7:5","nodeType":"VariableDeclaration","scope":1712,"src":"6338:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1696,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1699,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:5","nodeType":"VariableDeclaration","scope":1712,"src":"6352:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1698,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1704,"initialValue":{"arguments":[{"id":1702,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"6397:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1700,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"6379:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:5","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:5"},{"expression":{"arguments":[{"id":1706,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"6446:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1707,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"6454:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1708,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6463:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1709,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"6475:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1705,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"6419:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1695,"id":1711,"nodeType":"Return","src":"6412:76:5"}]},"documentation":{"id":1685,"nodeType":"StructuredDocumentation","src":"5991:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:5","nodeType":"FunctionDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"target","nameLocation":"6214:6:5","nodeType":"VariableDeclaration","scope":1713,"src":"6206:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1686,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1689,"mutability":"mutable","name":"data","nameLocation":"6243:4:5","nodeType":"VariableDeclaration","scope":1713,"src":"6230:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1688,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:5","nodeType":"VariableDeclaration","scope":1713,"src":"6257:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1690,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:5"},"returnParameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1713,"src":"6313:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1693,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:5"},"scope":1843,"src":"6169:326:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1729,"nodeType":"Block","src":"6771:101:5","statements":[{"expression":{"arguments":[{"id":1724,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"6809:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1725,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"6817:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1723,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1730,1759],"referencedDeclaration":1759,"src":"6788:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1722,"id":1728,"nodeType":"Return","src":"6781:84:5"}]},"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"6501:168:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1730,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:5","nodeType":"FunctionDefinition","parameters":{"id":1719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"target","nameLocation":"6712:6:5","nodeType":"VariableDeclaration","scope":1730,"src":"6704:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1718,"mutability":"mutable","name":"data","nameLocation":"6733:4:5","nodeType":"VariableDeclaration","scope":1730,"src":"6720:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1717,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:5"},"returnParameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1730,"src":"6757:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1720,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:5"},"scope":1843,"src":"6674:198:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1758,"nodeType":"Block","src":"7213:170:5","statements":[{"assignments":[1743,1745],"declarations":[{"constant":false,"id":1743,"mutability":"mutable","name":"success","nameLocation":"7229:7:5","nodeType":"VariableDeclaration","scope":1758,"src":"7224:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1742,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1745,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:5","nodeType":"VariableDeclaration","scope":1758,"src":"7238:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1744,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1750,"initialValue":{"arguments":[{"id":1748,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"7285:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1746,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"7265:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:5","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:5","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:5"},{"expression":{"arguments":[{"id":1752,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"7334:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1753,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"7342:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1754,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"7351:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1755,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"7363:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1751,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"7307:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1741,"id":1757,"nodeType":"Return","src":"7300:76:5"}]},"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"6878:175:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1759,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:5","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"target","nameLocation":"7105:6:5","nodeType":"VariableDeclaration","scope":1759,"src":"7097:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"data","nameLocation":"7134:4:5","nodeType":"VariableDeclaration","scope":1759,"src":"7121:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1734,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:5","nodeType":"VariableDeclaration","scope":1759,"src":"7148:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1736,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:5"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1759,"src":"7199:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1739,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:5"},"scope":1843,"src":"7058:325:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1797,"nodeType":"Block","src":"7865:434:5","statements":[{"condition":{"id":1773,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"7879:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1795,"nodeType":"Block","src":"8235:58:5","statements":[{"expression":{"arguments":[{"id":1791,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"8257:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1792,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"8269:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1790,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"8249:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1794,"nodeType":"ExpressionStatement","src":"8249:33:5"}]},"id":1796,"nodeType":"IfStatement","src":"7875:418:5","trueBody":{"id":1789,"nodeType":"Block","src":"7888:341:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1774,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"7906:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:5","memberName":"length","nodeType":"MemberAccess","src":"7906:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1786,"nodeType":"IfStatement","src":"7902:286:5","trueBody":{"id":1785,"nodeType":"Block","src":"7930:258:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1780,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"8132:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1779,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"8121:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1778,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1784,"nodeType":"ExpressionStatement","src":"8113:60:5"}]}},{"expression":{"id":1787,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"8208:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1772,"id":1788,"nodeType":"Return","src":"8201:17:5"}]}}]},"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"7389:277:5","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1798,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:5","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"target","nameLocation":"7724:6:5","nodeType":"VariableDeclaration","scope":1798,"src":"7716:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"success","nameLocation":"7745:7:5","nodeType":"VariableDeclaration","scope":1798,"src":"7740:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1763,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:5","nodeType":"VariableDeclaration","scope":1798,"src":"7762:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1765,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1768,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:5","nodeType":"VariableDeclaration","scope":1798,"src":"7795:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1767,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:5"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1798,"src":"7851:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1770,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:5"},"scope":1843,"src":"7671:628:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1821,"nodeType":"Block","src":"8680:135:5","statements":[{"condition":{"id":1810,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"8694:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1819,"nodeType":"Block","src":"8751:58:5","statements":[{"expression":{"arguments":[{"id":1815,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"8773:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1816,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"8785:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1814,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"8765:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1818,"nodeType":"ExpressionStatement","src":"8765:33:5"}]},"id":1820,"nodeType":"IfStatement","src":"8690:119:5","trueBody":{"id":1813,"nodeType":"Block","src":"8703:42:5","statements":[{"expression":{"id":1811,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"8724:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1809,"id":1812,"nodeType":"Return","src":"8717:17:5"}]}}]},"documentation":{"id":1799,"nodeType":"StructuredDocumentation","src":"8305:210:5","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1822,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:5","nodeType":"FunctionDefinition","parameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"success","nameLocation":"8560:7:5","nodeType":"VariableDeclaration","scope":1822,"src":"8555:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1800,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1803,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:5","nodeType":"VariableDeclaration","scope":1822,"src":"8577:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1802,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1805,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:5","nodeType":"VariableDeclaration","scope":1822,"src":"8610:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1804,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:5"},"returnParameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1822,"src":"8666:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1807,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:5"},"scope":1843,"src":"8520:295:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1841,"nodeType":"Block","src":"8904:457:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1829,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"8980:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:5","memberName":"length","nodeType":"MemberAccess","src":"8980:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1839,"nodeType":"Block","src":"9310:45:5","statements":[{"expression":{"arguments":[{"id":1836,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"9331:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1835,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1838,"nodeType":"ExpressionStatement","src":"9324:20:5"}]},"id":1840,"nodeType":"IfStatement","src":"8976:379:5","trueBody":{"id":1834,"nodeType":"Block","src":"9003:301:5","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:5","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:5"},"nodeType":"YulFunctionCall","src":"9202:17:5"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:5","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:5"},"nodeType":"YulFunctionCall","src":"9243:19:5"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:5"},"nodeType":"YulFunctionCall","src":"9236:44:5"},"nodeType":"YulExpressionStatement","src":"9236:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1824,"isOffset":false,"isSlot":false,"src":"9208:10:5","valueSize":1},{"declaration":1824,"isOffset":false,"isSlot":false,"src":"9251:10:5","valueSize":1}],"id":1833,"nodeType":"InlineAssembly","src":"9152:142:5"}]}}]},"id":1842,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:5","nodeType":"FunctionDefinition","parameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:5","nodeType":"VariableDeclaration","scope":1842,"src":"8838:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1823,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1826,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:5","nodeType":"VariableDeclaration","scope":1842,"src":"8863:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1825,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:5"},"returnParameters":{"id":1828,"nodeType":"ParameterList","parameters":[],"src":"8904:0:5"},"scope":1843,"src":"8821:540:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1844,"src":"194:9169:5","usedErrors":[],"usedEvents":[]}],"src":"101:9263:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1865]},"id":1866,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1845,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1846,"nodeType":"StructuredDocumentation","src":"111:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1865,"linearizedBaseContracts":[1865],"name":"Context","nameLocation":"626:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1854,"nodeType":"Block","src":"702:34:6","statements":[{"expression":{"expression":{"id":1851,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:6","memberName":"sender","nodeType":"MemberAccess","src":"719:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1850,"id":1853,"nodeType":"Return","src":"712:17:6"}]},"id":1855,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:6","nodeType":"FunctionDefinition","parameters":{"id":1847,"nodeType":"ParameterList","parameters":[],"src":"659:2:6"},"returnParameters":{"id":1850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1855,"src":"693:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1848,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:6"},"scope":1865,"src":"640:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1863,"nodeType":"Block","src":"809:32:6","statements":[{"expression":{"expression":{"id":1860,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:6","memberName":"data","nodeType":"MemberAccess","src":"826:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1859,"id":1862,"nodeType":"Return","src":"819:15:6"}]},"id":1864,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:6","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[],"src":"759:2:6"},"returnParameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1864,"src":"793:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1857,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:6"},"scope":1865,"src":"742:99:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1866,"src":"608:235:6","usedErrors":[],"usedEvents":[]}],"src":"86:758:6"},"id":6},"@openzeppelin/contracts/utils/Create2.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","exportedSymbols":{"Create2":[1946]},"id":1947,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1867,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Create2","contractDependencies":[],"contractKind":"library","documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"126:367:7","text":" @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."},"fullyImplemented":true,"id":1946,"linearizedBaseContracts":[1946],"name":"Create2","nameLocation":"502:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1910,"nodeType":"Block","src":"1182:383:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1883,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1208:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$1946","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$1946","typeString":"library Create2"}],"id":1882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1200:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1881,"name":"address","nodeType":"ElementaryTypeName","src":"1200:7:7","typeDescriptions":{}}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1200:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1214:7:7","memberName":"balance","nodeType":"MemberAccess","src":"1200:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1886,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"1225:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1200:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"437265617465323a20696e73756666696369656e742062616c616e6365","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1233:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca","typeString":"literal_string \"Create2: insufficient balance\""},"value":"Create2: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca","typeString":"literal_string \"Create2: insufficient balance\""}],"id":1880,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1192:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1192:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1890,"nodeType":"ExpressionStatement","src":"1192:73:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1892,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"1283:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1292:6:7","memberName":"length","nodeType":"MemberAccess","src":"1283:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1302:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1283:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"437265617465323a2062797465636f6465206c656e677468206973207a65726f","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1305:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0","typeString":"literal_string \"Create2: bytecode length is zero\""},"value":"Create2: bytecode length is zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0","typeString":"literal_string \"Create2: bytecode length is zero\""}],"id":1891,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1275:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1275:65:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1898,"nodeType":"ExpressionStatement","src":"1275:65:7"},{"AST":{"nodeType":"YulBlock","src":"1402:91:7","statements":[{"nodeType":"YulAssignment","src":"1416:67:7","value":{"arguments":[{"name":"amount","nodeType":"YulIdentifier","src":"1432:6:7"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1444:8:7"},{"kind":"number","nodeType":"YulLiteral","src":"1454:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1440:3:7"},"nodeType":"YulFunctionCall","src":"1440:19:7"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1467:8:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1461:5:7"},"nodeType":"YulFunctionCall","src":"1461:15:7"},{"name":"salt","nodeType":"YulIdentifier","src":"1478:4:7"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"1424:7:7"},"nodeType":"YulFunctionCall","src":"1424:59:7"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"1416:4:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1878,"isOffset":false,"isSlot":false,"src":"1416:4:7","valueSize":1},{"declaration":1871,"isOffset":false,"isSlot":false,"src":"1432:6:7","valueSize":1},{"declaration":1875,"isOffset":false,"isSlot":false,"src":"1444:8:7","valueSize":1},{"declaration":1875,"isOffset":false,"isSlot":false,"src":"1467:8:7","valueSize":1},{"declaration":1873,"isOffset":false,"isSlot":false,"src":"1478:4:7","valueSize":1}],"id":1899,"nodeType":"InlineAssembly","src":"1393:100:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1901,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"1510:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1526:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1518:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1902,"name":"address","nodeType":"ElementaryTypeName","src":"1518:7:7","typeDescriptions":{}}},"id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1518:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1510:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"437265617465323a204661696c6564206f6e206465706c6f79","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1530:27:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676","typeString":"literal_string \"Create2: Failed on deploy\""},"value":"Create2: Failed on deploy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676","typeString":"literal_string \"Create2: Failed on deploy\""}],"id":1900,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1502:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1502:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1909,"nodeType":"ExpressionStatement","src":"1502:56:7"}]},"documentation":{"id":1869,"nodeType":"StructuredDocumentation","src":"516:560:7","text":" @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."},"id":1911,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"1090:6:7","nodeType":"FunctionDefinition","parameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1871,"mutability":"mutable","name":"amount","nameLocation":"1105:6:7","nodeType":"VariableDeclaration","scope":1911,"src":"1097:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1097:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1873,"mutability":"mutable","name":"salt","nameLocation":"1121:4:7","nodeType":"VariableDeclaration","scope":1911,"src":"1113:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1113:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1875,"mutability":"mutable","name":"bytecode","nameLocation":"1140:8:7","nodeType":"VariableDeclaration","scope":1911,"src":"1127:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1874,"name":"bytes","nodeType":"ElementaryTypeName","src":"1127:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1096:53:7"},"returnParameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"addr","nameLocation":"1176:4:7","nodeType":"VariableDeclaration","scope":1911,"src":"1168:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"1168:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1167:14:7"},"scope":1946,"src":"1081:484:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1930,"nodeType":"Block","src":"1861:73:7","statements":[{"expression":{"arguments":[{"id":1922,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"1893:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1923,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"1899:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1926,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1921:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$1946","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$1946","typeString":"library Create2"}],"id":1925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1913:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1924,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:7","typeDescriptions":{}}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1913:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1921,"name":"computeAddress","nodeType":"Identifier","overloadedDeclarations":[1931,1945],"referencedDeclaration":1945,"src":"1878:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1878:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1920,"id":1929,"nodeType":"Return","src":"1871:56:7"}]},"documentation":{"id":1912,"nodeType":"StructuredDocumentation","src":"1571:193:7","text":" @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."},"id":1931,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"1778:14:7","nodeType":"FunctionDefinition","parameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"salt","nameLocation":"1801:4:7","nodeType":"VariableDeclaration","scope":1931,"src":"1793:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1793:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"bytecodeHash","nameLocation":"1815:12:7","nodeType":"VariableDeclaration","scope":1931,"src":"1807:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1915,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1807:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1792:36:7"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1931,"src":"1852:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1918,"name":"address","nodeType":"ElementaryTypeName","src":"1852:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1851:9:7"},"scope":1946,"src":"1769:165:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1944,"nodeType":"Block","src":"2292:1657:7","statements":[{"AST":{"nodeType":"YulBlock","src":"2354:1589:7","statements":[{"nodeType":"YulVariableDeclaration","src":"2368:22:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2385:4:7","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2379:5:7"},"nodeType":"YulFunctionCall","src":"2379:11:7"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2372:3:7","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3592:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3597:4:7","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3588:3:7"},"nodeType":"YulFunctionCall","src":"3588:14:7"},{"name":"bytecodeHash","nodeType":"YulIdentifier","src":"3604:12:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3581:6:7"},"nodeType":"YulFunctionCall","src":"3581:36:7"},"nodeType":"YulExpressionStatement","src":"3581:36:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3641:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3646:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3637:3:7"},"nodeType":"YulFunctionCall","src":"3637:14:7"},{"name":"salt","nodeType":"YulIdentifier","src":"3653:4:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3630:6:7"},"nodeType":"YulFunctionCall","src":"3630:28:7"},"nodeType":"YulExpressionStatement","src":"3630:28:7"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3678:3:7"},{"name":"deployer","nodeType":"YulIdentifier","src":"3683:8:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3671:6:7"},"nodeType":"YulFunctionCall","src":"3671:21:7"},"nodeType":"YulExpressionStatement","src":"3671:21:7"},{"nodeType":"YulVariableDeclaration","src":"3754:27:7","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3771:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3776:4:7","type":"","value":"0x0b"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:7"},"nodeType":"YulFunctionCall","src":"3767:14:7"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"3758:5:7","type":""}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3880:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"3887:4:7","type":"","value":"0xff"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3872:7:7"},"nodeType":"YulFunctionCall","src":"3872:20:7"},"nodeType":"YulExpressionStatement","src":"3872:20:7"},{"nodeType":"YulAssignment","src":"3905:28:7","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3923:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"3930:2:7","type":"","value":"85"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3913:9:7"},"nodeType":"YulFunctionCall","src":"3913:20:7"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"3905:4:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1941,"isOffset":false,"isSlot":false,"src":"3905:4:7","valueSize":1},{"declaration":1936,"isOffset":false,"isSlot":false,"src":"3604:12:7","valueSize":1},{"declaration":1938,"isOffset":false,"isSlot":false,"src":"3683:8:7","valueSize":1},{"declaration":1934,"isOffset":false,"isSlot":false,"src":"3653:4:7","valueSize":1}],"id":1943,"nodeType":"InlineAssembly","src":"2345:1598:7"}]},"documentation":{"id":1932,"nodeType":"StructuredDocumentation","src":"1940:232:7","text":" @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."},"id":1945,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2186:14:7","nodeType":"FunctionDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"salt","nameLocation":"2209:4:7","nodeType":"VariableDeclaration","scope":1945,"src":"2201:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2201:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1936,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2223:12:7","nodeType":"VariableDeclaration","scope":1945,"src":"2215:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2215:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"deployer","nameLocation":"2245:8:7","nodeType":"VariableDeclaration","scope":1945,"src":"2237:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1937,"name":"address","nodeType":"ElementaryTypeName","src":"2237:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2200:54:7"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"addr","nameLocation":"2286:4:7","nodeType":"VariableDeclaration","scope":1945,"src":"2278:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"2278:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2277:14:7"},"scope":1946,"src":"2177:1772:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1947,"src":"494:3457:7","usedErrors":[],"usedEvents":[]}],"src":"101:3851:7"},"id":7},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1970],"IERC165":[1982]},"id":1971,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1948,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1949,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1971,"sourceUnit":1983,"src":"124:23:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1951,"name":"IERC165","nameLocations":["754:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"754:7:8"},"id":1952,"nodeType":"InheritanceSpecifier","src":"754:7:8"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1950,"nodeType":"StructuredDocumentation","src":"149:576:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1970,"linearizedBaseContracts":[1970,1982],"name":"ERC165","nameLocation":"744:6:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1981],"body":{"id":1968,"nodeType":"Block","src":"920:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1961,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"937:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1963,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"957:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1982_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1982_$","typeString":"type(contract IERC165)"}],"id":1962,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1982","typeString":"type(contract IERC165)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1960,"id":1967,"nodeType":"Return","src":"930:47:8"}]},"documentation":{"id":1953,"nodeType":"StructuredDocumentation","src":"768:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1969,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:8","nodeType":"FunctionDefinition","overrides":{"id":1957,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:8"},"parameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:8","nodeType":"VariableDeclaration","scope":1969,"src":"856:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1954,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:8"},"returnParameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1969,"src":"914:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1958,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:8"},"scope":1970,"src":"829:155:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1971,"src":"726:260:8","usedErrors":[],"usedEvents":[]}],"src":"99:888:8"},"id":8},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1982]},"id":1983,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1972,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"125:279:9","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1982,"linearizedBaseContracts":[1982],"name":"IERC165","nameLocation":"415:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"429:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1981,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:9","nodeType":"FunctionDefinition","parameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:9","nodeType":"VariableDeclaration","scope":1981,"src":"801:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1975,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:9"},"returnParameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1981,"src":"844:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1978,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:9"},"scope":1982,"src":"774:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1983,"src":"405:447:9","usedErrors":[],"usedEvents":[]}],"src":"100:753:9"},"id":9},"contracts/AuctionEstate.sol":{"ast":{"absolutePath":"contracts/AuctionEstate.sol","exportedSymbols":{"Address":[1843],"AuctionEstate":[2290],"Context":[1865],"ERC1155":[1335],"ERC165":[1970],"IERC1155":[1457],"IERC1155MetadataURI":[1513],"IERC1155Receiver":[1498],"IERC165":[1982],"Ownable":[112]},"id":2291,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1984,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"83:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":1985,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2291,"sourceUnit":1336,"src":"111:59:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","id":1986,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2291,"sourceUnit":1499,"src":"172:68:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1987,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2291,"sourceUnit":113,"src":"242:52:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1988,"name":"ERC1155","nameLocations":["324:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"324:7:10"},"id":1989,"nodeType":"InheritanceSpecifier","src":"324:7:10"},{"baseName":{"id":1990,"name":"IERC1155Receiver","nameLocations":["332:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":1498,"src":"332:16:10"},"id":1991,"nodeType":"InheritanceSpecifier","src":"332:16:10"}],"canonicalName":"AuctionEstate","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2290,"linearizedBaseContracts":[2290,1498,1335,1513,1457,1970,1982,1865],"name":"AuctionEstate","nameLocation":"307:13:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1993,"mutability":"mutable","name":"estateId","nameLocation":"374:8:10","nodeType":"VariableDeclaration","scope":2290,"src":"358:24:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1992,"name":"uint256","nodeType":"ElementaryTypeName","src":"358:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1995,"mutability":"mutable","name":"estateEvaluation","nameLocation":"405:16:10","nodeType":"VariableDeclaration","scope":2290,"src":"389:32:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1994,"name":"uint256","nodeType":"ElementaryTypeName","src":"389:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1997,"mutability":"mutable","name":"highestBid","nameLocation":"444:10:10","nodeType":"VariableDeclaration","scope":2290,"src":"428:26:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"428:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1999,"mutability":"mutable","name":"auctionWinner","nameLocation":"485:13:10","nodeType":"VariableDeclaration","scope":2290,"src":"461:37:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1998,"name":"address","nodeType":"ElementaryTypeName","src":"461:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"private"},{"constant":false,"id":2001,"mutability":"mutable","name":"timestamp","nameLocation":"521:9:10","nodeType":"VariableDeclaration","scope":2290,"src":"505:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2000,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2003,"mutability":"mutable","name":"estateOwner","nameLocation":"561:11:10","nodeType":"VariableDeclaration","scope":2290,"src":"537:35:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2002,"name":"address","nodeType":"ElementaryTypeName","src":"537:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"private"},{"constant":false,"id":2006,"mutability":"mutable","name":"bidders","nameLocation":"608:7:10","nodeType":"VariableDeclaration","scope":2290,"src":"581:34:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[]"},"typeName":{"baseType":{"id":2004,"name":"address","nodeType":"ElementaryTypeName","src":"581:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2005,"nodeType":"ArrayTypeName","src":"581:18:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"private"},{"constant":false,"id":2010,"mutability":"mutable","name":"BidsPlaced","nameLocation":"663:10:10","nodeType":"VariableDeclaration","scope":2290,"src":"628:45:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2009,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2007,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"628:26:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":2044,"nodeType":"Block","src":"796:155:10","statements":[{"expression":{"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2024,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"800:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2025,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"811:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"800:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2027,"nodeType":"ExpressionStatement","src":"800:14:10"},{"expression":{"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2028,"name":"estateEvaluation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"825:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2029,"name":"_evaluation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"844:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"825:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2031,"nodeType":"ExpressionStatement","src":"825:30:10"},{"expression":{"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2032,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"866:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2033,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"878:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"866:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2035,"nodeType":"ExpressionStatement","src":"866:22:10"},{"expression":{"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2036,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"899:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"912:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"899:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2039,"nodeType":"ExpressionStatement","src":"899:14:10"},{"expression":{"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2040,"name":"estateOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"924:11:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2041,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"938:5:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"924:19:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2043,"nodeType":"ExpressionStatement","src":"924:19:10"}]},"id":2045,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"787:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":2022,"kind":"baseConstructorSpecifier","modifierName":{"id":2020,"name":"ERC1155","nameLocations":["779:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"779:7:10"},"nodeType":"ModifierInvocation","src":"779:11:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"_id","nameLocation":"704:3:10","nodeType":"VariableDeclaration","scope":2045,"src":"696:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2011,"name":"uint256","nodeType":"ElementaryTypeName","src":"696:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"_evaluation","nameLocation":"716:11:10","nodeType":"VariableDeclaration","scope":2045,"src":"708:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2013,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"_timestamp","nameLocation":"736:10:10","nodeType":"VariableDeclaration","scope":2045,"src":"728:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"728:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2018,"mutability":"mutable","name":"owner","nameLocation":"763:5:10","nodeType":"VariableDeclaration","scope":2045,"src":"747:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2017,"name":"address","nodeType":"ElementaryTypeName","src":"747:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"695:74:10"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[],"src":"796:0:10"},"scope":2290,"src":"684:267:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2068,"nodeType":"Block","src":"1074:99:10","statements":[{"expression":{"components":[{"id":2060,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"1092:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2061,"name":"estateEvaluation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"1101:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2062,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"1118:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2063,"name":"estateOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"1129:11:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2064,"name":"auctionWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"1141:13:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2065,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"1155:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2066,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1091:74:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_payable_$_t_address_payable_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,address payable,address payable,uint256)"}},"functionReturnParameters":2059,"id":2067,"nodeType":"Return","src":"1085:80:10"}]},"functionSelector":"3a6dcea2","id":2069,"implemented":true,"kind":"function","modifiers":[],"name":"getAuctionDetails","nameLocation":"968:17:10","nodeType":"FunctionDefinition","parameters":{"id":2046,"nodeType":"ParameterList","parameters":[],"src":"985:2:10"},"returnParameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2069,"src":"1010:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2047,"name":"uint256","nodeType":"ElementaryTypeName","src":"1010:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2069,"src":"1018:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2069,"src":"1026:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2051,"name":"uint256","nodeType":"ElementaryTypeName","src":"1026:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2069,"src":"1034:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2053,"name":"address","nodeType":"ElementaryTypeName","src":"1034:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2069,"src":"1050:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"1050:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2069,"src":"1066:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2057,"name":"uint256","nodeType":"ElementaryTypeName","src":"1066:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1009:65:10"},"scope":2290,"src":"959:214:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2077,"nodeType":"Block","src":"1254:33:10","statements":[{"expression":{"id":2075,"name":"bidders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"1272:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"functionReturnParameters":2074,"id":2076,"nodeType":"Return","src":"1265:14:10"}]},"functionSelector":"3a79d2e5","id":2078,"implemented":true,"kind":"function","modifiers":[],"name":"getAllBidders","nameLocation":"1190:13:10","nodeType":"FunctionDefinition","parameters":{"id":2070,"nodeType":"ParameterList","parameters":[],"src":"1203:2:10"},"returnParameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2078,"src":"1228:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[]"},"typeName":{"baseType":{"id":2071,"name":"address","nodeType":"ElementaryTypeName","src":"1228:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2072,"nodeType":"ArrayTypeName","src":"1228:18:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"internal"}],"src":"1227:27:10"},"scope":2290,"src":"1181:106:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2090,"nodeType":"Block","src":"1372:46:10","statements":[{"expression":{"components":[{"baseExpression":{"id":2085,"name":"BidsPlaced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"1391:10:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2087,"indexExpression":{"id":2086,"name":"bidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"1402:6:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1391:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1390:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2084,"id":2089,"nodeType":"Return","src":"1383:27:10"}]},"functionSelector":"8d07ae9f","id":2091,"implemented":true,"kind":"function","modifiers":[],"name":"getBidDetails","nameLocation":"1304:13:10","nodeType":"FunctionDefinition","parameters":{"id":2081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2080,"mutability":"mutable","name":"bidder","nameLocation":"1334:6:10","nodeType":"VariableDeclaration","scope":2091,"src":"1318:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2079,"name":"address","nodeType":"ElementaryTypeName","src":"1318:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"1317:24:10"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2091,"src":"1364:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1364:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1363:9:10"},"scope":2290,"src":"1295:123:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2143,"nodeType":"Block","src":"1475:424:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2097,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"1582:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2098,"name":"estateEvaluation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"1586:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1582:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42696420706c61636564206d75737420626520686967686572207468616e20746865206576616c756174696f6e206f66207468652074696d657374616d70","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1604:64:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_4446e7cad40a0f0bf90a99c8349fd6e70447f532f99bb8e8209f05d74b81f6bf","typeString":"literal_string \"Bid placed must be higher than the evaluation of the timestamp\""},"value":"Bid placed must be higher than the evaluation of the timestamp"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4446e7cad40a0f0bf90a99c8349fd6e70447f532f99bb8e8209f05d74b81f6bf","typeString":"literal_string \"Bid placed must be higher than the evaluation of the timestamp\""}],"id":2096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1574:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1574:95:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2102,"nodeType":"ExpressionStatement","src":"1574:95:10"},{"expression":{"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2103,"name":"BidsPlaced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"1680:10:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2106,"indexExpression":{"expression":{"id":2104,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1691:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1695:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1691:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1680:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2107,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"1705:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1680:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2109,"nodeType":"ExpressionStatement","src":"1680:28:10"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2117,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1748:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1752:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1748:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1740:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2115,"name":"address","nodeType":"ElementaryTypeName","src":"1740:7:10","typeDescriptions":{}}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1740:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1732:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2113,"name":"address","nodeType":"ElementaryTypeName","src":"1732:8:10","stateMutability":"payable","typeDescriptions":{}}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1732:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":2110,"name":"bidders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"1719:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1727:4:10","memberName":"push","nodeType":"MemberAccess","src":"1719:12:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$attached_to$_t_array$_t_address_payable_$dyn_storage_ptr_$","typeString":"function (address payable[] storage pointer,address payable)"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1719:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2122,"nodeType":"ExpressionStatement","src":"1719:42:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2123,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"1775:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2124,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"1786:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1775:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2142,"nodeType":"IfStatement","src":"1772:120:10","trueBody":{"id":2141,"nodeType":"Block","src":"1790:102:10","statements":[{"expression":{"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2126,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"1805:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2127,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"1818:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1805:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2129,"nodeType":"ExpressionStatement","src":"1805:16:10"},{"expression":{"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2130,"name":"auctionWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"1836:13:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":2135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1868:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1872:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1868:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1860:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2133,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:10","typeDescriptions":{}}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1860:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1852:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2131,"name":"address","nodeType":"ElementaryTypeName","src":"1852:8:10","stateMutability":"payable","typeDescriptions":{}}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1852:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1836:44:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2140,"nodeType":"ExpressionStatement","src":"1836:44:10"}]}}]},"functionSelector":"9979ef45","id":2144,"implemented":true,"kind":"function","modifiers":[],"name":"placeBid","nameLocation":"1435:8:10","nodeType":"FunctionDefinition","parameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"bid","nameLocation":"1452:3:10","nodeType":"VariableDeclaration","scope":2144,"src":"1444:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"1444:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1443:13:10"},"returnParameters":{"id":2095,"nodeType":"ParameterList","parameters":[],"src":"1475:0:10"},"scope":2290,"src":"1426:473:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2151,"nodeType":"Block","src":"1969:156:10","statements":[{"expression":{"id":2149,"name":"auctionWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"2104:13:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":2148,"id":2150,"nodeType":"Return","src":"2097:20:10"}]},"functionSelector":"14034bd2","id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"declareWinner","nameLocation":"1916:13:10","nodeType":"FunctionDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[],"src":"1929:2:10"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2152,"src":"1952:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2146,"name":"address","nodeType":"ElementaryTypeName","src":"1952:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"1951:17:10"},"scope":2290,"src":"1907:218:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2203,"nodeType":"Block","src":"2177:448:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":2159,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2324:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2328:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2324:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2316:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2157,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:10","typeDescriptions":{}}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2308:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2155,"name":"address","nodeType":"ElementaryTypeName","src":"2308:8:10","stateMutability":"payable","typeDescriptions":{}}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2163,"name":"auctionWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"2338:13:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2308:43:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2202,"nodeType":"IfStatement","src":"2305:313:10","trueBody":{"id":2201,"nodeType":"Block","src":"2352:266:10","statements":[{"assignments":[2166],"declarations":[{"constant":false,"id":2166,"mutability":"mutable","name":"bidPlaced","nameLocation":"2375:9:10","nodeType":"VariableDeclaration","scope":2201,"src":"2367:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2165,"name":"uint256","nodeType":"ElementaryTypeName","src":"2367:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2171,"initialValue":{"baseExpression":{"id":2167,"name":"BidsPlaced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"2387:10:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2170,"indexExpression":{"expression":{"id":2168,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2398:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2402:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2398:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2387:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2367:42:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2173,"name":"bidPlaced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"2432:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2443:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2432:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f752068617665206e6f7420706c6163656420616e792062657420696e20746869732061756374696f6e","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2447:45:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c78a945367e2a6899352bb4d45dcf95cd13d085cfc3f1dc5c7d2b9759890d17a","typeString":"literal_string \"You have not placed any bet in this auction\""},"value":"You have not placed any bet in this auction"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c78a945367e2a6899352bb4d45dcf95cd13d085cfc3f1dc5c7d2b9759890d17a","typeString":"literal_string \"You have not placed any bet in this auction\""}],"id":2172,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2424:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2424:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2178,"nodeType":"ExpressionStatement","src":"2424:69:10"},{"expression":{"arguments":[{"id":2188,"name":"bidPlaced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"2546:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"expression":{"id":2183,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2524:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2528:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2524:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2516:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2181,"name":"address","nodeType":"ElementaryTypeName","src":"2516:7:10","typeDescriptions":{}}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2516:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2508:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2179,"name":"address","nodeType":"ElementaryTypeName","src":"2508:8:10","stateMutability":"payable","typeDescriptions":{}}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2508:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2537:8:10","memberName":"transfer","nodeType":"MemberAccess","src":"2508:37:10","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2508:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2190,"nodeType":"ExpressionStatement","src":"2508:48:10"},{"expression":{"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2191,"name":"BidsPlaced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"2571:10:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2197,"indexExpression":{"arguments":[{"expression":{"id":2194,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2590:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2594:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2590:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2582:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2192,"name":"address","nodeType":"ElementaryTypeName","src":"2582:7:10","typeDescriptions":{}}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2582:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2571:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2605:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2571:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2200,"nodeType":"ExpressionStatement","src":"2571:35:10"}]}}]},"functionSelector":"4935e740","id":2204,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawMyFunds","nameLocation":"2142:15:10","nodeType":"FunctionDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[],"src":"2157:2:10"},"returnParameters":{"id":2154,"nodeType":"ParameterList","parameters":[],"src":"2177:0:10"},"scope":2290,"src":"2133:492:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2246,"nodeType":"Block","src":"2672:371:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":2211,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2819:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2823:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2819:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2811:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2209,"name":"address","nodeType":"ElementaryTypeName","src":"2811:7:10","typeDescriptions":{}}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2207,"name":"address","nodeType":"ElementaryTypeName","src":"2803:8:10","stateMutability":"payable","typeDescriptions":{}}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2215,"name":"auctionWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"2833:13:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2803:43:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2245,"nodeType":"IfStatement","src":"2800:234:10","trueBody":{"id":2244,"nodeType":"Block","src":"2847:187:10","statements":[{"expression":{"arguments":[{"id":2220,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"2883:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2217,"name":"estateOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"2862:11:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2874:8:10","memberName":"transfer","nodeType":"MemberAccess","src":"2862:20:10","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2862:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2222,"nodeType":"ExpressionStatement","src":"2862:32:10"},{"expression":{"arguments":[{"arguments":[{"id":2226,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2934:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_AuctionEstate_$2290","typeString":"contract AuctionEstate"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AuctionEstate_$2290","typeString":"contract AuctionEstate"}],"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2926:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2224,"name":"address","nodeType":"ElementaryTypeName","src":"2926:7:10","typeDescriptions":{}}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2228,"name":"auctionWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"2941:13:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2229,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"2956:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2966:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2969:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2223,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2909:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2909:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2233,"nodeType":"ExpressionStatement","src":"2909:63:10"},{"expression":{"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2234,"name":"BidsPlaced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"2987:10:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2240,"indexExpression":{"arguments":[{"expression":{"id":2237,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3006:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3010:6:10","memberName":"sender","nodeType":"MemberAccess","src":"3006:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2998:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2235,"name":"address","nodeType":"ElementaryTypeName","src":"2998:7:10","typeDescriptions":{}}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2998:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2987:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3021:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2987:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2243,"nodeType":"ExpressionStatement","src":"2987:35:10"}]}}]},"functionSelector":"70740ac9","id":2247,"implemented":true,"kind":"function","modifiers":[],"name":"claimPrize","nameLocation":"2642:10:10","nodeType":"FunctionDefinition","parameters":{"id":2205,"nodeType":"ParameterList","parameters":[],"src":"2652:2:10"},"returnParameters":{"id":2206,"nodeType":"ParameterList","parameters":[],"src":"2672:0:10"},"scope":2290,"src":"2633:410:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[1479],"body":{"id":2266,"nodeType":"Block","src":"3160:57:10","statements":[{"expression":{"expression":{"expression":{"id":2262,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3178:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_AuctionEstate_$2290","typeString":"contract AuctionEstate"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3183:17:10","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":2267,"src":"3178:22:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3201:8:10","memberName":"selector","nodeType":"MemberAccess","src":"3178:31:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":2261,"id":2265,"nodeType":"Return","src":"3171:38:10"}]},"functionSelector":"f23a6e61","id":2267,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"3060:17:10","nodeType":"FunctionDefinition","parameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2267,"src":"3078:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2248,"name":"address","nodeType":"ElementaryTypeName","src":"3078:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2267,"src":"3087:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2250,"name":"address","nodeType":"ElementaryTypeName","src":"3087:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2267,"src":"3096:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"3096:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2267,"src":"3105:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2254,"name":"uint256","nodeType":"ElementaryTypeName","src":"3105:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2267,"src":"3114:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2256,"name":"bytes","nodeType":"ElementaryTypeName","src":"3114:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3077:50:10"},"returnParameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2267,"src":"3152:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2259,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3152:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3151:8:10"},"scope":2290,"src":"3051:166:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1497],"body":{"id":2288,"nodeType":"Block","src":"3357:62:10","statements":[{"expression":{"expression":{"expression":{"id":2284,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3375:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_AuctionEstate_$2290","typeString":"contract AuctionEstate"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3380:22:10","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":2289,"src":"3375:27:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3403:8:10","memberName":"selector","nodeType":"MemberAccess","src":"3375:36:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":2283,"id":2287,"nodeType":"Return","src":"3368:43:10"}]},"functionSelector":"bc197c81","id":2289,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"3234:22:10","nodeType":"FunctionDefinition","parameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2289,"src":"3257:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2268,"name":"address","nodeType":"ElementaryTypeName","src":"3257:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2289,"src":"3266:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2270,"name":"address","nodeType":"ElementaryTypeName","src":"3266:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2289,"src":"3275:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"3275:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2273,"nodeType":"ArrayTypeName","src":"3275:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2289,"src":"3293:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2275,"name":"uint256","nodeType":"ElementaryTypeName","src":"3293:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2276,"nodeType":"ArrayTypeName","src":"3293:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2289,"src":"3311:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2278,"name":"bytes","nodeType":"ElementaryTypeName","src":"3311:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3256:68:10"},"returnParameters":{"id":2283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2289,"src":"3349:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2281,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3349:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3348:8:10"},"scope":2290,"src":"3225:194:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":2291,"src":"298:3196:10","usedErrors":[],"usedEvents":[1354,1369,1378,1385]}],"src":"83:3413:10"},"id":10},"contracts/FactoryEstate.sol":{"ast":{"absolutePath":"contracts/FactoryEstate.sol","exportedSymbols":{"Address":[1843],"AuctionEstate":[2290],"Context":[1865],"Create2":[1946],"ERC1155":[1335],"ERC165":[1970],"EstateFactory":[2732],"IERC1155":[1457],"IERC1155MetadataURI":[1513],"IERC1155Receiver":[1498],"IERC165":[1982],"Ownable":[112],"WalletEstate":[3069]},"id":2733,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2292,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"81:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":2293,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2733,"sourceUnit":1336,"src":"107:59:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","file":"@openzeppelin/contracts/utils/Create2.sol","id":2294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2733,"sourceUnit":1947,"src":"167:51:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","id":2295,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2733,"sourceUnit":1499,"src":"219:68:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AuctionEstate.sol","file":"./AuctionEstate.sol","id":2296,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2733,"sourceUnit":2291,"src":"288:29:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/WalletEstate.sol","file":"./WalletEstate.sol","id":2297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2733,"sourceUnit":3070,"src":"318:28:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2298,"name":"ERC1155","nameLocations":["374:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"374:7:11"},"id":2299,"nodeType":"InheritanceSpecifier","src":"374:7:11"},{"baseName":{"id":2300,"name":"IERC1155Receiver","nameLocations":["382:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":1498,"src":"382:16:11"},"id":2301,"nodeType":"InheritanceSpecifier","src":"382:16:11"}],"canonicalName":"EstateFactory","contractDependencies":[2290,3069],"contractKind":"contract","fullyImplemented":true,"id":2732,"linearizedBaseContracts":[2732,1498,1335,1513,1457,1970,1982,1865],"name":"EstateFactory","nameLocation":"357:13:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2304,"mutability":"mutable","name":"_nextTokenId","nameLocation":"421:12:11","nodeType":"VariableDeclaration","scope":2732,"src":"405:30:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2302,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"434:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"body":{"id":2310,"nodeType":"Block","src":"488:2:11","statements":[]},"id":2311,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"","id":2307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"472:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":2308,"kind":"baseConstructorSpecifier","modifierName":{"id":2306,"name":"ERC1155","nameLocations":["464:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"464:7:11"},"nodeType":"ModifierInvocation","src":"464:11:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2305,"nodeType":"ParameterList","parameters":[],"src":"453:2:11"},"returnParameters":{"id":2309,"nodeType":"ParameterList","parameters":[],"src":"488:0:11"},"scope":2732,"src":"442:48:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"canonicalName":"EstateFactory.Estate","id":2324,"members":[{"constant":false,"id":2313,"mutability":"mutable","name":"estateID","nameLocation":"527:8:11","nodeType":"VariableDeclaration","scope":2324,"src":"519:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2312,"name":"uint256","nodeType":"ElementaryTypeName","src":"519:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2315,"mutability":"mutable","name":"estateOwner","nameLocation":"561:11:11","nodeType":"VariableDeclaration","scope":2324,"src":"545:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2314,"name":"address","nodeType":"ElementaryTypeName","src":"545:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2317,"mutability":"mutable","name":"estateEvaluation","nameLocation":"590:16:11","nodeType":"VariableDeclaration","scope":2324,"src":"582:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"582:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2319,"mutability":"mutable","name":"estateMetadata","nameLocation":"623:14:11","nodeType":"VariableDeclaration","scope":2324,"src":"616:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2318,"name":"string","nodeType":"ElementaryTypeName","src":"616:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"isListedForAuction","nameLocation":"652:18:11","nodeType":"VariableDeclaration","scope":2324,"src":"647:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2320,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2323,"mutability":"mutable","name":"isListedForInvestment","nameLocation":"685:21:11","nodeType":"VariableDeclaration","scope":2324,"src":"680:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2322,"name":"bool","nodeType":"ElementaryTypeName","src":"680:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Estate","nameLocation":"503:6:11","nodeType":"StructDefinition","scope":2732,"src":"496:217:11","visibility":"public"},{"constant":false,"id":2329,"mutability":"mutable","name":"Estates","nameLocation":"755:7:11","nodeType":"VariableDeclaration","scope":2732,"src":"719:43:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Estate_$2324_storage_$","typeString":"mapping(uint256 => struct EstateFactory.Estate)"},"typeName":{"id":2328,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"728:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"719:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Estate_$2324_storage_$","typeString":"mapping(uint256 => struct EstateFactory.Estate)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2327,"nodeType":"UserDefinedTypeName","pathNode":{"id":2326,"name":"Estate","nameLocations":["739:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2324,"src":"739:6:11"},"referencedDeclaration":2324,"src":"739:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Estate_$2324_storage_ptr","typeString":"struct EstateFactory.Estate"}}},"visibility":"private"},{"constant":false,"id":2333,"mutability":"mutable","name":"EstateInvestmentListings","nameLocation":"805:24:11","nodeType":"VariableDeclaration","scope":2732,"src":"768:61:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2332,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"777:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"768:28:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2331,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2337,"mutability":"mutable","name":"EstateAuctionListings","nameLocation":"918:21:11","nodeType":"VariableDeclaration","scope":2732,"src":"881:58:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2336,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2334,"name":"uint256","nodeType":"ElementaryTypeName","src":"890:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"881:28:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2335,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"body":{"id":2400,"nodeType":"Block","src":"1072:666:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2345,"name":"_evaluation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"1090:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1102:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1090:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576616c756174696f6e206f662074686520457374617465206d757374206265206d6f7265207468616e207a65726f21","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1105:50:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_75d492dc39fdce738c198d69e2dd08182d4530e4507782c31fe8fbb961c66e8d","typeString":"literal_string \"Evaluation of the Estate must be more than zero!\""},"value":"Evaluation of the Estate must be more than zero!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75d492dc39fdce738c198d69e2dd08182d4530e4507782c31fe8fbb961c66e8d","typeString":"literal_string \"Evaluation of the Estate must be more than zero!\""}],"id":2344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1082:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1082:74:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2350,"nodeType":"ExpressionStatement","src":"1082:74:11"},{"assignments":[2352],"declarations":[{"constant":false,"id":2352,"mutability":"mutable","name":"addr","nameLocation":"1182:4:11","nodeType":"VariableDeclaration","scope":2400,"src":"1166:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2351,"name":"address","nodeType":"ElementaryTypeName","src":"1166:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":2361,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":2357,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1205:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1209:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1205:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1197:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2355,"name":"address","nodeType":"ElementaryTypeName","src":"1197:7:11","typeDescriptions":{}}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1197:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1189:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2353,"name":"address","nodeType":"ElementaryTypeName","src":"1189:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1189:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"1166:51:11"},{"assignments":[2363],"declarations":[{"constant":false,"id":2363,"mutability":"mutable","name":"tokenId","nameLocation":"1291:7:11","nodeType":"VariableDeclaration","scope":2400,"src":"1283:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2365,"initialValue":{"id":2364,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"1301:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1283:30:11"},{"expression":{"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1323:14:11","subExpression":{"id":2366,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"1323:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2368,"nodeType":"ExpressionStatement","src":"1323:14:11"},{"expression":{"arguments":[{"id":2370,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"1352:4:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2371,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"1357:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1365:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1367:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2369,"name":"mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"1347:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1347:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2375,"nodeType":"ExpressionStatement","src":"1347:23:11"},{"expression":{"arguments":[{"id":2377,"name":"_metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"1387:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2376,"name":"setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"1380:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1380:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2379,"nodeType":"ExpressionStatement","src":"1380:17:11"},{"expression":{"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2380,"name":"Estates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"1440:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Estate_$2324_storage_$","typeString":"mapping(uint256 => struct EstateFactory.Estate storage ref)"}},"id":2382,"indexExpression":{"id":2381,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"1448:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1440:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_Estate_$2324_storage","typeString":"struct EstateFactory.Estate storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2384,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"1489:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"expression":{"id":2389,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1539:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1543:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1539:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1531:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2387,"name":"address","nodeType":"ElementaryTypeName","src":"1531:7:11","typeDescriptions":{}}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1523:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2385,"name":"address","nodeType":"ElementaryTypeName","src":"1523:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1523:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2393,"name":"_metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"1580:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2394,"name":"_evaluation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"1621:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1665:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1706:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2383,"name":"Estate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"1459:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Estate_$2324_storage_ptr_$","typeString":"type(struct EstateFactory.Estate storage pointer)"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1480:8:11","1510:11:11","1565:14:11","1603:16:11","1646:18:11","1684:21:11"],"names":["estateID","estateOwner","estateMetadata","estateEvaluation","isListedForAuction","isListedForInvestment"],"nodeType":"FunctionCall","src":"1459:263:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Estate_$2324_memory_ptr","typeString":"struct EstateFactory.Estate memory"}},"src":"1440:282:11","typeDescriptions":{"typeIdentifier":"t_struct$_Estate_$2324_storage","typeString":"struct EstateFactory.Estate storage ref"}},"id":2399,"nodeType":"ExpressionStatement","src":"1440:282:11"}]},"functionSelector":"3ba44be6","id":2401,"implemented":true,"kind":"function","modifiers":[],"name":"tokenizeEstate","nameLocation":"1002:14:11","nodeType":"FunctionDefinition","parameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"_metadata","nameLocation":"1031:9:11","nodeType":"VariableDeclaration","scope":2401,"src":"1017:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2338,"name":"string","nodeType":"ElementaryTypeName","src":"1017:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2341,"mutability":"mutable","name":"_evaluation","nameLocation":"1049:11:11","nodeType":"VariableDeclaration","scope":2401,"src":"1041:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"1041:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1016:45:11"},"returnParameters":{"id":2343,"nodeType":"ParameterList","parameters":[],"src":"1072:0:11"},"scope":2732,"src":"993:745:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2469,"nodeType":"Block","src":"1801:510:11","statements":[{"assignments":[2407],"declarations":[{"constant":false,"id":2407,"mutability":"mutable","name":"_salt","nameLocation":"1819:5:11","nodeType":"VariableDeclaration","scope":2469,"src":"1811:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1811:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2417,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":2411,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1854:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1860:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"1854:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1871:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1875:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1871:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2409,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1837:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1841:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"1837:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2408,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1827:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1827:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1811:72:11"},{"assignments":[2419],"declarations":[{"constant":false,"id":2419,"mutability":"mutable","name":"latestAuctionAddress","nameLocation":"1901:20:11","nodeType":"VariableDeclaration","scope":2469,"src":"1893:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2418,"name":"address","nodeType":"ElementaryTypeName","src":"1893:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2446,"initialValue":{"arguments":[{"hexValue":"30","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1939:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2423,"name":"_salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"1941:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"arguments":[{"id":2427,"name":"AuctionEstate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"1970:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AuctionEstate_$2290_$","typeString":"type(contract AuctionEstate)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_AuctionEstate_$2290_$","typeString":"type(contract AuctionEstate)"}],"id":2426,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1965:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1965:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_AuctionEstate_$2290","typeString":"type(contract AuctionEstate)"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1985:12:11","memberName":"creationCode","nodeType":"MemberAccess","src":"1965:32:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":2432,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"2010:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":2433,"name":"Estates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"2019:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Estate_$2324_storage_$","typeString":"mapping(uint256 => struct EstateFactory.Estate storage ref)"}},"id":2435,"indexExpression":{"id":2434,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"2027:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2019:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Estate_$2324_storage","typeString":"struct EstateFactory.Estate storage ref"}},"id":2436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2037:16:11","memberName":"estateEvaluation","nodeType":"MemberAccess","referencedDeclaration":2317,"src":"2019:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2437,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2054:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2060:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"2054:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":2439,"name":"Estates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"2070:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Estate_$2324_storage_$","typeString":"mapping(uint256 => struct EstateFactory.Estate storage ref)"}},"id":2441,"indexExpression":{"id":2440,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"2078:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2070:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Estate_$2324_storage","typeString":"struct EstateFactory.Estate storage ref"}},"id":2442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2088:11:11","memberName":"estateOwner","nodeType":"MemberAccess","referencedDeclaration":2315,"src":"2070:29:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":2430,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1999:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2003:6:11","memberName":"encode","nodeType":"MemberAccess","src":"1999:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1999:101:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2424,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1948:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1952:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"1948:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1948:153:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2420,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"1924:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$1946_$","typeString":"type(library Create2)"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1932:6:11","memberName":"deploy","nodeType":"MemberAccess","referencedDeclaration":1911,"src":"1924:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (uint256,bytes32,bytes memory) returns (address)"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:187:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1893:218:11"},{"expression":{"arguments":[{"expression":{"id":2448,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2138:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2138:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2450,"name":"latestAuctionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"2149:20:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2451,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"2171:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2181:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2184:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2447,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2121:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2455,"nodeType":"ExpressionStatement","src":"2121:66:11"},{"expression":{"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2456,"name":"EstateAuctionListings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"2197:21:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2458,"indexExpression":{"id":2457,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"2219:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2197:31:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2459,"name":"latestAuctionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"2231:20:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2197:54:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2461,"nodeType":"ExpressionStatement","src":"2197:54:11"},{"expression":{"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2462,"name":"Estates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"2261:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Estate_$2324_storage_$","typeString":"mapping(uint256 => struct EstateFactory.Estate storage ref)"}},"id":2464,"indexExpression":{"id":2463,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"2269:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2261:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Estate_$2324_storage","typeString":"struct EstateFactory.Estate storage ref"}},"id":2465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2279:18:11","memberName":"isListedForAuction","nodeType":"MemberAccess","referencedDeclaration":2321,"src":"2261:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2300:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2261:43:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2468,"nodeType":"ExpressionStatement","src":"2261:43:11"}]},"functionSelector":"e6efd4d0","id":2470,"implemented":true,"kind":"function","modifiers":[],"name":"listEstateForAuction","nameLocation":"1753:20:11","nodeType":"FunctionDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"estateId","nameLocation":"1782:8:11","nodeType":"VariableDeclaration","scope":2470,"src":"1774:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1774:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1773:18:11"},"returnParameters":{"id":2405,"nodeType":"ParameterList","parameters":[],"src":"1801:0:11"},"scope":2732,"src":"1744:567:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2539,"nodeType":"Block","src":"2379:445:11","statements":[{"assignments":[2477],"declarations":[{"constant":false,"id":2477,"mutability":"mutable","name":"newContract","nameLocation":"2413:11:11","nodeType":"VariableDeclaration","scope":2539,"src":"2396:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1498","typeString":"contract IERC1155Receiver"},"typeName":{"id":2476,"nodeType":"UserDefinedTypeName","pathNode":{"id":2475,"name":"IERC1155Receiver","nameLocations":["2396:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":1498,"src":"2396:16:11"},"referencedDeclaration":1498,"src":"2396:16:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1498","typeString":"contract IERC1155Receiver"}},"visibility":"internal"}],"id":2487,"initialValue":{"arguments":[{"id":2481,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"2444:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":2482,"name":"Estates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"2453:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Estate_$2324_storage_$","typeString":"mapping(uint256 => struct EstateFactory.Estate storage ref)"}},"id":2484,"indexExpression":{"id":2483,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"2461:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2453:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Estate_$2324_storage","typeString":"struct EstateFactory.Estate storage ref"}},"id":2485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2471:16:11","memberName":"estateEvaluation","nodeType":"MemberAccess","referencedDeclaration":2317,"src":"2453:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"2427:16:11","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_uint256_$_t_uint256_$returns$_t_contract$_WalletEstate_$3069_$","typeString":"function (uint256,uint256) returns (contract WalletEstate)"},"typeName":{"id":2479,"nodeType":"UserDefinedTypeName","pathNode":{"id":2478,"name":"WalletEstate","nameLocations":["2431:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":3069,"src":"2431:12:11"},"referencedDeclaration":3069,"src":"2431:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_WalletEstate_$3069","typeString":"contract WalletEstate"}}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_WalletEstate_$3069","typeString":"contract WalletEstate"}},"nodeType":"VariableDeclarationStatement","src":"2396:92:11"},{"expression":{"arguments":[{"expression":{"id":2489,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2515:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2519:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2515:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2493,"name":"newContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"2534:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1498","typeString":"contract IERC1155Receiver"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1155Receiver_$1498","typeString":"contract IERC1155Receiver"}],"id":2492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2526:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2491,"name":"address","nodeType":"ElementaryTypeName","src":"2526:7:11","typeDescriptions":{}}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2495,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"2548:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2558:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2561:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2488,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2498:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2498:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2499,"nodeType":"ExpressionStatement","src":"2498:66:11"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2503,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2588:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2592:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2588:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2580:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2501,"name":"address","nodeType":"ElementaryTypeName","src":"2580:7:11","typeDescriptions":{}}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2580:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2601:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"313030","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2604:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},{"hexValue":"","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2609:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2500,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"2574:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2574:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2510,"nodeType":"ExpressionStatement","src":"2574:38:11"},{"expression":{"arguments":[{"expression":{"id":2512,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2640:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2644:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2640:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2516,"name":"newContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"2659:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1498","typeString":"contract IERC1155Receiver"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1155Receiver_$1498","typeString":"contract IERC1155Receiver"}],"id":2515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2651:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2514,"name":"address","nodeType":"ElementaryTypeName","src":"2651:7:11","typeDescriptions":{}}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2651:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2673:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"313030","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2676:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},{"hexValue":"","id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2681:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2511,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2623:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2623:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2522,"nodeType":"ExpressionStatement","src":"2623:61:11"},{"expression":{"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2523,"name":"EstateInvestmentListings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"2695:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2525,"indexExpression":{"id":2524,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"2720:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2695:34:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2528,"name":"newContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"2740:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1498","typeString":"contract IERC1155Receiver"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1155Receiver_$1498","typeString":"contract IERC1155Receiver"}],"id":2527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2732:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2526,"name":"address","nodeType":"ElementaryTypeName","src":"2732:7:11","typeDescriptions":{}}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2732:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2695:57:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2531,"nodeType":"ExpressionStatement","src":"2695:57:11"},{"expression":{"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2532,"name":"Estates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"2762:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Estate_$2324_storage_$","typeString":"mapping(uint256 => struct EstateFactory.Estate storage ref)"}},"id":2534,"indexExpression":{"id":2533,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"2770:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2762:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Estate_$2324_storage","typeString":"struct EstateFactory.Estate storage ref"}},"id":2535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2780:21:11","memberName":"isListedForInvestment","nodeType":"MemberAccess","referencedDeclaration":2323,"src":"2762:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2804:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2762:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2538,"nodeType":"ExpressionStatement","src":"2762:46:11"}]},"functionSelector":"ba1b60fc","id":2540,"implemented":true,"kind":"function","modifiers":[],"name":"listEstateForInvestment","nameLocation":"2327:23:11","nodeType":"FunctionDefinition","parameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"estateId","nameLocation":"2359:8:11","nodeType":"VariableDeclaration","scope":2540,"src":"2351:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2471,"name":"uint256","nodeType":"ElementaryTypeName","src":"2351:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2350:18:11"},"returnParameters":{"id":2474,"nodeType":"ParameterList","parameters":[],"src":"2379:0:11"},"scope":2732,"src":"2318:506:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2552,"nodeType":"Block","src":"2912:41:11","statements":[{"expression":{"baseExpression":{"id":2548,"name":"Estates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"2929:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Estate_$2324_storage_$","typeString":"mapping(uint256 => struct EstateFactory.Estate storage ref)"}},"id":2550,"indexExpression":{"id":2549,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"2937:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2929:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Estate_$2324_storage","typeString":"struct EstateFactory.Estate storage ref"}},"functionReturnParameters":2547,"id":2551,"nodeType":"Return","src":"2922:24:11"}]},"functionSelector":"d18ff5f8","id":2553,"implemented":true,"kind":"function","modifiers":[],"name":"getEstateListing","nameLocation":"2839:16:11","nodeType":"FunctionDefinition","parameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"estateId","nameLocation":"2864:8:11","nodeType":"VariableDeclaration","scope":2553,"src":"2856:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"2856:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2855:18:11"},"returnParameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2553,"src":"2897:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Estate_$2324_memory_ptr","typeString":"struct EstateFactory.Estate"},"typeName":{"id":2545,"nodeType":"UserDefinedTypeName","pathNode":{"id":2544,"name":"Estate","nameLocations":["2897:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2324,"src":"2897:6:11"},"referencedDeclaration":2324,"src":"2897:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Estate_$2324_storage_ptr","typeString":"struct EstateFactory.Estate"}},"visibility":"internal"}],"src":"2896:15:11"},"scope":2732,"src":"2830:123:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2564,"nodeType":"Block","src":"3045:58:11","statements":[{"expression":{"baseExpression":{"id":2560,"name":"EstateInvestmentListings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"3062:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2562,"indexExpression":{"id":2561,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"3087:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3062:34:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2559,"id":2563,"nodeType":"Return","src":"3055:41:11"}]},"functionSelector":"1a05b063","id":2565,"implemented":true,"kind":"function","modifiers":[],"name":"getEstateInvestmentListing","nameLocation":"2968:26:11","nodeType":"FunctionDefinition","parameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"estateId","nameLocation":"3003:8:11","nodeType":"VariableDeclaration","scope":2565,"src":"2995:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"2995:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2994:18:11"},"returnParameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2565,"src":"3036:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2557,"name":"address","nodeType":"ElementaryTypeName","src":"3036:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3035:9:11"},"scope":2732,"src":"2959:144:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2593,"nodeType":"Block","src":"3182:168:11","statements":[{"expression":{"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2572,"name":"Estates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"3192:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Estate_$2324_storage_$","typeString":"mapping(uint256 => struct EstateFactory.Estate storage ref)"}},"id":2574,"indexExpression":{"id":2573,"name":"estateID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"3200:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3192:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Estate_$2324_storage","typeString":"struct EstateFactory.Estate storage ref"}},"id":2575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3210:11:11","memberName":"estateOwner","nodeType":"MemberAccess","referencedDeclaration":2315,"src":"3192:29:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2576,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"3224:8:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"3192:40:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2578,"nodeType":"ExpressionStatement","src":"3192:40:11"},{"expression":{"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2579,"name":"Estates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"3242:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Estate_$2324_storage_$","typeString":"mapping(uint256 => struct EstateFactory.Estate storage ref)"}},"id":2581,"indexExpression":{"id":2580,"name":"estateID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"3250:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3242:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Estate_$2324_storage","typeString":"struct EstateFactory.Estate storage ref"}},"id":2582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3260:18:11","memberName":"isListedForAuction","nodeType":"MemberAccess","referencedDeclaration":2321,"src":"3242:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3281:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3242:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2585,"nodeType":"ExpressionStatement","src":"3242:44:11"},{"expression":{"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2586,"name":"Estates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"3296:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Estate_$2324_storage_$","typeString":"mapping(uint256 => struct EstateFactory.Estate storage ref)"}},"id":2588,"indexExpression":{"id":2587,"name":"estateID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"3304:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3296:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Estate_$2324_storage","typeString":"struct EstateFactory.Estate storage ref"}},"id":2589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3314:21:11","memberName":"isListedForInvestment","nodeType":"MemberAccess","referencedDeclaration":2323,"src":"3296:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3338:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3296:47:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2592,"nodeType":"ExpressionStatement","src":"3296:47:11"}]},"functionSelector":"7192711f","id":2594,"implemented":true,"kind":"function","modifiers":[],"name":"updateOwner","nameLocation":"3118:11:11","nodeType":"FunctionDefinition","parameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"estateID","nameLocation":"3138:8:11","nodeType":"VariableDeclaration","scope":2594,"src":"3130:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2566,"name":"uint256","nodeType":"ElementaryTypeName","src":"3130:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2569,"mutability":"mutable","name":"newOwner","nameLocation":"3163:8:11","nodeType":"VariableDeclaration","scope":2594,"src":"3147:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2568,"name":"address","nodeType":"ElementaryTypeName","src":"3147:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3129:43:11"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[],"src":"3182:0:11"},"scope":2732,"src":"3109:241:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2605,"nodeType":"Block","src":"3439:55:11","statements":[{"expression":{"baseExpression":{"id":2601,"name":"EstateAuctionListings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"3456:21:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2603,"indexExpression":{"id":2602,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"3478:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3456:31:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2600,"id":2604,"nodeType":"Return","src":"3449:38:11"}]},"functionSelector":"4a2454be","id":2606,"implemented":true,"kind":"function","modifiers":[],"name":"getEstateAuctionListing","nameLocation":"3365:23:11","nodeType":"FunctionDefinition","parameters":{"id":2597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"estateId","nameLocation":"3397:8:11","nodeType":"VariableDeclaration","scope":2606,"src":"3389:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"3389:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3388:18:11"},"returnParameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2606,"src":"3430:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2598,"name":"address","nodeType":"ElementaryTypeName","src":"3430:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3429:9:11"},"scope":2732,"src":"3356:138:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2613,"nodeType":"Block","src":"3557:36:11","statements":[{"expression":{"id":2611,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"3574:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2610,"id":2612,"nodeType":"Return","src":"3567:19:11"}]},"functionSelector":"3d55daf8","id":2614,"implemented":true,"kind":"function","modifiers":[],"name":"getNumEstates","nameLocation":"3509:13:11","nodeType":"FunctionDefinition","parameters":{"id":2607,"nodeType":"ParameterList","parameters":[],"src":"3522:2:11"},"returnParameters":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2614,"src":"3548:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2608,"name":"uint256","nodeType":"ElementaryTypeName","src":"3548:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3547:9:11"},"scope":2732,"src":"3500:93:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2623,"nodeType":"Block","src":"3645:32:11","statements":[{"expression":{"arguments":[{"id":2620,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"3663:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2619,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"3655:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3655:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2622,"nodeType":"ExpressionStatement","src":"3655:15:11"}]},"id":2624,"implemented":true,"kind":"function","modifiers":[],"name":"setURI","nameLocation":"3608:6:11","nodeType":"FunctionDefinition","parameters":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"newuri","nameLocation":"3629:6:11","nodeType":"VariableDeclaration","scope":2624,"src":"3615:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2615,"name":"string","nodeType":"ElementaryTypeName","src":"3615:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3614:22:11"},"returnParameters":{"id":2618,"nodeType":"ParameterList","parameters":[],"src":"3645:0:11"},"scope":2732,"src":"3599:78:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2642,"nodeType":"Block","src":"3772:48:11","statements":[{"expression":{"arguments":[{"id":2636,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"3788:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2637,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"3797:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2638,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"3801:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2639,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"3808:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2635,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"3782:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3782:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2641,"nodeType":"ExpressionStatement","src":"3782:31:11"}]},"id":2643,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"3692:4:11","nodeType":"FunctionDefinition","parameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2626,"mutability":"mutable","name":"account","nameLocation":"3705:7:11","nodeType":"VariableDeclaration","scope":2643,"src":"3697:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2625,"name":"address","nodeType":"ElementaryTypeName","src":"3697:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2628,"mutability":"mutable","name":"id","nameLocation":"3722:2:11","nodeType":"VariableDeclaration","scope":2643,"src":"3714:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2627,"name":"uint256","nodeType":"ElementaryTypeName","src":"3714:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2630,"mutability":"mutable","name":"amount","nameLocation":"3734:6:11","nodeType":"VariableDeclaration","scope":2643,"src":"3726:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2629,"name":"uint256","nodeType":"ElementaryTypeName","src":"3726:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2632,"mutability":"mutable","name":"data","nameLocation":"3754:4:11","nodeType":"VariableDeclaration","scope":2643,"src":"3741:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2631,"name":"bytes","nodeType":"ElementaryTypeName","src":"3741:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3696:63:11"},"returnParameters":{"id":2634,"nodeType":"ParameterList","parameters":[],"src":"3772:0:11"},"scope":2732,"src":"3683:137:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2663,"nodeType":"Block","src":"3953:51:11","statements":[{"expression":{"arguments":[{"id":2657,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"3974:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2658,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"3978:3:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2659,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"3983:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2660,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"3992:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2656,"name":"_mintBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"3963:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3963:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2662,"nodeType":"ExpressionStatement","src":"3963:34:11"}]},"id":2664,"implemented":true,"kind":"function","modifiers":[],"name":"mintBatch","nameLocation":"3835:9:11","nodeType":"FunctionDefinition","parameters":{"id":2654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"to","nameLocation":"3853:2:11","nodeType":"VariableDeclaration","scope":2664,"src":"3845:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2644,"name":"address","nodeType":"ElementaryTypeName","src":"3845:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"ids","nameLocation":"3874:3:11","nodeType":"VariableDeclaration","scope":2664,"src":"3857:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2646,"name":"uint256","nodeType":"ElementaryTypeName","src":"3857:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2647,"nodeType":"ArrayTypeName","src":"3857:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2651,"mutability":"mutable","name":"amounts","nameLocation":"3896:7:11","nodeType":"VariableDeclaration","scope":2664,"src":"3879:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2649,"name":"uint256","nodeType":"ElementaryTypeName","src":"3879:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2650,"nodeType":"ArrayTypeName","src":"3879:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2653,"mutability":"mutable","name":"data","nameLocation":"3918:4:11","nodeType":"VariableDeclaration","scope":2664,"src":"3905:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2652,"name":"bytes","nodeType":"ElementaryTypeName","src":"3905:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3844:79:11"},"returnParameters":{"id":2655,"nodeType":"ParameterList","parameters":[],"src":"3953:0:11"},"scope":2732,"src":"3826:178:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[1479],"body":{"id":2684,"nodeType":"Block","src":"4129:55:11","statements":[{"expression":{"expression":{"expression":{"id":2680,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4146:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_EstateFactory_$2732","typeString":"contract EstateFactory"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4151:17:11","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":2685,"src":"4146:22:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4169:8:11","memberName":"selector","nodeType":"MemberAccess","src":"4146:31:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":2679,"id":2683,"nodeType":"Return","src":"4139:38:11"}]},"functionSelector":"f23a6e61","id":2685,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"4020:17:11","nodeType":"FunctionDefinition","overrides":{"id":2676,"nodeType":"OverrideSpecifier","overrides":[],"src":"4103:8:11"},"parameters":{"id":2675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2685,"src":"4038:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2665,"name":"address","nodeType":"ElementaryTypeName","src":"4038:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2685,"src":"4047:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2667,"name":"address","nodeType":"ElementaryTypeName","src":"4047:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2685,"src":"4056:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2669,"name":"uint256","nodeType":"ElementaryTypeName","src":"4056:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2685,"src":"4065:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"4065:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2685,"src":"4074:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2673,"name":"bytes","nodeType":"ElementaryTypeName","src":"4074:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4037:50:11"},"returnParameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2685,"src":"4121:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2677,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4121:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4120:8:11"},"scope":2732,"src":"4011:173:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1497],"body":{"id":2707,"nodeType":"Block","src":"4331:60:11","statements":[{"expression":{"expression":{"expression":{"id":2703,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4348:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_EstateFactory_$2732","typeString":"contract EstateFactory"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4353:22:11","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":2708,"src":"4348:27:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4376:8:11","memberName":"selector","nodeType":"MemberAccess","src":"4348:36:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":2702,"id":2706,"nodeType":"Return","src":"4341:43:11"}]},"functionSelector":"bc197c81","id":2708,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"4199:22:11","nodeType":"FunctionDefinition","overrides":{"id":2699,"nodeType":"OverrideSpecifier","overrides":[],"src":"4305:8:11"},"parameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2708,"src":"4222:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2686,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2708,"src":"4231:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2688,"name":"address","nodeType":"ElementaryTypeName","src":"4231:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2708,"src":"4240:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2690,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2691,"nodeType":"ArrayTypeName","src":"4240:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2708,"src":"4258:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2693,"name":"uint256","nodeType":"ElementaryTypeName","src":"4258:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2694,"nodeType":"ArrayTypeName","src":"4258:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2708,"src":"4276:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2696,"name":"bytes","nodeType":"ElementaryTypeName","src":"4276:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4221:68:11"},"returnParameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2708,"src":"4323:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2700,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4323:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4322:8:11"},"scope":2732,"src":"4190:201:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[188,1981],"body":{"id":2730,"nodeType":"Block","src":"4506:113:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2718,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"4523:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2720,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"4543:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1498_$","typeString":"type(contract IERC1155Receiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1498_$","typeString":"type(contract IERC1155Receiver)"}],"id":2719,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4538:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4538:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155Receiver_$1498","typeString":"type(contract IERC1155Receiver)"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4561:11:11","memberName":"interfaceId","nodeType":"MemberAccess","src":"4538:34:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4523:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2726,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"4600:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2724,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4576:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_EstateFactory_$2732_$","typeString":"type(contract super EstateFactory)"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4582:17:11","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":188,"src":"4576:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4523:89:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2717,"id":2729,"nodeType":"Return","src":"4516:96:11"}]},"functionSelector":"01ffc9a7","id":2731,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"4406:17:11","nodeType":"FunctionDefinition","overrides":{"id":2714,"nodeType":"OverrideSpecifier","overrides":[{"id":2712,"name":"ERC1155","nameLocations":["4473:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"4473:7:11"},{"id":2713,"name":"IERC165","nameLocations":["4482:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"4482:7:11"}],"src":"4464:26:11"},"parameters":{"id":2711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"mutability":"mutable","name":"interfaceId","nameLocation":"4431:11:11","nodeType":"VariableDeclaration","scope":2731,"src":"4424:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2709,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4424:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4423:20:11"},"returnParameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2731,"src":"4500:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2715,"name":"bool","nodeType":"ElementaryTypeName","src":"4500:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4499:6:11"},"scope":2732,"src":"4397:222:11","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2733,"src":"348:4278:11","usedErrors":[],"usedEvents":[1354,1369,1378,1385]}],"src":"81:4545:11"},"id":11},"contracts/WalletEstate.sol":{"ast":{"absolutePath":"contracts/WalletEstate.sol","exportedSymbols":{"Address":[1843],"Context":[1865],"ERC1155":[1335],"ERC165":[1970],"IERC1155":[1457],"IERC1155MetadataURI":[1513],"IERC1155Receiver":[1498],"IERC165":[1982],"Ownable":[112],"WalletEstate":[3069]},"id":3070,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2734,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"83:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":2735,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3070,"sourceUnit":1336,"src":"111:59:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","id":2736,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3070,"sourceUnit":1499,"src":"172:68:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2737,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3070,"sourceUnit":113,"src":"242:52:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2738,"name":"ERC1155","nameLocations":["325:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"325:7:12"},"id":2739,"nodeType":"InheritanceSpecifier","src":"325:7:12"},{"baseName":{"id":2740,"name":"IERC1155Receiver","nameLocations":["333:16:12"],"nodeType":"IdentifierPath","referencedDeclaration":1498,"src":"333:16:12"},"id":2741,"nodeType":"InheritanceSpecifier","src":"333:16:12"}],"canonicalName":"WalletEstate","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3069,"linearizedBaseContracts":[3069,1498,1335,1513,1457,1970,1982,1865],"name":"WalletEstate","nameLocation":"309:12:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2744,"mutability":"constant","name":"WALLET_TOKEN","nameLocation":"384:12:12","nodeType":"VariableDeclaration","scope":3069,"src":"359:41:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2742,"name":"uint256","nodeType":"ElementaryTypeName","src":"359:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"399:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"constant":false,"id":2746,"mutability":"mutable","name":"estateId","nameLocation":"423:8:12","nodeType":"VariableDeclaration","scope":3069,"src":"407:24:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2745,"name":"uint256","nodeType":"ElementaryTypeName","src":"407:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2748,"mutability":"mutable","name":"estateEvaluation","nameLocation":"454:16:12","nodeType":"VariableDeclaration","scope":3069,"src":"438:32:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2747,"name":"uint256","nodeType":"ElementaryTypeName","src":"438:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2750,"mutability":"mutable","name":"estateOwner","nameLocation":"501:11:12","nodeType":"VariableDeclaration","scope":3069,"src":"477:35:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2749,"name":"address","nodeType":"ElementaryTypeName","src":"477:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"private"},{"constant":false,"id":2754,"mutability":"mutable","name":"estateShareHolders","nameLocation":"548:18:12","nodeType":"VariableDeclaration","scope":3069,"src":"521:45:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2753,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2751,"name":"address","nodeType":"ElementaryTypeName","src":"530:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"521:26:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"539:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"investors","nameLocation":"602:9:12","nodeType":"VariableDeclaration","scope":3069,"src":"575:36:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[]"},"typeName":{"baseType":{"id":2755,"name":"address","nodeType":"ElementaryTypeName","src":"575:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2756,"nodeType":"ArrayTypeName","src":"575:18:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"private"},{"body":{"id":2786,"nodeType":"Block","src":"691:130:12","statements":[{"expression":{"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2767,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"695:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2768,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"706:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"695:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2770,"nodeType":"ExpressionStatement","src":"695:14:12"},{"expression":{"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2771,"name":"estateEvaluation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"720:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2772,"name":"_evaluation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"739:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"720:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2774,"nodeType":"ExpressionStatement","src":"720:30:12"},{"expression":{"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2775,"name":"estateOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"761:11:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":2780,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"791:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"795:6:12","memberName":"sender","nodeType":"MemberAccess","src":"791:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"783:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2778,"name":"address","nodeType":"ElementaryTypeName","src":"783:7:12","typeDescriptions":{}}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"783:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"775:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2776,"name":"address","nodeType":"ElementaryTypeName","src":"775:8:12","stateMutability":"payable","typeDescriptions":{}}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"775:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"761:42:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2785,"nodeType":"ExpressionStatement","src":"761:42:12"}]},"id":2787,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"","id":2764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"682:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":2765,"kind":"baseConstructorSpecifier","modifierName":{"id":2763,"name":"ERC1155","nameLocations":["674:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"674:7:12"},"nodeType":"ModifierInvocation","src":"674:11:12"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2759,"mutability":"mutable","name":"_id","nameLocation":"640:3:12","nodeType":"VariableDeclaration","scope":2787,"src":"632:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2761,"mutability":"mutable","name":"_evaluation","nameLocation":"652:11:12","nodeType":"VariableDeclaration","scope":2787,"src":"644:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"644:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:33:12"},"returnParameters":{"id":2766,"nodeType":"ParameterList","parameters":[],"src":"691:0:12"},"scope":3069,"src":"620:201:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2801,"nodeType":"Block","src":"916:64:12","statements":[{"expression":{"components":[{"id":2796,"name":"estateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"934:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2797,"name":"estateEvaluation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"943:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2798,"name":"estateOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"960:11:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":2799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"933:39:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_address_payable_$","typeString":"tuple(uint256,uint256,address payable)"}},"functionReturnParameters":2795,"id":2800,"nodeType":"Return","src":"927:45:12"}]},"functionSelector":"80bb4ef4","id":2802,"implemented":true,"kind":"function","modifiers":[],"name":"getInvestmentDetails","nameLocation":"839:20:12","nodeType":"FunctionDefinition","parameters":{"id":2788,"nodeType":"ParameterList","parameters":[],"src":"859:2:12"},"returnParameters":{"id":2795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2802,"src":"884:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2789,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2802,"src":"892:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2791,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2802,"src":"900:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2793,"name":"address","nodeType":"ElementaryTypeName","src":"900:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"883:33:12"},"scope":3069,"src":"830:150:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2810,"nodeType":"Block","src":"1063:35:12","statements":[{"expression":{"id":2808,"name":"investors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"1081:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"functionReturnParameters":2807,"id":2809,"nodeType":"Return","src":"1074:16:12"}]},"functionSelector":"d0a2f2c4","id":2811,"implemented":true,"kind":"function","modifiers":[],"name":"getAllInvestors","nameLocation":"997:15:12","nodeType":"FunctionDefinition","parameters":{"id":2803,"nodeType":"ParameterList","parameters":[],"src":"1012:2:12"},"returnParameters":{"id":2807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2811,"src":"1037:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[]"},"typeName":{"baseType":{"id":2804,"name":"address","nodeType":"ElementaryTypeName","src":"1037:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2805,"nodeType":"ArrayTypeName","src":"1037:18:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"internal"}],"src":"1036:27:12"},"scope":3069,"src":"988:110:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2823,"nodeType":"Block","src":"1192:56:12","statements":[{"expression":{"components":[{"baseExpression":{"id":2818,"name":"estateShareHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"1211:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2820,"indexExpression":{"id":2819,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"1230:8:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1211:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2821,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1210:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2817,"id":2822,"nodeType":"Return","src":"1203:37:12"}]},"functionSelector":"91a62523","id":2824,"implemented":true,"kind":"function","modifiers":[],"name":"getInvestmentDetails","nameLocation":"1115:20:12","nodeType":"FunctionDefinition","parameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"investor","nameLocation":"1152:8:12","nodeType":"VariableDeclaration","scope":2824,"src":"1136:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2812,"name":"address","nodeType":"ElementaryTypeName","src":"1136:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"1135:26:12"},"returnParameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2824,"src":"1184:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1184:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1183:9:12"},"scope":3069,"src":"1106:142:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2906,"nodeType":"Block","src":"1316:710:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2830,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"1335:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1345:3:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1335:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6178696d756d206e756d626572206f662073686172657320746861742063616e2062652070757263686173656420697320313030","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1349:55:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_b811e0bcaee688beca1c4c876410450d1a5dc16535505777aeaad61e55c5affa","typeString":"literal_string \"Maximum number of shares that can be purchased is 100\""},"value":"Maximum number of shares that can be purchased is 100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b811e0bcaee688beca1c4c876410450d1a5dc16535505777aeaad61e55c5affa","typeString":"literal_string \"Maximum number of shares that can be purchased is 100\""}],"id":2829,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1327:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1327:78:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2835,"nodeType":"ExpressionStatement","src":"1327:78:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2837,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"1424:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1433:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1424:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e756d626572206f6620736861726573207075726368617365642063616e6e6f74206265207a65726f206f72206c657373","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1436:51:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f6a885451413330205333b102dbb88440037fd5075a0982c9316f29ebbfc47b","typeString":"literal_string \"Number of shares purchased cannot be zero or less\""},"value":"Number of shares purchased cannot be zero or less"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1f6a885451413330205333b102dbb88440037fd5075a0982c9316f29ebbfc47b","typeString":"literal_string \"Number of shares purchased cannot be zero or less\""}],"id":2836,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1416:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1416:72:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2842,"nodeType":"ExpressionStatement","src":"1416:72:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2844,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"1507:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"arguments":[{"id":2848,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1534:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_WalletEstate_$3069","typeString":"contract WalletEstate"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WalletEstate_$3069","typeString":"contract WalletEstate"}],"id":2847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1526:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2846,"name":"address","nodeType":"ElementaryTypeName","src":"1526:7:12","typeDescriptions":{}}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1526:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2850,"name":"WALLET_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"1541:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2845,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"1516:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1516:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1507:47:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468657265206172656e27742073756666696369656e742073686172657320746f20626520707572636861736564","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1555:48:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ae004e89fa8ffc258c665923ea1b97ab7a44ceac26f6e4dd4d520fe101daea5","typeString":"literal_string \"There aren't sufficient shares to be purchased\""},"value":"There aren't sufficient shares to be purchased"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3ae004e89fa8ffc258c665923ea1b97ab7a44ceac26f6e4dd4d520fe101daea5","typeString":"literal_string \"There aren't sufficient shares to be purchased\""}],"id":2843,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1499:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1499:105:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2855,"nodeType":"ExpressionStatement","src":"1499:105:12"},{"expression":{"arguments":[{"expression":{"id":2864,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1802:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1806:5:12","memberName":"value","nodeType":"MemberAccess","src":"1802:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":2860,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1786:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_WalletEstate_$3069","typeString":"contract WalletEstate"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WalletEstate_$3069","typeString":"contract WalletEstate"}],"id":2859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1778:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2858,"name":"address","nodeType":"ElementaryTypeName","src":"1778:7:12","typeDescriptions":{}}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1778:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1770:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2856,"name":"address","nodeType":"ElementaryTypeName","src":"1770:8:12","stateMutability":"payable","typeDescriptions":{}}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1770:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1793:8:12","memberName":"transfer","nodeType":"MemberAccess","src":"1770:31:12","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1770:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2867,"nodeType":"ExpressionStatement","src":"1770:42:12"},{"expression":{"arguments":[{"arguments":[{"id":2871,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1849:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_WalletEstate_$3069","typeString":"contract WalletEstate"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WalletEstate_$3069","typeString":"contract WalletEstate"}],"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1841:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2869,"name":"address","nodeType":"ElementaryTypeName","src":"1841:7:12","typeDescriptions":{}}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1841:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"id":2875,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1864:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1864:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1856:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2873,"name":"address","nodeType":"ElementaryTypeName","src":"1856:7:12","typeDescriptions":{}}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1856:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2878,"name":"WALLET_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"1877:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2879,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"1891:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1901:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2868,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"1824:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1824:80:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2882,"nodeType":"ExpressionStatement","src":"1824:80:12"},{"expression":{"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2883,"name":"estateShareHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"1914:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2889,"indexExpression":{"arguments":[{"expression":{"id":2886,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1941:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1945:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1941:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1933:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2884,"name":"address","nodeType":"ElementaryTypeName","src":"1933:7:12","typeDescriptions":{}}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1933:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1914:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2890,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"1956:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1914:50:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2892,"nodeType":"ExpressionStatement","src":"1914:50:12"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2900,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2005:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2009:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2005:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1997:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2898,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:12","typeDescriptions":{}}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1997:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1989:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2896,"name":"address","nodeType":"ElementaryTypeName","src":"1989:8:12","stateMutability":"payable","typeDescriptions":{}}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":2893,"name":"investors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"1974:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1984:4:12","memberName":"push","nodeType":"MemberAccess","src":"1974:14:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$attached_to$_t_array$_t_address_payable_$dyn_storage_ptr_$","typeString":"function (address payable[] storage pointer,address payable)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2905,"nodeType":"ExpressionStatement","src":"1974:44:12"}]},"functionSelector":"df48981a","id":2907,"implemented":true,"kind":"function","modifiers":[],"name":"purchaseShares","nameLocation":"1265:14:12","nodeType":"FunctionDefinition","parameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2826,"mutability":"mutable","name":"quantity","nameLocation":"1288:8:12","nodeType":"VariableDeclaration","scope":2907,"src":"1280:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:18:12"},"returnParameters":{"id":2828,"nodeType":"ParameterList","parameters":[],"src":"1316:0:12"},"scope":3069,"src":"1256:770:12","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2955,"nodeType":"Block","src":"2102:332:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2915,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2121:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"baseExpression":{"id":2916,"name":"estateShareHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"2133:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2922,"indexExpression":{"arguments":[{"expression":{"id":2919,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2160:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2164:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2160:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2152:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2917,"name":"address","nodeType":"ElementaryTypeName","src":"2152:7:12","typeDescriptions":{}}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2152:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2133:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2121:51:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742073686172657320746f206265207472616e7366657272656420746f20726563657069656e74","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2174:52:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f63f1041bf6cc97048e7a9290e8ee69e6ed6322826dfcdf5952d03a441818414","typeString":"literal_string \"Insufficient shares to be transferred to recepient\""},"value":"Insufficient shares to be transferred to recepient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f63f1041bf6cc97048e7a9290e8ee69e6ed6322826dfcdf5952d03a441818414","typeString":"literal_string \"Insufficient shares to be transferred to recepient\""}],"id":2914,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2113:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2113:114:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2926,"nodeType":"ExpressionStatement","src":"2113:114:12"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2930,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2263:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2267:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2263:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2255:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2928,"name":"address","nodeType":"ElementaryTypeName","src":"2255:7:12","typeDescriptions":{}}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2255:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2933,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"2276:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2934,"name":"WALLET_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"2286:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2935,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2300:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2310:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2927,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2238:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2238:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2938,"nodeType":"ExpressionStatement","src":"2238:75:12"},{"expression":{"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2939,"name":"estateShareHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"2324:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2945,"indexExpression":{"arguments":[{"expression":{"id":2942,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2351:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2355:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2351:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2940,"name":"address","nodeType":"ElementaryTypeName","src":"2343:7:12","typeDescriptions":{}}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2324:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2946,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2367:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2324:51:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2948,"nodeType":"ExpressionStatement","src":"2324:51:12"},{"expression":{"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2949,"name":"estateShareHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"2386:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2951,"indexExpression":{"id":2950,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"2405:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2386:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2952,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"2418:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2386:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2954,"nodeType":"ExpressionStatement","src":"2386:40:12"}]},"functionSelector":"8fcb4e5b","id":2956,"implemented":true,"kind":"function","modifiers":[],"name":"transferShares","nameLocation":"2043:14:12","nodeType":"FunctionDefinition","parameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"receiver","nameLocation":"2066:8:12","nodeType":"VariableDeclaration","scope":2956,"src":"2058:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2908,"name":"address","nodeType":"ElementaryTypeName","src":"2058:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2911,"mutability":"mutable","name":"quantity","nameLocation":"2083:8:12","nodeType":"VariableDeclaration","scope":2956,"src":"2075:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"2075:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2057:35:12"},"returnParameters":{"id":2913,"nodeType":"ParameterList","parameters":[],"src":"2102:0:12"},"scope":3069,"src":"2034:400:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3025,"nodeType":"Block","src":"2497:412:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2962,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"2516:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"baseExpression":{"id":2963,"name":"estateShareHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"2528:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2969,"indexExpression":{"arguments":[{"expression":{"id":2966,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2555:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2559:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2555:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2547:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2964,"name":"address","nodeType":"ElementaryTypeName","src":"2547:7:12","typeDescriptions":{}}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2547:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2528:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2516:51:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742073686172657320746f20626520736f6c64","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2569:32:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_deec4200ccaf071840ccd9028f0968f70ac26a9f7072508882fe5e3ec5b74118","typeString":"literal_string \"Insufficient shares to be sold\""},"value":"Insufficient shares to be sold"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_deec4200ccaf071840ccd9028f0968f70ac26a9f7072508882fe5e3ec5b74118","typeString":"literal_string \"Insufficient shares to be sold\""}],"id":2961,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2508:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2508:94:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2973,"nodeType":"ExpressionStatement","src":"2508:94:12"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2977,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2638:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2642:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2638:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2630:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2975,"name":"address","nodeType":"ElementaryTypeName","src":"2630:7:12","typeDescriptions":{}}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2630:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2982,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2659:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_WalletEstate_$3069","typeString":"contract WalletEstate"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WalletEstate_$3069","typeString":"contract WalletEstate"}],"id":2981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2651:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2980,"name":"address","nodeType":"ElementaryTypeName","src":"2651:7:12","typeDescriptions":{}}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2651:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2984,"name":"WALLET_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"2666:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2985,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"2680:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2690:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2974,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2613:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2613:80:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2988,"nodeType":"ExpressionStatement","src":"2613:80:12"},{"assignments":[2990],"declarations":[{"constant":false,"id":2990,"mutability":"mutable","name":"share_evaluation","nameLocation":"2714:16:12","nodeType":"VariableDeclaration","scope":3025,"src":"2706:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2989,"name":"uint256","nodeType":"ElementaryTypeName","src":"2706:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3002,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2991,"name":"estateEvaluation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"2735:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2752:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2756:2:12","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2752:6:12","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"2735:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2734:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2760:3:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2734:29:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2999,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2733:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3000,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"2765:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2733:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2706:67:12"},{"expression":{"arguments":[{"id":3012,"name":"share_evaluation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"2822:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"expression":{"id":3007,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2800:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2804:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2800:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2792:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3005,"name":"address","nodeType":"ElementaryTypeName","src":"2792:7:12","typeDescriptions":{}}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2792:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2784:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3003,"name":"address","nodeType":"ElementaryTypeName","src":"2784:8:12","stateMutability":"payable","typeDescriptions":{}}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2784:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2813:8:12","memberName":"transfer","nodeType":"MemberAccess","src":"2784:37:12","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2784:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3014,"nodeType":"ExpressionStatement","src":"2784:55:12"},{"expression":{"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3015,"name":"estateShareHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"2850:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3021,"indexExpression":{"arguments":[{"expression":{"id":3018,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2877:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2881:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2877:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2869:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3016,"name":"address","nodeType":"ElementaryTypeName","src":"2869:7:12","typeDescriptions":{}}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2869:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2850:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3022,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"2892:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2850:50:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3024,"nodeType":"ExpressionStatement","src":"2850:50:12"}]},"functionSelector":"4ba8ae81","id":3026,"implemented":true,"kind":"function","modifiers":[],"name":"sellShares","nameLocation":"2451:10:12","nodeType":"FunctionDefinition","parameters":{"id":2959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2958,"mutability":"mutable","name":"quantity","nameLocation":"2470:8:12","nodeType":"VariableDeclaration","scope":3026,"src":"2462:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"2462:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2461:18:12"},"returnParameters":{"id":2960,"nodeType":"ParameterList","parameters":[],"src":"2497:0:12"},"scope":3069,"src":"2442:467:12","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[1479],"body":{"id":3045,"nodeType":"Block","src":"3028:57:12","statements":[{"expression":{"expression":{"expression":{"id":3041,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3046:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_WalletEstate_$3069","typeString":"contract WalletEstate"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3051:17:12","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":3046,"src":"3046:22:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3069:8:12","memberName":"selector","nodeType":"MemberAccess","src":"3046:31:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":3040,"id":3044,"nodeType":"Return","src":"3039:38:12"}]},"functionSelector":"f23a6e61","id":3046,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"2926:17:12","nodeType":"FunctionDefinition","parameters":{"id":3037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3046,"src":"2944:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3027,"name":"address","nodeType":"ElementaryTypeName","src":"2944:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3046,"src":"2953:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3029,"name":"address","nodeType":"ElementaryTypeName","src":"2953:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3046,"src":"2962:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"2962:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3046,"src":"2971:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"2971:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3046,"src":"2980:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3035,"name":"bytes","nodeType":"ElementaryTypeName","src":"2980:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2943:50:12"},"returnParameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3046,"src":"3020:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3038,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3020:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3019:8:12"},"scope":3069,"src":"2917:168:12","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"baseFunctions":[1497],"body":{"id":3067,"nodeType":"Block","src":"3227:62:12","statements":[{"expression":{"expression":{"expression":{"id":3063,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3245:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_WalletEstate_$3069","typeString":"contract WalletEstate"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3250:22:12","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":3068,"src":"3245:27:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3273:8:12","memberName":"selector","nodeType":"MemberAccess","src":"3245:36:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":3062,"id":3066,"nodeType":"Return","src":"3238:43:12"}]},"functionSelector":"bc197c81","id":3068,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"3102:22:12","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3068,"src":"3125:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3047,"name":"address","nodeType":"ElementaryTypeName","src":"3125:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3068,"src":"3134:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3049,"name":"address","nodeType":"ElementaryTypeName","src":"3134:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3068,"src":"3143:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"3143:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3052,"nodeType":"ArrayTypeName","src":"3143:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3068,"src":"3161:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"3161:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3055,"nodeType":"ArrayTypeName","src":"3161:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3068,"src":"3179:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3057,"name":"bytes","nodeType":"ElementaryTypeName","src":"3179:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3124:68:12"},"returnParameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3068,"src":"3219:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3060,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3219:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3218:8:12"},"scope":3069,"src":"3093:196:12","stateMutability":"nonpayable","virtual":true,"visibility":"external"}],"scope":3070,"src":"300:2994:12","usedErrors":[],"usedEvents":[1354,1369,1378,1385]}],"src":"83:3213:12"},"id":12}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"string","name":"uri_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"constructor":{"details":"See {_setURI}."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_157":{"entryPoint":null,"id":157,"parameterSlots":1,"returnSlots":0},"@_setURI_668":{"entryPoint":70,"id":668,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_string_memory_ptr_fromMemory":{"entryPoint":110,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":383,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":466,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":323,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":88,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3779:13","statements":[{"nodeType":"YulBlock","src":"6:3:13","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:13"},"nodeType":"YulFunctionCall","src":"66:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:13"},"nodeType":"YulFunctionCall","src":"56:31:13"},"nodeType":"YulExpressionStatement","src":"56:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:13"},"nodeType":"YulFunctionCall","src":"96:15:13"},"nodeType":"YulExpressionStatement","src":"96:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:13"},"nodeType":"YulFunctionCall","src":"120:15:13"},"nodeType":"YulExpressionStatement","src":"120:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:13"},{"body":{"nodeType":"YulBlock","src":"237:951:13","statements":[{"nodeType":"YulVariableDeclaration","src":"247:12:13","value":{"kind":"number","nodeType":"YulLiteral","src":"257:2:13","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"251:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"304:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"313:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"316:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"306:6:13"},"nodeType":"YulFunctionCall","src":"306:12:13"},"nodeType":"YulExpressionStatement","src":"306:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"279:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"288:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"275:3:13"},"nodeType":"YulFunctionCall","src":"275:23:13"},{"name":"_1","nodeType":"YulIdentifier","src":"300:2:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"271:3:13"},"nodeType":"YulFunctionCall","src":"271:32:13"},"nodeType":"YulIf","src":"268:52:13"},{"nodeType":"YulVariableDeclaration","src":"329:30:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"349:9:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"343:5:13"},"nodeType":"YulFunctionCall","src":"343:16:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"333:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"368:28:13","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"386:2:13","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"390:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"382:3:13"},"nodeType":"YulFunctionCall","src":"382:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"394:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"378:3:13"},"nodeType":"YulFunctionCall","src":"378:18:13"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"372:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"423:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"432:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"435:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"425:6:13"},"nodeType":"YulFunctionCall","src":"425:12:13"},"nodeType":"YulExpressionStatement","src":"425:12:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"411:6:13"},{"name":"_2","nodeType":"YulIdentifier","src":"419:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"408:2:13"},"nodeType":"YulFunctionCall","src":"408:14:13"},"nodeType":"YulIf","src":"405:34:13"},{"nodeType":"YulVariableDeclaration","src":"448:32:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"473:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"458:3:13"},"nodeType":"YulFunctionCall","src":"458:22:13"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"452:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"528:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"537:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"540:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"530:6:13"},"nodeType":"YulFunctionCall","src":"530:12:13"},"nodeType":"YulExpressionStatement","src":"530:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"507:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"511:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"503:3:13"},"nodeType":"YulFunctionCall","src":"503:13:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"518:7:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"499:3:13"},"nodeType":"YulFunctionCall","src":"499:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"492:6:13"},"nodeType":"YulFunctionCall","src":"492:35:13"},"nodeType":"YulIf","src":"489:55:13"},{"nodeType":"YulVariableDeclaration","src":"553:19:13","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"569:2:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"563:5:13"},"nodeType":"YulFunctionCall","src":"563:9:13"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"557:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"595:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"597:16:13"},"nodeType":"YulFunctionCall","src":"597:18:13"},"nodeType":"YulExpressionStatement","src":"597:18:13"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"587:2:13"},{"name":"_2","nodeType":"YulIdentifier","src":"591:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"584:2:13"},"nodeType":"YulFunctionCall","src":"584:10:13"},"nodeType":"YulIf","src":"581:36:13"},{"nodeType":"YulVariableDeclaration","src":"626:17:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"640:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"636:3:13"},"nodeType":"YulFunctionCall","src":"636:7:13"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"630:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"652:23:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"666:5:13"},"nodeType":"YulFunctionCall","src":"666:9:13"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"656:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"684:71:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"706:6:13"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"730:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"734:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"726:3:13"},"nodeType":"YulFunctionCall","src":"726:13:13"},{"name":"_5","nodeType":"YulIdentifier","src":"741:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"722:3:13"},"nodeType":"YulFunctionCall","src":"722:22:13"},{"kind":"number","nodeType":"YulLiteral","src":"746:2:13","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"718:3:13"},"nodeType":"YulFunctionCall","src":"718:31:13"},{"name":"_5","nodeType":"YulIdentifier","src":"751:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"714:3:13"},"nodeType":"YulFunctionCall","src":"714:40:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"702:3:13"},"nodeType":"YulFunctionCall","src":"702:53:13"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"688:10:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"814:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"816:16:13"},"nodeType":"YulFunctionCall","src":"816:18:13"},"nodeType":"YulExpressionStatement","src":"816:18:13"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"773:10:13"},{"name":"_2","nodeType":"YulIdentifier","src":"785:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"770:2:13"},"nodeType":"YulFunctionCall","src":"770:18:13"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"793:10:13"},{"name":"memPtr","nodeType":"YulIdentifier","src":"805:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"790:2:13"},"nodeType":"YulFunctionCall","src":"790:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"767:2:13"},"nodeType":"YulFunctionCall","src":"767:46:13"},"nodeType":"YulIf","src":"764:72:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"852:2:13","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"856:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"845:6:13"},"nodeType":"YulFunctionCall","src":"845:22:13"},"nodeType":"YulExpressionStatement","src":"845:22:13"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"883:6:13"},{"name":"_4","nodeType":"YulIdentifier","src":"891:2:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"876:6:13"},"nodeType":"YulFunctionCall","src":"876:18:13"},"nodeType":"YulExpressionStatement","src":"876:18:13"},{"body":{"nodeType":"YulBlock","src":"940:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"949:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"952:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"942:6:13"},"nodeType":"YulFunctionCall","src":"942:12:13"},"nodeType":"YulExpressionStatement","src":"942:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"917:2:13"},{"name":"_4","nodeType":"YulIdentifier","src":"921:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"913:3:13"},"nodeType":"YulFunctionCall","src":"913:11:13"},{"name":"_1","nodeType":"YulIdentifier","src":"926:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"909:3:13"},"nodeType":"YulFunctionCall","src":"909:20:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"931:7:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"906:2:13"},"nodeType":"YulFunctionCall","src":"906:33:13"},"nodeType":"YulIf","src":"903:53:13"},{"nodeType":"YulVariableDeclaration","src":"965:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"974:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"969:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1030:83:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1059:6:13"},{"name":"i","nodeType":"YulIdentifier","src":"1067:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1055:3:13"},"nodeType":"YulFunctionCall","src":"1055:14:13"},{"name":"_1","nodeType":"YulIdentifier","src":"1071:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1051:3:13"},"nodeType":"YulFunctionCall","src":"1051:23:13"},{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1090:2:13"},{"name":"i","nodeType":"YulIdentifier","src":"1094:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1086:3:13"},"nodeType":"YulFunctionCall","src":"1086:10:13"},{"name":"_1","nodeType":"YulIdentifier","src":"1098:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1082:3:13"},"nodeType":"YulFunctionCall","src":"1082:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1076:5:13"},"nodeType":"YulFunctionCall","src":"1076:26:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1044:6:13"},"nodeType":"YulFunctionCall","src":"1044:59:13"},"nodeType":"YulExpressionStatement","src":"1044:59:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"995:1:13"},{"name":"_4","nodeType":"YulIdentifier","src":"998:2:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"992:2:13"},"nodeType":"YulFunctionCall","src":"992:9:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1002:19:13","statements":[{"nodeType":"YulAssignment","src":"1004:15:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1013:1:13"},{"name":"_1","nodeType":"YulIdentifier","src":"1016:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1009:3:13"},"nodeType":"YulFunctionCall","src":"1009:10:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1004:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"988:3:13","statements":[]},"src":"984:129:13"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1137:6:13"},{"name":"_4","nodeType":"YulIdentifier","src":"1145:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1133:3:13"},"nodeType":"YulFunctionCall","src":"1133:15:13"},{"name":"_1","nodeType":"YulIdentifier","src":"1150:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1129:3:13"},"nodeType":"YulFunctionCall","src":"1129:24:13"},{"kind":"number","nodeType":"YulLiteral","src":"1155:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1122:6:13"},"nodeType":"YulFunctionCall","src":"1122:35:13"},"nodeType":"YulExpressionStatement","src":"1122:35:13"},{"nodeType":"YulAssignment","src":"1166:16:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1176:6:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1166:6:13"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"203:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"214:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"226:6:13","type":""}],"src":"146:1042:13"},{"body":{"nodeType":"YulBlock","src":"1248:325:13","statements":[{"nodeType":"YulAssignment","src":"1258:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1272:1:13","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1275:4:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1268:3:13"},"nodeType":"YulFunctionCall","src":"1268:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1258:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"1289:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1319:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"1325:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1315:3:13"},"nodeType":"YulFunctionCall","src":"1315:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1293:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1366:31:13","statements":[{"nodeType":"YulAssignment","src":"1368:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1382:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1390:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1378:3:13"},"nodeType":"YulFunctionCall","src":"1378:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1368:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1346:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1339:6:13"},"nodeType":"YulFunctionCall","src":"1339:26:13"},"nodeType":"YulIf","src":"1336:61:13"},{"body":{"nodeType":"YulBlock","src":"1456:111:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1477:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1484:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1489:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1480:3:13"},"nodeType":"YulFunctionCall","src":"1480:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1470:6:13"},"nodeType":"YulFunctionCall","src":"1470:31:13"},"nodeType":"YulExpressionStatement","src":"1470:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1521:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1524:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1514:6:13"},"nodeType":"YulFunctionCall","src":"1514:15:13"},"nodeType":"YulExpressionStatement","src":"1514:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1549:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1552:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1542:6:13"},"nodeType":"YulFunctionCall","src":"1542:15:13"},"nodeType":"YulExpressionStatement","src":"1542:15:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1412:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1435:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1443:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1432:2:13"},"nodeType":"YulFunctionCall","src":"1432:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1409:2:13"},"nodeType":"YulFunctionCall","src":"1409:38:13"},"nodeType":"YulIf","src":"1406:161:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1228:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1237:6:13","type":""}],"src":"1193:380:13"},{"body":{"nodeType":"YulBlock","src":"1634:65:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1651:1:13","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1654:3:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1644:6:13"},"nodeType":"YulFunctionCall","src":"1644:14:13"},"nodeType":"YulExpressionStatement","src":"1644:14:13"},{"nodeType":"YulAssignment","src":"1667:26:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1685:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1688:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1675:9:13"},"nodeType":"YulFunctionCall","src":"1675:18:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1667:4:13"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1617:3:13","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1625:4:13","type":""}],"src":"1578:121:13"},{"body":{"nodeType":"YulBlock","src":"1785:464:13","statements":[{"body":{"nodeType":"YulBlock","src":"1818:425:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1832:11:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1842:1:13","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1836:2:13","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1863:2:13"},{"name":"array","nodeType":"YulIdentifier","src":"1867:5:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1856:6:13"},"nodeType":"YulFunctionCall","src":"1856:17:13"},"nodeType":"YulExpressionStatement","src":"1856:17:13"},{"nodeType":"YulVariableDeclaration","src":"1886:31:13","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1908:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"1912:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1898:9:13"},"nodeType":"YulFunctionCall","src":"1898:19:13"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"1890:4:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1930:57:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1953:4:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1963:1:13","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1970:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"1982:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:13"},"nodeType":"YulFunctionCall","src":"1966:19:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1959:3:13"},"nodeType":"YulFunctionCall","src":"1959:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1949:3:13"},"nodeType":"YulFunctionCall","src":"1949:38:13"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"1934:11:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2024:23:13","statements":[{"nodeType":"YulAssignment","src":"2026:19:13","value":{"name":"data","nodeType":"YulIdentifier","src":"2041:4:13"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2026:11:13"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2006:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"2018:4:13","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2003:2:13"},"nodeType":"YulFunctionCall","src":"2003:20:13"},"nodeType":"YulIf","src":"2000:47:13"},{"nodeType":"YulVariableDeclaration","src":"2060:41:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2074:4:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2084:1:13","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2091:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"2096:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2087:3:13"},"nodeType":"YulFunctionCall","src":"2087:12:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2080:3:13"},"nodeType":"YulFunctionCall","src":"2080:20:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2070:3:13"},"nodeType":"YulFunctionCall","src":"2070:31:13"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2064:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2114:24:13","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2127:11:13"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2118:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2212:21:13","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2221:5:13"},{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2214:6:13"},"nodeType":"YulFunctionCall","src":"2214:17:13"},"nodeType":"YulExpressionStatement","src":"2214:17:13"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2162:5:13"},{"name":"_2","nodeType":"YulIdentifier","src":"2169:2:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2159:2:13"},"nodeType":"YulFunctionCall","src":"2159:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2173:26:13","statements":[{"nodeType":"YulAssignment","src":"2175:22:13","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2188:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"2195:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:13"},"nodeType":"YulFunctionCall","src":"2184:13:13"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2175:5:13"}]}]},"pre":{"nodeType":"YulBlock","src":"2155:3:13","statements":[]},"src":"2151:82:13"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1801:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1806:2:13","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1798:2:13"},"nodeType":"YulFunctionCall","src":"1798:11:13"},"nodeType":"YulIf","src":"1795:448:13"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"1757:5:13","type":""},{"name":"len","nodeType":"YulTypedName","src":"1764:3:13","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"1769:10:13","type":""}],"src":"1704:545:13"},{"body":{"nodeType":"YulBlock","src":"2339:81:13","statements":[{"nodeType":"YulAssignment","src":"2349:65:13","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2364:4:13"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2382:1:13","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2385:3:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2378:3:13"},"nodeType":"YulFunctionCall","src":"2378:11:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2395:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2391:3:13"},"nodeType":"YulFunctionCall","src":"2391:6:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2374:3:13"},"nodeType":"YulFunctionCall","src":"2374:24:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2370:3:13"},"nodeType":"YulFunctionCall","src":"2370:29:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2360:3:13"},"nodeType":"YulFunctionCall","src":"2360:40:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2406:1:13","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2409:3:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2402:3:13"},"nodeType":"YulFunctionCall","src":"2402:11:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2357:2:13"},"nodeType":"YulFunctionCall","src":"2357:57:13"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2349:4:13"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2316:4:13","type":""},{"name":"len","nodeType":"YulTypedName","src":"2322:3:13","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2330:4:13","type":""}],"src":"2254:166:13"},{"body":{"nodeType":"YulBlock","src":"2521:1256:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2531:24:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2551:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2545:5:13"},"nodeType":"YulFunctionCall","src":"2545:10:13"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2535:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2598:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2600:16:13"},"nodeType":"YulFunctionCall","src":"2600:18:13"},"nodeType":"YulExpressionStatement","src":"2600:18:13"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2570:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2586:2:13","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2590:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2582:3:13"},"nodeType":"YulFunctionCall","src":"2582:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"2594:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2578:3:13"},"nodeType":"YulFunctionCall","src":"2578:18:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2567:2:13"},"nodeType":"YulFunctionCall","src":"2567:30:13"},"nodeType":"YulIf","src":"2564:56:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2673:4:13"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2711:4:13"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2705:5:13"},"nodeType":"YulFunctionCall","src":"2705:11:13"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"2679:25:13"},"nodeType":"YulFunctionCall","src":"2679:38:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"2719:6:13"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2629:43:13"},"nodeType":"YulFunctionCall","src":"2629:97:13"},"nodeType":"YulExpressionStatement","src":"2629:97:13"},{"nodeType":"YulVariableDeclaration","src":"2735:18:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2752:1:13","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"2739:9:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2762:23:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2781:4:13","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"2766:11:13","type":""}]},{"nodeType":"YulAssignment","src":"2794:24:13","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2807:11:13"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2794:9:13"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2864:656:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2878:35:13","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2897:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2909:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2905:3:13"},"nodeType":"YulFunctionCall","src":"2905:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2893:3:13"},"nodeType":"YulFunctionCall","src":"2893:20:13"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"2882:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2926:49:13","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2970:4:13"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"2940:29:13"},"nodeType":"YulFunctionCall","src":"2940:35:13"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"2930:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2988:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2997:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2992:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3075:172:13","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3100:6:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3118:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3123:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3114:3:13"},"nodeType":"YulFunctionCall","src":"3114:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3108:5:13"},"nodeType":"YulFunctionCall","src":"3108:26:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3093:6:13"},"nodeType":"YulFunctionCall","src":"3093:42:13"},"nodeType":"YulExpressionStatement","src":"3093:42:13"},{"nodeType":"YulAssignment","src":"3152:24:13","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3166:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3174:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3162:3:13"},"nodeType":"YulFunctionCall","src":"3162:14:13"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3152:6:13"}]},{"nodeType":"YulAssignment","src":"3193:40:13","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3210:9:13"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3221:11:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3206:3:13"},"nodeType":"YulFunctionCall","src":"3206:27:13"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3193:9:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3022:1:13"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3025:7:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3019:2:13"},"nodeType":"YulFunctionCall","src":"3019:14:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3034:28:13","statements":[{"nodeType":"YulAssignment","src":"3036:24:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3045:1:13"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3048:11:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3041:3:13"},"nodeType":"YulFunctionCall","src":"3041:19:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3036:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"3015:3:13","statements":[]},"src":"3011:236:13"},{"body":{"nodeType":"YulBlock","src":"3295:166:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3313:43:13","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3340:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3345:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3336:3:13"},"nodeType":"YulFunctionCall","src":"3336:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3330:5:13"},"nodeType":"YulFunctionCall","src":"3330:26:13"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3317:9:13","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3380:6:13"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3392:9:13"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3419:1:13","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3422:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3415:3:13"},"nodeType":"YulFunctionCall","src":"3415:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"3431:3:13","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3411:3:13"},"nodeType":"YulFunctionCall","src":"3411:24:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3441:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3437:3:13"},"nodeType":"YulFunctionCall","src":"3437:6:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3407:3:13"},"nodeType":"YulFunctionCall","src":"3407:37:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3403:3:13"},"nodeType":"YulFunctionCall","src":"3403:42:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3388:3:13"},"nodeType":"YulFunctionCall","src":"3388:58:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3373:6:13"},"nodeType":"YulFunctionCall","src":"3373:74:13"},"nodeType":"YulExpressionStatement","src":"3373:74:13"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3266:7:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"3275:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3263:2:13"},"nodeType":"YulFunctionCall","src":"3263:19:13"},"nodeType":"YulIf","src":"3260:201:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3481:4:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3495:1:13","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3498:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3491:3:13"},"nodeType":"YulFunctionCall","src":"3491:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"3507:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3487:3:13"},"nodeType":"YulFunctionCall","src":"3487:22:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3474:6:13"},"nodeType":"YulFunctionCall","src":"3474:36:13"},"nodeType":"YulExpressionStatement","src":"3474:36:13"}]},"nodeType":"YulCase","src":"2857:663:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2862:1:13","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3537:234:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3551:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3564:1:13","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3555:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3600:67:13","statements":[{"nodeType":"YulAssignment","src":"3618:35:13","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3637:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3642:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3633:3:13"},"nodeType":"YulFunctionCall","src":"3633:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3627:5:13"},"nodeType":"YulFunctionCall","src":"3627:26:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3618:5:13"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3581:6:13"},"nodeType":"YulIf","src":"3578:89:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3687:4:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3746:5:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"3753:6:13"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"3693:52:13"},"nodeType":"YulFunctionCall","src":"3693:67:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3680:6:13"},"nodeType":"YulFunctionCall","src":"3680:81:13"},"nodeType":"YulExpressionStatement","src":"3680:81:13"}]},"nodeType":"YulCase","src":"3529:242:13","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2837:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2845:2:13","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2834:2:13"},"nodeType":"YulFunctionCall","src":"2834:14:13"},"nodeType":"YulSwitch","src":"2827:944:13"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2506:4:13","type":""},{"name":"src","nodeType":"YulTypedName","src":"2512:3:13","type":""}],"src":"2425:1352:13"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        mstore(add(add(memPtr, _4), _1), 0)\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x171F CODESIZE SUB DUP1 PUSH3 0x171F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x6E JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x29E JUMP JUMPDEST PUSH1 0x2 PUSH3 0x54 DUP3 DUP3 PUSH3 0x1D2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0xC4 JUMPI PUSH3 0xC4 PUSH3 0x58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xEF JUMPI PUSH3 0xEF PUSH3 0x58 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x12C JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x10D JUMP JUMPDEST PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x158 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x179 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1CD JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1A8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1C9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1B4 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1EE JUMPI PUSH3 0x1EE PUSH3 0x58 JUMP JUMPDEST PUSH3 0x206 DUP2 PUSH3 0x1FF DUP5 SLOAD PUSH3 0x143 JUMP JUMPDEST DUP5 PUSH3 0x17F JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x23E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x225 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1C9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x26F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x24E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x28E JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1471 DUP1 PUSH3 0x2AE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xD5B JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9E JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC2 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xE21 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x39C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1130 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x4C6 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x11B2 JUMP JUMPDEST PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x256 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x21F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x21F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1217 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1217 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x395 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x561 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x401 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x41D JUMPI PUSH2 0x41D PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x446 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4BE JUMPI PUSH2 0x491 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46A JUMPI PUSH2 0x46A PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x484 JUMPI PUSH2 0x484 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A3 JUMPI PUSH2 0x4A3 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4B7 DUP2 PUSH2 0x127D JUMP JUMPDEST SWAP1 POP PUSH2 0x44C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D1 CALLER DUP4 DUP4 PUSH2 0x7BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F1 JUMPI POP PUSH2 0x4F1 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x395 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x89F JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x627 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x751 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x648 JUMPI PUSH2 0x648 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x666 JUMPI PUSH2 0x666 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x736 SWAP1 DUP5 SWAP1 PUSH2 0x1296 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x74A SWAP1 PUSH2 0x127D JUMP JUMPDEST SWAP1 POP PUSH2 0x62B JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7A1 SWAP3 SWAP2 SWAP1 PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x7B7 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xA4A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x832 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x903 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x90F DUP6 PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x91C DUP6 PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x9DF SWAP1 DUP5 SWAP1 PUSH2 0x1296 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA3F DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xC43 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xA8E SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAC9 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAC6 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB7E JUMPI PUSH2 0xAD5 PUSH2 0x1352 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xB0E JUMPI POP PUSH2 0xAE9 PUSH2 0x136E JUMP JUMPDEST DUP1 PUSH2 0xAF4 JUMPI POP PUSH2 0xB10 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xE21 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC32 JUMPI PUSH2 0xC32 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xC87 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCC2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCBF SWAP2 DUP2 ADD SWAP1 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCCE JUMPI PUSH2 0xAD5 PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD77 DUP4 PUSH2 0xD3F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDBB DUP2 PUSH2 0xD85 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE01 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xDE5 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xDBB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDDB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE70 JUMPI PUSH2 0xE70 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE91 JUMPI PUSH2 0xE91 PUSH2 0xE34 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEB9 DUP3 PUSH2 0xE77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC6 DUP3 DUP3 PUSH2 0xE4A JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xEE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xF01 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xEEA JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF37 JUMPI PUSH2 0xF37 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4E PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xE4A JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xF63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA1 DUP7 PUSH2 0xD3F JUMP JUMPDEST SWAP5 POP PUSH2 0xFAF PUSH1 0x20 DUP8 ADD PUSH2 0xD3F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD8 DUP10 DUP4 DUP11 ADD PUSH2 0xE9B JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xFEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFFA DUP10 DUP4 DUP11 ADD PUSH2 0xE9B JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1010 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101D DUP9 DUP3 DUP10 ADD PUSH2 0xF0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x103D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1069 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1076 DUP3 PUSH2 0xE77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1083 DUP3 DUP3 PUSH2 0xE4A JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x10A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x10C8 JUMPI PUSH2 0x10B9 DUP7 PUSH2 0xD3F JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x10A8 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x10DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10EB DUP6 DUP3 DUP7 ADD PUSH2 0xE9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1125 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1109 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xDBB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x115F DUP4 PUSH2 0xD3F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x119B DUP4 PUSH2 0xD3F JUMP JUMPDEST SWAP2 POP PUSH2 0x11A9 PUSH1 0x20 DUP5 ADD PUSH2 0xD3F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11D3 DUP7 PUSH2 0xD3F JUMP JUMPDEST SWAP5 POP PUSH2 0x11E1 PUSH1 0x20 DUP8 ADD PUSH2 0xD3F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x120B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x101D DUP9 DUP3 DUP10 ADD PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x122B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x124B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x128F JUMPI PUSH2 0x128F PUSH2 0x1267 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x21F JUMPI PUSH2 0x21F PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12BC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x10F5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x12CE DUP2 DUP6 PUSH2 0x10F5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1303 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x10F5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1315 DUP2 DUP7 PUSH2 0x10F5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1329 DUP2 DUP6 PUSH2 0xDDB JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDBB DUP2 PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x136B JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x137C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x13AC JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x13C4 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x13DE JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x13ED PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xE4A JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1430 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xDDB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xEE PUSH14 0xCD652B9F23C0E173B72CF52B9E2E DUP8 DUP7 SWAP6 DIV SWAP6 0xA9 ADD 0xB4 PC 0xB8 0xD6 SUB PUSH30 0x313964736F6C634300081400330000000000000000000000000000000000 ","sourceMap":"570:16539:1:-:0;;;1107:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1149:13;1157:4;1149:7;:13::i;:::-;1107:62;570:16539;;8149:86;8215:4;:13;8222:6;8215:4;:13;:::i;:::-;;8149:86;:::o;14:127:13:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1042;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:13;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:13;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1155:1;1150:2;1145;1137:6;1133:15;1129:24;1122:35;1176:6;1166:16;;;;;;;;146:1042;;;;:::o;1193:380::-;1272:1;1268:12;;;;1315;;;1336:61;;1390:4;1382:6;1378:17;1368:27;;1336:61;1443:2;1435:6;1432:14;1412:18;1409:38;1406:161;;1489:10;1484:3;1480:20;1477:1;1470:31;1524:4;1521:1;1514:15;1552:4;1549:1;1542:15;1406:161;;1193:380;;;:::o;1704:545::-;1806:2;1801:3;1798:11;1795:448;;;1842:1;1867:5;1863:2;1856:17;1912:4;1908:2;1898:19;1982:2;1970:10;1966:19;1963:1;1959:27;1953:4;1949:38;2018:4;2006:10;2003:20;2000:47;;;-1:-1:-1;2041:4:13;2000:47;2096:2;2091:3;2087:12;2084:1;2080:20;2074:4;2070:31;2060:41;;2151:82;2169:2;2162:5;2159:13;2151:82;;;2214:17;;;2195:1;2184:13;2151:82;;;2155:3;;;1795:448;1704:545;;;:::o;2425:1352::-;2545:10;;-1:-1:-1;;;;;2567:30:13;;2564:56;;;2600:18;;:::i;:::-;2629:97;2719:6;2679:38;2711:4;2705:11;2679:38;:::i;:::-;2673:4;2629:97;:::i;:::-;2781:4;;2845:2;2834:14;;2862:1;2857:663;;;;3564:1;3581:6;3578:89;;;-1:-1:-1;3633:19:13;;;3627:26;3578:89;-1:-1:-1;;2382:1:13;2378:11;;;2374:24;2370:29;2360:40;2406:1;2402:11;;;2357:57;3680:81;;2827:944;;2857:663;1651:1;1644:14;;;1688:4;1675:18;;-1:-1:-1;;2893:20:13;;;3011:236;3025:7;3022:1;3019:14;3011:236;;;3114:19;;;3108:26;3093:42;;3206:27;;;;3174:1;3162:14;;;;3041:19;;3011:236;;;3015:3;3275:6;3266:7;3263:19;3260:201;;;3336:19;;;3330:26;-1:-1:-1;;3419:1:13;3415:14;;;3431:3;3411:24;3407:37;3403:42;3388:58;3373:74;;3260:201;-1:-1:-1;;;;;3507:1:13;3491:14;;;3487:22;3474:36;;-1:-1:-1;2425:1352:13:o;:::-;570:16539:1;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1178":{"entryPoint":null,"id":1178,"parameterSlots":6,"returnSlots":0},"@_asSingletonArray_1334":{"entryPoint":3064,"id":1334,"parameterSlots":1,"returnSlots":1},"@_beforeTokenTransfer_1159":{"entryPoint":null,"id":1159,"parameterSlots":6,"returnSlots":0},"@_doSafeBatchTransferAcceptanceCheck_1306":{"entryPoint":2634,"id":1306,"parameterSlots":6,"returnSlots":0},"@_doSafeTransferAcceptanceCheck_1241":{"entryPoint":3139,"id":1241,"parameterSlots":6,"returnSlots":0},"@_msgSender_1855":{"entryPoint":null,"id":1855,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_657":{"entryPoint":1377,"id":657,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_522":{"entryPoint":2207,"id":522,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1140":{"entryPoint":1983,"id":1140,"parameterSlots":3,"returnSlots":0},"@balanceOfBatch_292":{"entryPoint":924,"id":292,"parameterSlots":2,"returnSlots":1},"@balanceOf_228":{"entryPoint":396,"id":228,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_327":{"entryPoint":null,"id":327,"parameterSlots":2,"returnSlots":1},"@isContract_1531":{"entryPoint":null,"id":1531,"parameterSlots":1,"returnSlots":1},"@safeBatchTransferFrom_405":{"entryPoint":777,"id":405,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_365":{"entryPoint":1237,"id":365,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_309":{"entryPoint":1222,"id":309,"parameterSlots":2,"returnSlots":0},"@supportsInterface_188":{"entryPoint":549,"id":188,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1969":{"entryPoint":null,"id":1969,"parameterSlots":1,"returnSlots":1},"@uri_200":{"entryPoint":629,"id":200,"parameterSlots":1,"returnSlots":1},"abi_decode_address":{"entryPoint":3391,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":3739,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":3852,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4479,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":3968,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":4530,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":4419,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3419,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4138,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":3486,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":4917,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3522,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":4341,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3547,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4823,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5112,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4400,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4777,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3617,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":3703,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4758,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4631,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3658,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":4733,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4711,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4689,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3636,"id":null,"parameterSlots":0,"returnSlots":0},"return_data_selector":{"entryPoint":4946,"id":null,"parameterSlots":0,"returnSlots":1},"try_decode_error_message":{"entryPoint":4974,"id":null,"parameterSlots":0,"returnSlots":1},"validator_revert_bytes4":{"entryPoint":3461,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15929:13","statements":[{"nodeType":"YulBlock","src":"6:3:13","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:147:13","statements":[{"nodeType":"YulAssignment","src":"73:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:13"},"nodeType":"YulFunctionCall","src":"82:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:13"}]},{"body":{"nodeType":"YulBlock","src":"188:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"200:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"190:6:13"},"nodeType":"YulFunctionCall","src":"190:12:13"},"nodeType":"YulExpressionStatement","src":"190:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"142:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:13"},"nodeType":"YulFunctionCall","src":"131:54:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:13"},"nodeType":"YulFunctionCall","src":"121:65:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:13"},"nodeType":"YulFunctionCall","src":"114:73:13"},"nodeType":"YulIf","src":"111:93:13"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:13","type":""}],"src":"14:196:13"},{"body":{"nodeType":"YulBlock","src":"302:167:13","statements":[{"body":{"nodeType":"YulBlock","src":"348:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"357:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"360:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"350:6:13"},"nodeType":"YulFunctionCall","src":"350:12:13"},"nodeType":"YulExpressionStatement","src":"350:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"323:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"332:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"319:3:13"},"nodeType":"YulFunctionCall","src":"319:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"344:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"315:3:13"},"nodeType":"YulFunctionCall","src":"315:32:13"},"nodeType":"YulIf","src":"312:52:13"},{"nodeType":"YulAssignment","src":"373:39:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"402:9:13"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"383:18:13"},"nodeType":"YulFunctionCall","src":"383:29:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"373:6:13"}]},{"nodeType":"YulAssignment","src":"421:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"448:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"459:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"444:3:13"},"nodeType":"YulFunctionCall","src":"444:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"431:12:13"},"nodeType":"YulFunctionCall","src":"431:32:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"421:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"260:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"271:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"283:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"291:6:13","type":""}],"src":"215:254:13"},{"body":{"nodeType":"YulBlock","src":"575:76:13","statements":[{"nodeType":"YulAssignment","src":"585:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"597:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"608:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"593:3:13"},"nodeType":"YulFunctionCall","src":"593:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"585:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"627:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"638:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"620:6:13"},"nodeType":"YulFunctionCall","src":"620:25:13"},"nodeType":"YulExpressionStatement","src":"620:25:13"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"544:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"555:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"566:4:13","type":""}],"src":"474:177:13"},{"body":{"nodeType":"YulBlock","src":"700:87:13","statements":[{"body":{"nodeType":"YulBlock","src":"765:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"774:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"777:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"767:6:13"},"nodeType":"YulFunctionCall","src":"767:12:13"},"nodeType":"YulExpressionStatement","src":"767:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"723:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"734:5:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"745:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"750:10:13","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"741:3:13"},"nodeType":"YulFunctionCall","src":"741:20:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"730:3:13"},"nodeType":"YulFunctionCall","src":"730:32:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"720:2:13"},"nodeType":"YulFunctionCall","src":"720:43:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"713:6:13"},"nodeType":"YulFunctionCall","src":"713:51:13"},"nodeType":"YulIf","src":"710:71:13"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"689:5:13","type":""}],"src":"656:131:13"},{"body":{"nodeType":"YulBlock","src":"861:176:13","statements":[{"body":{"nodeType":"YulBlock","src":"907:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"919:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"909:6:13"},"nodeType":"YulFunctionCall","src":"909:12:13"},"nodeType":"YulExpressionStatement","src":"909:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"882:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"891:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"878:3:13"},"nodeType":"YulFunctionCall","src":"878:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"903:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"874:3:13"},"nodeType":"YulFunctionCall","src":"874:32:13"},"nodeType":"YulIf","src":"871:52:13"},{"nodeType":"YulVariableDeclaration","src":"932:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"958:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"945:12:13"},"nodeType":"YulFunctionCall","src":"945:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"936:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1001:5:13"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"977:23:13"},"nodeType":"YulFunctionCall","src":"977:30:13"},"nodeType":"YulExpressionStatement","src":"977:30:13"},{"nodeType":"YulAssignment","src":"1016:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"1026:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1016:6:13"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"827:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"838:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"850:6:13","type":""}],"src":"792:245:13"},{"body":{"nodeType":"YulBlock","src":"1137:92:13","statements":[{"nodeType":"YulAssignment","src":"1147:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1159:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1170:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1155:3:13"},"nodeType":"YulFunctionCall","src":"1155:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1147:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1189:9:13"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1214:6:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1207:6:13"},"nodeType":"YulFunctionCall","src":"1207:14:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1200:6:13"},"nodeType":"YulFunctionCall","src":"1200:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1182:6:13"},"nodeType":"YulFunctionCall","src":"1182:41:13"},"nodeType":"YulExpressionStatement","src":"1182:41:13"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1106:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1117:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1128:4:13","type":""}],"src":"1042:187:13"},{"body":{"nodeType":"YulBlock","src":"1304:110:13","statements":[{"body":{"nodeType":"YulBlock","src":"1350:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1362:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1352:6:13"},"nodeType":"YulFunctionCall","src":"1352:12:13"},"nodeType":"YulExpressionStatement","src":"1352:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1325:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"1334:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1321:3:13"},"nodeType":"YulFunctionCall","src":"1321:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"1346:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1317:3:13"},"nodeType":"YulFunctionCall","src":"1317:32:13"},"nodeType":"YulIf","src":"1314:52:13"},{"nodeType":"YulAssignment","src":"1375:33:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1398:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1385:12:13"},"nodeType":"YulFunctionCall","src":"1385:23:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1375:6:13"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1270:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1281:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1293:6:13","type":""}],"src":"1234:180:13"},{"body":{"nodeType":"YulBlock","src":"1469:373:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1479:26:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1499:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1493:5:13"},"nodeType":"YulFunctionCall","src":"1493:12:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1483:6:13","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1521:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"1526:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1514:6:13"},"nodeType":"YulFunctionCall","src":"1514:19:13"},"nodeType":"YulExpressionStatement","src":"1514:19:13"},{"nodeType":"YulVariableDeclaration","src":"1542:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1551:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1546:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1613:110:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1627:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1637:4:13","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1631:2:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1669:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"1674:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1665:3:13"},"nodeType":"YulFunctionCall","src":"1665:11:13"},{"name":"_1","nodeType":"YulIdentifier","src":"1678:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1661:3:13"},"nodeType":"YulFunctionCall","src":"1661:20:13"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1697:5:13"},{"name":"i","nodeType":"YulIdentifier","src":"1704:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1693:3:13"},"nodeType":"YulFunctionCall","src":"1693:13:13"},{"name":"_1","nodeType":"YulIdentifier","src":"1708:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1689:3:13"},"nodeType":"YulFunctionCall","src":"1689:22:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1683:5:13"},"nodeType":"YulFunctionCall","src":"1683:29:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1654:6:13"},"nodeType":"YulFunctionCall","src":"1654:59:13"},"nodeType":"YulExpressionStatement","src":"1654:59:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1572:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"1575:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1569:2:13"},"nodeType":"YulFunctionCall","src":"1569:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1583:21:13","statements":[{"nodeType":"YulAssignment","src":"1585:17:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1594:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1590:3:13"},"nodeType":"YulFunctionCall","src":"1590:12:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1585:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"1565:3:13","statements":[]},"src":"1561:162:13"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1747:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"1752:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1743:3:13"},"nodeType":"YulFunctionCall","src":"1743:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"1761:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1739:3:13"},"nodeType":"YulFunctionCall","src":"1739:27:13"},{"kind":"number","nodeType":"YulLiteral","src":"1768:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1732:6:13"},"nodeType":"YulFunctionCall","src":"1732:38:13"},"nodeType":"YulExpressionStatement","src":"1732:38:13"},{"nodeType":"YulAssignment","src":"1779:57:13","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1794:3:13"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1807:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1815:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1803:3:13"},"nodeType":"YulFunctionCall","src":"1803:15:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1824:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1820:3:13"},"nodeType":"YulFunctionCall","src":"1820:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1799:3:13"},"nodeType":"YulFunctionCall","src":"1799:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1790:3:13"},"nodeType":"YulFunctionCall","src":"1790:39:13"},{"kind":"number","nodeType":"YulLiteral","src":"1831:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1786:3:13"},"nodeType":"YulFunctionCall","src":"1786:50:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1779:3:13"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1446:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1453:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1461:3:13","type":""}],"src":"1419:423:13"},{"body":{"nodeType":"YulBlock","src":"1968:99:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1985:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1996:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1978:6:13"},"nodeType":"YulFunctionCall","src":"1978:21:13"},"nodeType":"YulExpressionStatement","src":"1978:21:13"},{"nodeType":"YulAssignment","src":"2008:53:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2034:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2046:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2057:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2042:3:13"},"nodeType":"YulFunctionCall","src":"2042:18:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2016:17:13"},"nodeType":"YulFunctionCall","src":"2016:45:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2008:4:13"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1937:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1948:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1959:4:13","type":""}],"src":"1847:220:13"},{"body":{"nodeType":"YulBlock","src":"2104:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2121:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2128:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2133:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2124:3:13"},"nodeType":"YulFunctionCall","src":"2124:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2114:6:13"},"nodeType":"YulFunctionCall","src":"2114:31:13"},"nodeType":"YulExpressionStatement","src":"2114:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2161:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2154:6:13"},"nodeType":"YulFunctionCall","src":"2154:15:13"},"nodeType":"YulExpressionStatement","src":"2154:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2185:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2188:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2178:6:13"},"nodeType":"YulFunctionCall","src":"2178:15:13"},"nodeType":"YulExpressionStatement","src":"2178:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2072:127:13"},{"body":{"nodeType":"YulBlock","src":"2251:202:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2261:58:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2283:6:13"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2299:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"2305:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2295:3:13"},"nodeType":"YulFunctionCall","src":"2295:13:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2314:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2310:3:13"},"nodeType":"YulFunctionCall","src":"2310:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2291:3:13"},"nodeType":"YulFunctionCall","src":"2291:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2279:3:13"},"nodeType":"YulFunctionCall","src":"2279:40:13"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2265:10:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2394:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2396:16:13"},"nodeType":"YulFunctionCall","src":"2396:18:13"},"nodeType":"YulExpressionStatement","src":"2396:18:13"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2337:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"2349:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2334:2:13"},"nodeType":"YulFunctionCall","src":"2334:34:13"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2373:10:13"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2385:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2370:2:13"},"nodeType":"YulFunctionCall","src":"2370:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2331:2:13"},"nodeType":"YulFunctionCall","src":"2331:62:13"},"nodeType":"YulIf","src":"2328:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2432:2:13","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2436:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2425:6:13"},"nodeType":"YulFunctionCall","src":"2425:22:13"},"nodeType":"YulExpressionStatement","src":"2425:22:13"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2233:6:13","type":""},{"name":"size","nodeType":"YulTypedName","src":"2241:4:13","type":""}],"src":"2204:249:13"},{"body":{"nodeType":"YulBlock","src":"2527:114:13","statements":[{"body":{"nodeType":"YulBlock","src":"2571:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2573:16:13"},"nodeType":"YulFunctionCall","src":"2573:18:13"},"nodeType":"YulExpressionStatement","src":"2573:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2543:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2551:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2540:2:13"},"nodeType":"YulFunctionCall","src":"2540:30:13"},"nodeType":"YulIf","src":"2537:56:13"},{"nodeType":"YulAssignment","src":"2602:33:13","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2618:1:13","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2621:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2614:3:13"},"nodeType":"YulFunctionCall","src":"2614:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"2630:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2610:3:13"},"nodeType":"YulFunctionCall","src":"2610:25:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2602:4:13"}]}]},"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2507:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2518:4:13","type":""}],"src":"2458:183:13"},{"body":{"nodeType":"YulBlock","src":"2710:660:13","statements":[{"body":{"nodeType":"YulBlock","src":"2759:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2768:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2771:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2761:6:13"},"nodeType":"YulFunctionCall","src":"2761:12:13"},"nodeType":"YulExpressionStatement","src":"2761:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2738:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2746:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2734:3:13"},"nodeType":"YulFunctionCall","src":"2734:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"2753:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2730:3:13"},"nodeType":"YulFunctionCall","src":"2730:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2723:6:13"},"nodeType":"YulFunctionCall","src":"2723:35:13"},"nodeType":"YulIf","src":"2720:55:13"},{"nodeType":"YulVariableDeclaration","src":"2784:30:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2807:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2794:12:13"},"nodeType":"YulFunctionCall","src":"2794:20:13"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2788:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2823:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2833:4:13","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2827:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2846:53:13","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2896:2:13"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"2856:39:13"},"nodeType":"YulFunctionCall","src":"2856:43:13"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2850:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2908:23:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2928:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2922:5:13"},"nodeType":"YulFunctionCall","src":"2922:9:13"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2912:6:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2960:6:13"},{"name":"_3","nodeType":"YulIdentifier","src":"2968:2:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2940:19:13"},"nodeType":"YulFunctionCall","src":"2940:31:13"},"nodeType":"YulExpressionStatement","src":"2940:31:13"},{"nodeType":"YulVariableDeclaration","src":"2980:17:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2991:6:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2984:3:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3013:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"3021:2:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3006:6:13"},"nodeType":"YulFunctionCall","src":"3006:18:13"},"nodeType":"YulExpressionStatement","src":"3006:18:13"},{"nodeType":"YulAssignment","src":"3033:22:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3044:6:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3052:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3040:3:13"},"nodeType":"YulFunctionCall","src":"3040:15:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3033:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"3064:46:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3086:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3098:1:13","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"3101:2:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3094:3:13"},"nodeType":"YulFunctionCall","src":"3094:10:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3082:3:13"},"nodeType":"YulFunctionCall","src":"3082:23:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3107:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3078:3:13"},"nodeType":"YulFunctionCall","src":"3078:32:13"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3068:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3138:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3147:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3150:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3140:6:13"},"nodeType":"YulFunctionCall","src":"3140:12:13"},"nodeType":"YulExpressionStatement","src":"3140:12:13"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3125:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"3133:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3122:2:13"},"nodeType":"YulFunctionCall","src":"3122:15:13"},"nodeType":"YulIf","src":"3119:35:13"},{"nodeType":"YulVariableDeclaration","src":"3163:26:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3178:6:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3186:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3174:3:13"},"nodeType":"YulFunctionCall","src":"3174:15:13"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3167:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3254:86:13","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3275:3:13"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3293:3:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3280:12:13"},"nodeType":"YulFunctionCall","src":"3280:17:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3268:6:13"},"nodeType":"YulFunctionCall","src":"3268:30:13"},"nodeType":"YulExpressionStatement","src":"3268:30:13"},{"nodeType":"YulAssignment","src":"3311:19:13","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3322:3:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3327:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3318:3:13"},"nodeType":"YulFunctionCall","src":"3318:12:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3311:3:13"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3209:3:13"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3214:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3206:2:13"},"nodeType":"YulFunctionCall","src":"3206:15:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3222:23:13","statements":[{"nodeType":"YulAssignment","src":"3224:19:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3235:3:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3240:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3231:3:13"},"nodeType":"YulFunctionCall","src":"3231:12:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3224:3:13"}]}]},"pre":{"nodeType":"YulBlock","src":"3202:3:13","statements":[]},"src":"3198:142:13"},{"nodeType":"YulAssignment","src":"3349:15:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3358:6:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3349:5:13"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2684:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2692:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2700:5:13","type":""}],"src":"2646:724:13"},{"body":{"nodeType":"YulBlock","src":"3427:503:13","statements":[{"body":{"nodeType":"YulBlock","src":"3476:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3485:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3488:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3478:6:13"},"nodeType":"YulFunctionCall","src":"3478:12:13"},"nodeType":"YulExpressionStatement","src":"3478:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3455:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3463:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3451:3:13"},"nodeType":"YulFunctionCall","src":"3451:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"3470:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3447:3:13"},"nodeType":"YulFunctionCall","src":"3447:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3440:6:13"},"nodeType":"YulFunctionCall","src":"3440:35:13"},"nodeType":"YulIf","src":"3437:55:13"},{"nodeType":"YulVariableDeclaration","src":"3501:30:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3524:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3511:12:13"},"nodeType":"YulFunctionCall","src":"3511:20:13"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3505:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3570:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3572:16:13"},"nodeType":"YulFunctionCall","src":"3572:18:13"},"nodeType":"YulExpressionStatement","src":"3572:18:13"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3546:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"3550:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3543:2:13"},"nodeType":"YulFunctionCall","src":"3543:26:13"},"nodeType":"YulIf","src":"3540:52:13"},{"nodeType":"YulVariableDeclaration","src":"3601:23:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3621:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3615:5:13"},"nodeType":"YulFunctionCall","src":"3615:9:13"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3605:6:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3653:6:13"},{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3673:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"3677:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3669:3:13"},"nodeType":"YulFunctionCall","src":"3669:13:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3688:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3684:3:13"},"nodeType":"YulFunctionCall","src":"3684:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:13"},"nodeType":"YulFunctionCall","src":"3665:27:13"},{"kind":"number","nodeType":"YulLiteral","src":"3694:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3661:3:13"},"nodeType":"YulFunctionCall","src":"3661:38:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3633:19:13"},"nodeType":"YulFunctionCall","src":"3633:67:13"},"nodeType":"YulExpressionStatement","src":"3633:67:13"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3716:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"3724:2:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3709:6:13"},"nodeType":"YulFunctionCall","src":"3709:18:13"},"nodeType":"YulExpressionStatement","src":"3709:18:13"},{"body":{"nodeType":"YulBlock","src":"3775:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3787:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3777:6:13"},"nodeType":"YulFunctionCall","src":"3777:12:13"},"nodeType":"YulExpressionStatement","src":"3777:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3750:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"3758:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3746:3:13"},"nodeType":"YulFunctionCall","src":"3746:15:13"},{"kind":"number","nodeType":"YulLiteral","src":"3763:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3742:3:13"},"nodeType":"YulFunctionCall","src":"3742:26:13"},{"name":"end","nodeType":"YulIdentifier","src":"3770:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3739:2:13"},"nodeType":"YulFunctionCall","src":"3739:35:13"},"nodeType":"YulIf","src":"3736:55:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3817:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3825:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3813:3:13"},"nodeType":"YulFunctionCall","src":"3813:17:13"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3836:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3844:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3832:3:13"},"nodeType":"YulFunctionCall","src":"3832:17:13"},{"name":"_1","nodeType":"YulIdentifier","src":"3851:2:13"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3800:12:13"},"nodeType":"YulFunctionCall","src":"3800:54:13"},"nodeType":"YulExpressionStatement","src":"3800:54:13"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3878:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"3886:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3874:3:13"},"nodeType":"YulFunctionCall","src":"3874:15:13"},{"kind":"number","nodeType":"YulLiteral","src":"3891:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3870:3:13"},"nodeType":"YulFunctionCall","src":"3870:26:13"},{"kind":"number","nodeType":"YulLiteral","src":"3898:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3863:6:13"},"nodeType":"YulFunctionCall","src":"3863:37:13"},"nodeType":"YulExpressionStatement","src":"3863:37:13"},{"nodeType":"YulAssignment","src":"3909:15:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3918:6:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3909:5:13"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3401:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"3409:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3417:5:13","type":""}],"src":"3375:555:13"},{"body":{"nodeType":"YulBlock","src":"4132:746:13","statements":[{"body":{"nodeType":"YulBlock","src":"4179:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4188:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4191:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4181:6:13"},"nodeType":"YulFunctionCall","src":"4181:12:13"},"nodeType":"YulExpressionStatement","src":"4181:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4153:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"4162:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4149:3:13"},"nodeType":"YulFunctionCall","src":"4149:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"4174:3:13","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4145:3:13"},"nodeType":"YulFunctionCall","src":"4145:33:13"},"nodeType":"YulIf","src":"4142:53:13"},{"nodeType":"YulAssignment","src":"4204:39:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4233:9:13"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4214:18:13"},"nodeType":"YulFunctionCall","src":"4214:29:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4204:6:13"}]},{"nodeType":"YulAssignment","src":"4252:48:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4285:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4296:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4281:3:13"},"nodeType":"YulFunctionCall","src":"4281:18:13"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4262:18:13"},"nodeType":"YulFunctionCall","src":"4262:38:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4252:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"4309:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4340:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4351:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4336:3:13"},"nodeType":"YulFunctionCall","src":"4336:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4323:12:13"},"nodeType":"YulFunctionCall","src":"4323:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4313:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4364:28:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4374:18:13","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4368:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4419:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4428:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4431:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4421:6:13"},"nodeType":"YulFunctionCall","src":"4421:12:13"},"nodeType":"YulExpressionStatement","src":"4421:12:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4407:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"4415:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4404:2:13"},"nodeType":"YulFunctionCall","src":"4404:14:13"},"nodeType":"YulIf","src":"4401:34:13"},{"nodeType":"YulAssignment","src":"4444:71:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4487:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4498:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4483:3:13"},"nodeType":"YulFunctionCall","src":"4483:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4507:7:13"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4454:28:13"},"nodeType":"YulFunctionCall","src":"4454:61:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4444:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"4524:48:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4557:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4568:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4553:3:13"},"nodeType":"YulFunctionCall","src":"4553:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4540:12:13"},"nodeType":"YulFunctionCall","src":"4540:32:13"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4528:8:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4601:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4610:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4613:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4603:6:13"},"nodeType":"YulFunctionCall","src":"4603:12:13"},"nodeType":"YulExpressionStatement","src":"4603:12:13"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4587:8:13"},{"name":"_1","nodeType":"YulIdentifier","src":"4597:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4584:2:13"},"nodeType":"YulFunctionCall","src":"4584:16:13"},"nodeType":"YulIf","src":"4581:36:13"},{"nodeType":"YulAssignment","src":"4626:73:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4669:9:13"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4680:8:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4665:3:13"},"nodeType":"YulFunctionCall","src":"4665:24:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4691:7:13"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4636:28:13"},"nodeType":"YulFunctionCall","src":"4636:63:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4626:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"4708:49:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4741:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4752:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4737:3:13"},"nodeType":"YulFunctionCall","src":"4737:19:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4724:12:13"},"nodeType":"YulFunctionCall","src":"4724:33:13"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"4712:8:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4786:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4795:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4798:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4788:6:13"},"nodeType":"YulFunctionCall","src":"4788:12:13"},"nodeType":"YulExpressionStatement","src":"4788:12:13"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"4772:8:13"},{"name":"_1","nodeType":"YulIdentifier","src":"4782:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4769:2:13"},"nodeType":"YulFunctionCall","src":"4769:16:13"},"nodeType":"YulIf","src":"4766:36:13"},{"nodeType":"YulAssignment","src":"4811:61:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4842:9:13"},{"name":"offset_2","nodeType":"YulIdentifier","src":"4853:8:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4838:3:13"},"nodeType":"YulFunctionCall","src":"4838:24:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4864:7:13"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4821:16:13"},"nodeType":"YulFunctionCall","src":"4821:51:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4811:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4066:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4077:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4089:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4097:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4105:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4113:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4121:6:13","type":""}],"src":"3935:943:13"},{"body":{"nodeType":"YulBlock","src":"5020:1071:13","statements":[{"body":{"nodeType":"YulBlock","src":"5066:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5075:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5078:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5068:6:13"},"nodeType":"YulFunctionCall","src":"5068:12:13"},"nodeType":"YulExpressionStatement","src":"5068:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5041:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"5050:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5037:3:13"},"nodeType":"YulFunctionCall","src":"5037:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"5062:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5033:3:13"},"nodeType":"YulFunctionCall","src":"5033:32:13"},"nodeType":"YulIf","src":"5030:52:13"},{"nodeType":"YulVariableDeclaration","src":"5091:37:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5118:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5105:12:13"},"nodeType":"YulFunctionCall","src":"5105:23:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5095:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5137:28:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5147:18:13","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5141:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5192:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5201:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5204:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5194:6:13"},"nodeType":"YulFunctionCall","src":"5194:12:13"},"nodeType":"YulExpressionStatement","src":"5194:12:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5180:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"5188:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5177:2:13"},"nodeType":"YulFunctionCall","src":"5177:14:13"},"nodeType":"YulIf","src":"5174:34:13"},{"nodeType":"YulVariableDeclaration","src":"5217:32:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5231:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5242:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5227:3:13"},"nodeType":"YulFunctionCall","src":"5227:22:13"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5221:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5297:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5306:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5309:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5299:6:13"},"nodeType":"YulFunctionCall","src":"5299:12:13"},"nodeType":"YulExpressionStatement","src":"5299:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5276:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"5280:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5272:3:13"},"nodeType":"YulFunctionCall","src":"5272:13:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5287:7:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5268:3:13"},"nodeType":"YulFunctionCall","src":"5268:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5261:6:13"},"nodeType":"YulFunctionCall","src":"5261:35:13"},"nodeType":"YulIf","src":"5258:55:13"},{"nodeType":"YulVariableDeclaration","src":"5322:26:13","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5345:2:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5332:12:13"},"nodeType":"YulFunctionCall","src":"5332:16:13"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5326:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5357:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5367:4:13","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"5361:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5380:53:13","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5430:2:13"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"5390:39:13"},"nodeType":"YulFunctionCall","src":"5390:43:13"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"5384:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5442:23:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5462:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5456:5:13"},"nodeType":"YulFunctionCall","src":"5456:9:13"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5446:6:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5494:6:13"},{"name":"_5","nodeType":"YulIdentifier","src":"5502:2:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5474:19:13"},"nodeType":"YulFunctionCall","src":"5474:31:13"},"nodeType":"YulExpressionStatement","src":"5474:31:13"},{"nodeType":"YulVariableDeclaration","src":"5514:17:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"5525:6:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5518:3:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5547:6:13"},{"name":"_3","nodeType":"YulIdentifier","src":"5555:2:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5540:6:13"},"nodeType":"YulFunctionCall","src":"5540:18:13"},"nodeType":"YulExpressionStatement","src":"5540:18:13"},{"nodeType":"YulAssignment","src":"5567:22:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5578:6:13"},{"name":"_4","nodeType":"YulIdentifier","src":"5586:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5574:3:13"},"nodeType":"YulFunctionCall","src":"5574:15:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5567:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"5598:42:13","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5620:2:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5628:1:13","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"5631:2:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5624:3:13"},"nodeType":"YulFunctionCall","src":"5624:10:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5616:3:13"},"nodeType":"YulFunctionCall","src":"5616:19:13"},{"name":"_4","nodeType":"YulIdentifier","src":"5637:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5612:3:13"},"nodeType":"YulFunctionCall","src":"5612:28:13"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5602:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5672:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5681:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5684:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5674:6:13"},"nodeType":"YulFunctionCall","src":"5674:12:13"},"nodeType":"YulExpressionStatement","src":"5674:12:13"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5655:6:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5663:7:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5652:2:13"},"nodeType":"YulFunctionCall","src":"5652:19:13"},"nodeType":"YulIf","src":"5649:39:13"},{"nodeType":"YulVariableDeclaration","src":"5697:22:13","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5712:2:13"},{"name":"_4","nodeType":"YulIdentifier","src":"5716:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5708:3:13"},"nodeType":"YulFunctionCall","src":"5708:11:13"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5701:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5784:92:13","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5805:3:13"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5829:3:13"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5810:18:13"},"nodeType":"YulFunctionCall","src":"5810:23:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5798:6:13"},"nodeType":"YulFunctionCall","src":"5798:36:13"},"nodeType":"YulExpressionStatement","src":"5798:36:13"},{"nodeType":"YulAssignment","src":"5847:19:13","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5858:3:13"},{"name":"_4","nodeType":"YulIdentifier","src":"5863:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5854:3:13"},"nodeType":"YulFunctionCall","src":"5854:12:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5847:3:13"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5739:3:13"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5744:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5736:2:13"},"nodeType":"YulFunctionCall","src":"5736:15:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5752:23:13","statements":[{"nodeType":"YulAssignment","src":"5754:19:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5765:3:13"},{"name":"_4","nodeType":"YulIdentifier","src":"5770:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5761:3:13"},"nodeType":"YulFunctionCall","src":"5761:12:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5754:3:13"}]}]},"pre":{"nodeType":"YulBlock","src":"5732:3:13","statements":[]},"src":"5728:148:13"},{"nodeType":"YulAssignment","src":"5885:16:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"5895:6:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5885:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"5910:48:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5943:9:13"},{"name":"_4","nodeType":"YulIdentifier","src":"5954:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5939:3:13"},"nodeType":"YulFunctionCall","src":"5939:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5926:12:13"},"nodeType":"YulFunctionCall","src":"5926:32:13"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5914:8:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5987:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5996:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5999:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5989:6:13"},"nodeType":"YulFunctionCall","src":"5989:12:13"},"nodeType":"YulExpressionStatement","src":"5989:12:13"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5973:8:13"},{"name":"_1","nodeType":"YulIdentifier","src":"5983:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5970:2:13"},"nodeType":"YulFunctionCall","src":"5970:16:13"},"nodeType":"YulIf","src":"5967:36:13"},{"nodeType":"YulAssignment","src":"6012:73:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6055:9:13"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6066:8:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6051:3:13"},"nodeType":"YulFunctionCall","src":"6051:24:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6077:7:13"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"6022:28:13"},"nodeType":"YulFunctionCall","src":"6022:63:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6012:6:13"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4978:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4989:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5001:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5009:6:13","type":""}],"src":"4883:1208:13"},{"body":{"nodeType":"YulBlock","src":"6157:374:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6167:26:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6187:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6181:5:13"},"nodeType":"YulFunctionCall","src":"6181:12:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6171:6:13","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6209:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"6214:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6202:6:13"},"nodeType":"YulFunctionCall","src":"6202:19:13"},"nodeType":"YulExpressionStatement","src":"6202:19:13"},{"nodeType":"YulVariableDeclaration","src":"6230:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6240:4:13","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6234:2:13","type":""}]},{"nodeType":"YulAssignment","src":"6253:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6264:3:13"},{"name":"_1","nodeType":"YulIdentifier","src":"6269:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6260:3:13"},"nodeType":"YulFunctionCall","src":"6260:12:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6253:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"6281:28:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6299:5:13"},{"name":"_1","nodeType":"YulIdentifier","src":"6306:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6295:3:13"},"nodeType":"YulFunctionCall","src":"6295:14:13"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6285:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6318:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6327:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6322:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6386:120:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6407:3:13"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6418:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6412:5:13"},"nodeType":"YulFunctionCall","src":"6412:13:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6400:6:13"},"nodeType":"YulFunctionCall","src":"6400:26:13"},"nodeType":"YulExpressionStatement","src":"6400:26:13"},{"nodeType":"YulAssignment","src":"6439:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6450:3:13"},{"name":"_1","nodeType":"YulIdentifier","src":"6455:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6446:3:13"},"nodeType":"YulFunctionCall","src":"6446:12:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6439:3:13"}]},{"nodeType":"YulAssignment","src":"6471:25:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6485:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"6493:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6481:3:13"},"nodeType":"YulFunctionCall","src":"6481:15:13"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6471:6:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6348:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"6351:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6345:2:13"},"nodeType":"YulFunctionCall","src":"6345:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6359:18:13","statements":[{"nodeType":"YulAssignment","src":"6361:14:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6370:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"6373:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6366:3:13"},"nodeType":"YulFunctionCall","src":"6366:9:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6361:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"6341:3:13","statements":[]},"src":"6337:169:13"},{"nodeType":"YulAssignment","src":"6515:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"6522:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6515:3:13"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6134:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6141:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6149:3:13","type":""}],"src":"6096:435:13"},{"body":{"nodeType":"YulBlock","src":"6687:110:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6704:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6715:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6697:6:13"},"nodeType":"YulFunctionCall","src":"6697:21:13"},"nodeType":"YulExpressionStatement","src":"6697:21:13"},{"nodeType":"YulAssignment","src":"6727:64:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6764:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6776:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6787:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6772:3:13"},"nodeType":"YulFunctionCall","src":"6772:18:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"6735:28:13"},"nodeType":"YulFunctionCall","src":"6735:56:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6727:4:13"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6656:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6667:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6678:4:13","type":""}],"src":"6536:261:13"},{"body":{"nodeType":"YulBlock","src":"6886:263:13","statements":[{"body":{"nodeType":"YulBlock","src":"6932:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6941:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6944:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6934:6:13"},"nodeType":"YulFunctionCall","src":"6934:12:13"},"nodeType":"YulExpressionStatement","src":"6934:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6907:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"6916:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6903:3:13"},"nodeType":"YulFunctionCall","src":"6903:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"6928:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6899:3:13"},"nodeType":"YulFunctionCall","src":"6899:32:13"},"nodeType":"YulIf","src":"6896:52:13"},{"nodeType":"YulAssignment","src":"6957:39:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6986:9:13"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6967:18:13"},"nodeType":"YulFunctionCall","src":"6967:29:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6957:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"7005:45:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7035:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7046:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7031:3:13"},"nodeType":"YulFunctionCall","src":"7031:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7018:12:13"},"nodeType":"YulFunctionCall","src":"7018:32:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7009:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"7103:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7112:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7115:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7105:6:13"},"nodeType":"YulFunctionCall","src":"7105:12:13"},"nodeType":"YulExpressionStatement","src":"7105:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7072:5:13"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7093:5:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7086:6:13"},"nodeType":"YulFunctionCall","src":"7086:13:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7079:6:13"},"nodeType":"YulFunctionCall","src":"7079:21:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7069:2:13"},"nodeType":"YulFunctionCall","src":"7069:32:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7062:6:13"},"nodeType":"YulFunctionCall","src":"7062:40:13"},"nodeType":"YulIf","src":"7059:60:13"},{"nodeType":"YulAssignment","src":"7128:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"7138:5:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7128:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6844:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6855:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6867:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6875:6:13","type":""}],"src":"6802:347:13"},{"body":{"nodeType":"YulBlock","src":"7241:173:13","statements":[{"body":{"nodeType":"YulBlock","src":"7287:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7296:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7299:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7289:6:13"},"nodeType":"YulFunctionCall","src":"7289:12:13"},"nodeType":"YulExpressionStatement","src":"7289:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7262:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"7271:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7258:3:13"},"nodeType":"YulFunctionCall","src":"7258:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"7283:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7254:3:13"},"nodeType":"YulFunctionCall","src":"7254:32:13"},"nodeType":"YulIf","src":"7251:52:13"},{"nodeType":"YulAssignment","src":"7312:39:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7341:9:13"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7322:18:13"},"nodeType":"YulFunctionCall","src":"7322:29:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7312:6:13"}]},{"nodeType":"YulAssignment","src":"7360:48:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7404:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:13"},"nodeType":"YulFunctionCall","src":"7389:18:13"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7370:18:13"},"nodeType":"YulFunctionCall","src":"7370:38:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7360:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7199:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7210:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7222:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7230:6:13","type":""}],"src":"7154:260:13"},{"body":{"nodeType":"YulBlock","src":"7566:459:13","statements":[{"body":{"nodeType":"YulBlock","src":"7613:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7622:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7625:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7615:6:13"},"nodeType":"YulFunctionCall","src":"7615:12:13"},"nodeType":"YulExpressionStatement","src":"7615:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7587:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"7596:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7583:3:13"},"nodeType":"YulFunctionCall","src":"7583:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"7608:3:13","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7579:3:13"},"nodeType":"YulFunctionCall","src":"7579:33:13"},"nodeType":"YulIf","src":"7576:53:13"},{"nodeType":"YulAssignment","src":"7638:39:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7667:9:13"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7648:18:13"},"nodeType":"YulFunctionCall","src":"7648:29:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7638:6:13"}]},{"nodeType":"YulAssignment","src":"7686:48:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7719:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7730:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7715:3:13"},"nodeType":"YulFunctionCall","src":"7715:18:13"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7696:18:13"},"nodeType":"YulFunctionCall","src":"7696:38:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7686:6:13"}]},{"nodeType":"YulAssignment","src":"7743:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7770:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7781:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7766:3:13"},"nodeType":"YulFunctionCall","src":"7766:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7753:12:13"},"nodeType":"YulFunctionCall","src":"7753:32:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7743:6:13"}]},{"nodeType":"YulAssignment","src":"7794:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7821:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7832:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7817:3:13"},"nodeType":"YulFunctionCall","src":"7817:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7804:12:13"},"nodeType":"YulFunctionCall","src":"7804:32:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7794:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"7845:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7876:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7887:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7872:3:13"},"nodeType":"YulFunctionCall","src":"7872:19:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7859:12:13"},"nodeType":"YulFunctionCall","src":"7859:33:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7849:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"7935:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7944:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7947:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7937:6:13"},"nodeType":"YulFunctionCall","src":"7937:12:13"},"nodeType":"YulExpressionStatement","src":"7937:12:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7907:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7915:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7904:2:13"},"nodeType":"YulFunctionCall","src":"7904:30:13"},"nodeType":"YulIf","src":"7901:50:13"},{"nodeType":"YulAssignment","src":"7960:59:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7991:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"8002:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7987:3:13"},"nodeType":"YulFunctionCall","src":"7987:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8011:7:13"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"7970:16:13"},"nodeType":"YulFunctionCall","src":"7970:49:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7960:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7500:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7511:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7523:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7531:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7539:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7547:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7555:6:13","type":""}],"src":"7419:606:13"},{"body":{"nodeType":"YulBlock","src":"8204:232:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8221:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8232:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8214:6:13"},"nodeType":"YulFunctionCall","src":"8214:21:13"},"nodeType":"YulExpressionStatement","src":"8214:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8255:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8266:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8251:3:13"},"nodeType":"YulFunctionCall","src":"8251:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"8271:2:13","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8244:6:13"},"nodeType":"YulFunctionCall","src":"8244:30:13"},"nodeType":"YulExpressionStatement","src":"8244:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8294:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8305:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8290:3:13"},"nodeType":"YulFunctionCall","src":"8290:18:13"},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076","kind":"string","nodeType":"YulLiteral","src":"8310:34:13","type":"","value":"ERC1155: address zero is not a v"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8283:6:13"},"nodeType":"YulFunctionCall","src":"8283:62:13"},"nodeType":"YulExpressionStatement","src":"8283:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8365:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8376:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8361:3:13"},"nodeType":"YulFunctionCall","src":"8361:18:13"},{"hexValue":"616c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"8381:12:13","type":"","value":"alid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8354:6:13"},"nodeType":"YulFunctionCall","src":"8354:40:13"},"nodeType":"YulExpressionStatement","src":"8354:40:13"},{"nodeType":"YulAssignment","src":"8403:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8415:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8426:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8411:3:13"},"nodeType":"YulFunctionCall","src":"8411:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8403:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8181:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8195:4:13","type":""}],"src":"8030:406:13"},{"body":{"nodeType":"YulBlock","src":"8496:325:13","statements":[{"nodeType":"YulAssignment","src":"8506:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8520:1:13","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"8523:4:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8516:3:13"},"nodeType":"YulFunctionCall","src":"8516:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8506:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"8537:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8567:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"8573:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8563:3:13"},"nodeType":"YulFunctionCall","src":"8563:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8541:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"8614:31:13","statements":[{"nodeType":"YulAssignment","src":"8616:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8630:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8638:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8626:3:13"},"nodeType":"YulFunctionCall","src":"8626:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8616:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8594:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8587:6:13"},"nodeType":"YulFunctionCall","src":"8587:26:13"},"nodeType":"YulIf","src":"8584:61:13"},{"body":{"nodeType":"YulBlock","src":"8704:111:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8725:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8732:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8737:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8728:3:13"},"nodeType":"YulFunctionCall","src":"8728:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8718:6:13"},"nodeType":"YulFunctionCall","src":"8718:31:13"},"nodeType":"YulExpressionStatement","src":"8718:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8769:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8772:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8762:6:13"},"nodeType":"YulFunctionCall","src":"8762:15:13"},"nodeType":"YulExpressionStatement","src":"8762:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8797:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8800:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8790:6:13"},"nodeType":"YulFunctionCall","src":"8790:15:13"},"nodeType":"YulExpressionStatement","src":"8790:15:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8660:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8683:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8691:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8680:2:13"},"nodeType":"YulFunctionCall","src":"8680:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8657:2:13"},"nodeType":"YulFunctionCall","src":"8657:38:13"},"nodeType":"YulIf","src":"8654:161:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8476:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8485:6:13","type":""}],"src":"8441:380:13"},{"body":{"nodeType":"YulBlock","src":"9000:236:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9017:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9028:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9010:6:13"},"nodeType":"YulFunctionCall","src":"9010:21:13"},"nodeType":"YulExpressionStatement","src":"9010:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9051:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9062:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9047:3:13"},"nodeType":"YulFunctionCall","src":"9047:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"9067:2:13","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9040:6:13"},"nodeType":"YulFunctionCall","src":"9040:30:13"},"nodeType":"YulExpressionStatement","src":"9040:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9090:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9101:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9086:3:13"},"nodeType":"YulFunctionCall","src":"9086:18:13"},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e","kind":"string","nodeType":"YulLiteral","src":"9106:34:13","type":"","value":"ERC1155: caller is not token own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9079:6:13"},"nodeType":"YulFunctionCall","src":"9079:62:13"},"nodeType":"YulExpressionStatement","src":"9079:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9161:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9172:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9157:3:13"},"nodeType":"YulFunctionCall","src":"9157:18:13"},{"hexValue":"6572206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"9177:16:13","type":"","value":"er or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9150:6:13"},"nodeType":"YulFunctionCall","src":"9150:44:13"},"nodeType":"YulExpressionStatement","src":"9150:44:13"},{"nodeType":"YulAssignment","src":"9203:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9215:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9226:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9211:3:13"},"nodeType":"YulFunctionCall","src":"9211:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9203:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8977:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8991:4:13","type":""}],"src":"8826:410:13"},{"body":{"nodeType":"YulBlock","src":"9415:231:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9432:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9443:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9425:6:13"},"nodeType":"YulFunctionCall","src":"9425:21:13"},"nodeType":"YulExpressionStatement","src":"9425:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9466:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9477:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9462:3:13"},"nodeType":"YulFunctionCall","src":"9462:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"9482:2:13","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9455:6:13"},"nodeType":"YulFunctionCall","src":"9455:30:13"},"nodeType":"YulExpressionStatement","src":"9455:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9505:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9516:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9501:3:13"},"nodeType":"YulFunctionCall","src":"9501:18:13"},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468","kind":"string","nodeType":"YulLiteral","src":"9521:34:13","type":"","value":"ERC1155: accounts and ids length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9494:6:13"},"nodeType":"YulFunctionCall","src":"9494:62:13"},"nodeType":"YulExpressionStatement","src":"9494:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9576:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9587:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9572:3:13"},"nodeType":"YulFunctionCall","src":"9572:18:13"},{"hexValue":"206d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"9592:11:13","type":"","value":" mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9565:6:13"},"nodeType":"YulFunctionCall","src":"9565:39:13"},"nodeType":"YulExpressionStatement","src":"9565:39:13"},{"nodeType":"YulAssignment","src":"9613:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9625:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9636:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9621:3:13"},"nodeType":"YulFunctionCall","src":"9621:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9613:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9392:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9406:4:13","type":""}],"src":"9241:405:13"},{"body":{"nodeType":"YulBlock","src":"9683:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9700:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9707:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9712:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9703:3:13"},"nodeType":"YulFunctionCall","src":"9703:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9693:6:13"},"nodeType":"YulFunctionCall","src":"9693:31:13"},"nodeType":"YulExpressionStatement","src":"9693:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9740:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9743:4:13","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9733:6:13"},"nodeType":"YulFunctionCall","src":"9733:15:13"},"nodeType":"YulExpressionStatement","src":"9733:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9764:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9767:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9757:6:13"},"nodeType":"YulFunctionCall","src":"9757:15:13"},"nodeType":"YulExpressionStatement","src":"9757:15:13"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"9651:127:13"},{"body":{"nodeType":"YulBlock","src":"9815:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9832:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9839:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9844:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9835:3:13"},"nodeType":"YulFunctionCall","src":"9835:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9825:6:13"},"nodeType":"YulFunctionCall","src":"9825:31:13"},"nodeType":"YulExpressionStatement","src":"9825:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9872:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9875:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9865:6:13"},"nodeType":"YulFunctionCall","src":"9865:15:13"},"nodeType":"YulExpressionStatement","src":"9865:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9896:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9899:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9889:6:13"},"nodeType":"YulFunctionCall","src":"9889:15:13"},"nodeType":"YulExpressionStatement","src":"9889:15:13"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9783:127:13"},{"body":{"nodeType":"YulBlock","src":"9962:88:13","statements":[{"body":{"nodeType":"YulBlock","src":"9993:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9995:16:13"},"nodeType":"YulFunctionCall","src":"9995:18:13"},"nodeType":"YulExpressionStatement","src":"9995:18:13"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9978:5:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9989:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9985:3:13"},"nodeType":"YulFunctionCall","src":"9985:6:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9975:2:13"},"nodeType":"YulFunctionCall","src":"9975:17:13"},"nodeType":"YulIf","src":"9972:43:13"},{"nodeType":"YulAssignment","src":"10024:20:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10035:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"10042:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10031:3:13"},"nodeType":"YulFunctionCall","src":"10031:13:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10024:3:13"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9944:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9954:3:13","type":""}],"src":"9915:135:13"},{"body":{"nodeType":"YulBlock","src":"10229:230:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10246:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10257:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10239:6:13"},"nodeType":"YulFunctionCall","src":"10239:21:13"},"nodeType":"YulExpressionStatement","src":"10239:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10280:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10291:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10276:3:13"},"nodeType":"YulFunctionCall","src":"10276:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"10296:2:13","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10269:6:13"},"nodeType":"YulFunctionCall","src":"10269:30:13"},"nodeType":"YulExpressionStatement","src":"10269:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10319:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10330:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10315:3:13"},"nodeType":"YulFunctionCall","src":"10315:18:13"},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e67746820","kind":"string","nodeType":"YulLiteral","src":"10335:34:13","type":"","value":"ERC1155: ids and amounts length "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10308:6:13"},"nodeType":"YulFunctionCall","src":"10308:62:13"},"nodeType":"YulExpressionStatement","src":"10308:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:13"},"nodeType":"YulFunctionCall","src":"10386:18:13"},{"hexValue":"6d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"10406:10:13","type":"","value":"mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10379:6:13"},"nodeType":"YulFunctionCall","src":"10379:38:13"},"nodeType":"YulExpressionStatement","src":"10379:38:13"},{"nodeType":"YulAssignment","src":"10426:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10438:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10449:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10434:3:13"},"nodeType":"YulFunctionCall","src":"10434:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10426:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10206:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10220:4:13","type":""}],"src":"10055:404:13"},{"body":{"nodeType":"YulBlock","src":"10638:227:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10655:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10666:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10648:6:13"},"nodeType":"YulFunctionCall","src":"10648:21:13"},"nodeType":"YulExpressionStatement","src":"10648:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10689:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10700:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10685:3:13"},"nodeType":"YulFunctionCall","src":"10685:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"10705:2:13","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10678:6:13"},"nodeType":"YulFunctionCall","src":"10678:30:13"},"nodeType":"YulExpressionStatement","src":"10678:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10728:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10739:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10724:3:13"},"nodeType":"YulFunctionCall","src":"10724:18:13"},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10744:34:13","type":"","value":"ERC1155: transfer to the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10717:6:13"},"nodeType":"YulFunctionCall","src":"10717:62:13"},"nodeType":"YulExpressionStatement","src":"10717:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10799:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10810:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10795:3:13"},"nodeType":"YulFunctionCall","src":"10795:18:13"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10815:7:13","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10788:6:13"},"nodeType":"YulFunctionCall","src":"10788:35:13"},"nodeType":"YulExpressionStatement","src":"10788:35:13"},{"nodeType":"YulAssignment","src":"10832:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10844:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10855:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10840:3:13"},"nodeType":"YulFunctionCall","src":"10840:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10832:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10615:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10629:4:13","type":""}],"src":"10464:401:13"},{"body":{"nodeType":"YulBlock","src":"11044:232:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11061:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11072:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11054:6:13"},"nodeType":"YulFunctionCall","src":"11054:21:13"},"nodeType":"YulExpressionStatement","src":"11054:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11095:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11106:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11091:3:13"},"nodeType":"YulFunctionCall","src":"11091:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"11111:2:13","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11084:6:13"},"nodeType":"YulFunctionCall","src":"11084:30:13"},"nodeType":"YulExpressionStatement","src":"11084:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11134:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11145:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11130:3:13"},"nodeType":"YulFunctionCall","src":"11130:18:13"},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"11150:34:13","type":"","value":"ERC1155: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11123:6:13"},"nodeType":"YulFunctionCall","src":"11123:62:13"},"nodeType":"YulExpressionStatement","src":"11123:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11205:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11216:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11201:3:13"},"nodeType":"YulFunctionCall","src":"11201:18:13"},{"hexValue":"72207472616e73666572","kind":"string","nodeType":"YulLiteral","src":"11221:12:13","type":"","value":"r transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11194:6:13"},"nodeType":"YulFunctionCall","src":"11194:40:13"},"nodeType":"YulExpressionStatement","src":"11194:40:13"},{"nodeType":"YulAssignment","src":"11243:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11255:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11266:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11251:3:13"},"nodeType":"YulFunctionCall","src":"11251:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11243:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11021:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11035:4:13","type":""}],"src":"10870:406:13"},{"body":{"nodeType":"YulBlock","src":"11329:77:13","statements":[{"nodeType":"YulAssignment","src":"11339:16:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11350:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"11353:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11346:3:13"},"nodeType":"YulFunctionCall","src":"11346:9:13"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11339:3:13"}]},{"body":{"nodeType":"YulBlock","src":"11378:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11380:16:13"},"nodeType":"YulFunctionCall","src":"11380:18:13"},"nodeType":"YulExpressionStatement","src":"11380:18:13"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11370:1:13"},{"name":"sum","nodeType":"YulIdentifier","src":"11373:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11367:2:13"},"nodeType":"YulFunctionCall","src":"11367:10:13"},"nodeType":"YulIf","src":"11364:36:13"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11312:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"11315:1:13","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11321:3:13","type":""}],"src":"11281:125:13"},{"body":{"nodeType":"YulBlock","src":"11640:236:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11657:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11668:2:13","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11650:6:13"},"nodeType":"YulFunctionCall","src":"11650:21:13"},"nodeType":"YulExpressionStatement","src":"11650:21:13"},{"nodeType":"YulVariableDeclaration","src":"11680:70:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11723:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11735:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11746:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11731:3:13"},"nodeType":"YulFunctionCall","src":"11731:18:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"11694:28:13"},"nodeType":"YulFunctionCall","src":"11694:56:13"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"11684:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11770:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11781:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11766:3:13"},"nodeType":"YulFunctionCall","src":"11766:18:13"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"11790:6:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"11798:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11786:3:13"},"nodeType":"YulFunctionCall","src":"11786:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11759:6:13"},"nodeType":"YulFunctionCall","src":"11759:50:13"},"nodeType":"YulExpressionStatement","src":"11759:50:13"},{"nodeType":"YulAssignment","src":"11818:52:13","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11855:6:13"},{"name":"tail_1","nodeType":"YulIdentifier","src":"11863:6:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"11826:28:13"},"nodeType":"YulFunctionCall","src":"11826:44:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11818:4:13"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11601:9:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11612:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11620:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11631:4:13","type":""}],"src":"11411:465:13"},{"body":{"nodeType":"YulBlock","src":"12055:231:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12072:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12083:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12065:6:13"},"nodeType":"YulFunctionCall","src":"12065:21:13"},"nodeType":"YulExpressionStatement","src":"12065:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12106:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12117:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12102:3:13"},"nodeType":"YulFunctionCall","src":"12102:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"12122:2:13","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12095:6:13"},"nodeType":"YulFunctionCall","src":"12095:30:13"},"nodeType":"YulExpressionStatement","src":"12095:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12145:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12156:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12141:3:13"},"nodeType":"YulFunctionCall","src":"12141:18:13"},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c20737461747573","kind":"string","nodeType":"YulLiteral","src":"12161:34:13","type":"","value":"ERC1155: setting approval status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12134:6:13"},"nodeType":"YulFunctionCall","src":"12134:62:13"},"nodeType":"YulExpressionStatement","src":"12134:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12216:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12227:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12212:3:13"},"nodeType":"YulFunctionCall","src":"12212:18:13"},{"hexValue":"20666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"12232:11:13","type":"","value":" for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12205:6:13"},"nodeType":"YulFunctionCall","src":"12205:39:13"},"nodeType":"YulExpressionStatement","src":"12205:39:13"},{"nodeType":"YulAssignment","src":"12253:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12265:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12276:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12261:3:13"},"nodeType":"YulFunctionCall","src":"12261:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12253:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12032:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12046:4:13","type":""}],"src":"11881:405:13"},{"body":{"nodeType":"YulBlock","src":"12420:119:13","statements":[{"nodeType":"YulAssignment","src":"12430:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:13"},"nodeType":"YulFunctionCall","src":"12438:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12472:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"12483:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12465:6:13"},"nodeType":"YulFunctionCall","src":"12465:25:13"},"nodeType":"YulExpressionStatement","src":"12465:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12510:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12521:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12506:3:13"},"nodeType":"YulFunctionCall","src":"12506:18:13"},{"name":"value1","nodeType":"YulIdentifier","src":"12526:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12499:6:13"},"nodeType":"YulFunctionCall","src":"12499:34:13"},"nodeType":"YulExpressionStatement","src":"12499:34:13"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12381:9:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12392:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12400:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12411:4:13","type":""}],"src":"12291:248:13"},{"body":{"nodeType":"YulBlock","src":"12875:519:13","statements":[{"nodeType":"YulVariableDeclaration","src":"12885:52:13","value":{"kind":"number","nodeType":"YulLiteral","src":"12895:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12889:2:13","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12953:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12968:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"12976:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12964:3:13"},"nodeType":"YulFunctionCall","src":"12964:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12946:6:13"},"nodeType":"YulFunctionCall","src":"12946:34:13"},"nodeType":"YulExpressionStatement","src":"12946:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13000:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13011:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12996:3:13"},"nodeType":"YulFunctionCall","src":"12996:18:13"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13020:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"13028:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13016:3:13"},"nodeType":"YulFunctionCall","src":"13016:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12989:6:13"},"nodeType":"YulFunctionCall","src":"12989:43:13"},"nodeType":"YulExpressionStatement","src":"12989:43:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13052:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13063:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13048:3:13"},"nodeType":"YulFunctionCall","src":"13048:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"13068:3:13","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13041:6:13"},"nodeType":"YulFunctionCall","src":"13041:31:13"},"nodeType":"YulExpressionStatement","src":"13041:31:13"},{"nodeType":"YulVariableDeclaration","src":"13081:71:13","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13124:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13136:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13147:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13132:3:13"},"nodeType":"YulFunctionCall","src":"13132:19:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"13095:28:13"},"nodeType":"YulFunctionCall","src":"13095:57:13"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"13085:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13172:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13183:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13168:3:13"},"nodeType":"YulFunctionCall","src":"13168:18:13"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"13192:6:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"13200:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13188:3:13"},"nodeType":"YulFunctionCall","src":"13188:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13161:6:13"},"nodeType":"YulFunctionCall","src":"13161:50:13"},"nodeType":"YulExpressionStatement","src":"13161:50:13"},{"nodeType":"YulVariableDeclaration","src":"13220:58:13","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13263:6:13"},{"name":"tail_1","nodeType":"YulIdentifier","src":"13271:6:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"13234:28:13"},"nodeType":"YulFunctionCall","src":"13234:44:13"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"13224:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13298:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13309:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13294:3:13"},"nodeType":"YulFunctionCall","src":"13294:19:13"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"13319:6:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"13327:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13315:3:13"},"nodeType":"YulFunctionCall","src":"13315:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13287:6:13"},"nodeType":"YulFunctionCall","src":"13287:51:13"},"nodeType":"YulExpressionStatement","src":"13287:51:13"},{"nodeType":"YulAssignment","src":"13347:41:13","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"13373:6:13"},{"name":"tail_2","nodeType":"YulIdentifier","src":"13381:6:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"13355:17:13"},"nodeType":"YulFunctionCall","src":"13355:33:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13347:4:13"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12812:9:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12823:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12831:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12839:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12847:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12855:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12866:4:13","type":""}],"src":"12544:850:13"},{"body":{"nodeType":"YulBlock","src":"13479:169:13","statements":[{"body":{"nodeType":"YulBlock","src":"13525:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13534:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13537:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13527:6:13"},"nodeType":"YulFunctionCall","src":"13527:12:13"},"nodeType":"YulExpressionStatement","src":"13527:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13500:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"13509:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13496:3:13"},"nodeType":"YulFunctionCall","src":"13496:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"13521:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13492:3:13"},"nodeType":"YulFunctionCall","src":"13492:32:13"},"nodeType":"YulIf","src":"13489:52:13"},{"nodeType":"YulVariableDeclaration","src":"13550:29:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13569:9:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13563:5:13"},"nodeType":"YulFunctionCall","src":"13563:16:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13554:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13612:5:13"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"13588:23:13"},"nodeType":"YulFunctionCall","src":"13588:30:13"},"nodeType":"YulExpressionStatement","src":"13588:30:13"},{"nodeType":"YulAssignment","src":"13627:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"13637:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13627:6:13"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13445:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13456:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13468:6:13","type":""}],"src":"13399:249:13"},{"body":{"nodeType":"YulBlock","src":"13696:136:13","statements":[{"body":{"nodeType":"YulBlock","src":"13741:85:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13770:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13773:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13776:1:13","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"13755:14:13"},"nodeType":"YulFunctionCall","src":"13755:23:13"},"nodeType":"YulExpressionStatement","src":"13755:23:13"},{"nodeType":"YulAssignment","src":"13791:25:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13802:3:13","type":"","value":"224"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13813:1:13","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13807:5:13"},"nodeType":"YulFunctionCall","src":"13807:8:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13798:3:13"},"nodeType":"YulFunctionCall","src":"13798:18:13"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"13791:3:13"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13712:14:13"},"nodeType":"YulFunctionCall","src":"13712:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"13730:1:13","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13709:2:13"},"nodeType":"YulFunctionCall","src":"13709:23:13"},"nodeType":"YulIf","src":"13706:120:13"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"13688:3:13","type":""}],"src":"13653:179:13"},{"body":{"nodeType":"YulBlock","src":"13884:624:13","statements":[{"body":{"nodeType":"YulBlock","src":"13924:9:13","statements":[{"nodeType":"YulLeave","src":"13926:5:13"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13900:14:13"},"nodeType":"YulFunctionCall","src":"13900:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"13918:4:13","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13897:2:13"},"nodeType":"YulFunctionCall","src":"13897:26:13"},"nodeType":"YulIf","src":"13894:39:13"},{"nodeType":"YulVariableDeclaration","src":"13942:21:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13960:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13954:5:13"},"nodeType":"YulFunctionCall","src":"13954:9:13"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"13946:4:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13972:16:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13986:1:13","type":"","value":"3"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13982:3:13"},"nodeType":"YulFunctionCall","src":"13982:6:13"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13976:2:13","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14012:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"14018:1:13","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"14025:14:13"},"nodeType":"YulFunctionCall","src":"14025:16:13"},{"name":"_1","nodeType":"YulIdentifier","src":"14043:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14021:3:13"},"nodeType":"YulFunctionCall","src":"14021:25:13"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"13997:14:13"},"nodeType":"YulFunctionCall","src":"13997:50:13"},"nodeType":"YulExpressionStatement","src":"13997:50:13"},{"nodeType":"YulVariableDeclaration","src":"14056:25:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14076:4:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14070:5:13"},"nodeType":"YulFunctionCall","src":"14070:11:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14060:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14090:26:13","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"14100:14:13"},"nodeType":"YulFunctionCall","src":"14100:16:13"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"14094:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14125:28:13","value":{"kind":"number","nodeType":"YulLiteral","src":"14135:18:13","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"14129:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"14211:9:13","statements":[{"nodeType":"YulLeave","src":"14213:5:13"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14171:6:13"},{"name":"_3","nodeType":"YulIdentifier","src":"14179:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14168:2:13"},"nodeType":"YulFunctionCall","src":"14168:14:13"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14191:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"14199:4:13","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14187:3:13"},"nodeType":"YulFunctionCall","src":"14187:17:13"},{"name":"_2","nodeType":"YulIdentifier","src":"14206:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14184:2:13"},"nodeType":"YulFunctionCall","src":"14184:25:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14165:2:13"},"nodeType":"YulFunctionCall","src":"14165:45:13"},"nodeType":"YulIf","src":"14162:58:13"},{"nodeType":"YulVariableDeclaration","src":"14229:28:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14244:4:13"},{"name":"offset","nodeType":"YulIdentifier","src":"14250:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14240:3:13"},"nodeType":"YulFunctionCall","src":"14240:17:13"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"14233:3:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14266:24:13","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"14286:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14280:5:13"},"nodeType":"YulFunctionCall","src":"14280:10:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14270:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"14317:9:13","statements":[{"nodeType":"YulLeave","src":"14319:5:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14305:6:13"},{"name":"_3","nodeType":"YulIdentifier","src":"14313:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14302:2:13"},"nodeType":"YulFunctionCall","src":"14302:14:13"},"nodeType":"YulIf","src":"14299:27:13"},{"body":{"nodeType":"YulBlock","src":"14408:9:13","statements":[{"nodeType":"YulLeave","src":"14410:5:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"14349:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"14354:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14345:3:13"},"nodeType":"YulFunctionCall","src":"14345:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"14363:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14341:3:13"},"nodeType":"YulFunctionCall","src":"14341:27:13"},{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14378:4:13"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"14384:14:13"},"nodeType":"YulFunctionCall","src":"14384:16:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14374:3:13"},"nodeType":"YulFunctionCall","src":"14374:27:13"},{"name":"_1","nodeType":"YulIdentifier","src":"14403:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14370:3:13"},"nodeType":"YulFunctionCall","src":"14370:36:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14338:2:13"},"nodeType":"YulFunctionCall","src":"14338:69:13"},"nodeType":"YulIf","src":"14335:82:13"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14446:4:13"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14460:6:13"},{"name":"length","nodeType":"YulIdentifier","src":"14468:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14456:3:13"},"nodeType":"YulFunctionCall","src":"14456:19:13"},{"kind":"number","nodeType":"YulLiteral","src":"14477:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14452:3:13"},"nodeType":"YulFunctionCall","src":"14452:30:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"14426:19:13"},"nodeType":"YulFunctionCall","src":"14426:57:13"},"nodeType":"YulExpressionStatement","src":"14426:57:13"},{"nodeType":"YulAssignment","src":"14492:10:13","value":{"name":"msg","nodeType":"YulIdentifier","src":"14499:3:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14492:3:13"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13876:3:13","type":""}],"src":"13837:671:13"},{"body":{"nodeType":"YulBlock","src":"14687:242:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14704:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14715:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14697:6:13"},"nodeType":"YulFunctionCall","src":"14697:21:13"},"nodeType":"YulExpressionStatement","src":"14697:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14738:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14749:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14734:3:13"},"nodeType":"YulFunctionCall","src":"14734:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"14754:2:13","type":"","value":"52"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14727:6:13"},"nodeType":"YulFunctionCall","src":"14727:30:13"},"nodeType":"YulExpressionStatement","src":"14727:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14777:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14788:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14773:3:13"},"nodeType":"YulFunctionCall","src":"14773:18:13"},{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535","kind":"string","nodeType":"YulLiteral","src":"14793:34:13","type":"","value":"ERC1155: transfer to non-ERC1155"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14766:6:13"},"nodeType":"YulFunctionCall","src":"14766:62:13"},"nodeType":"YulExpressionStatement","src":"14766:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14848:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14859:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14844:3:13"},"nodeType":"YulFunctionCall","src":"14844:18:13"},{"hexValue":"526563656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"14864:22:13","type":"","value":"Receiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14837:6:13"},"nodeType":"YulFunctionCall","src":"14837:50:13"},"nodeType":"YulExpressionStatement","src":"14837:50:13"},{"nodeType":"YulAssignment","src":"14896:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14908:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14919:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14904:3:13"},"nodeType":"YulFunctionCall","src":"14904:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14896:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14664:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14678:4:13","type":""}],"src":"14513:416:13"},{"body":{"nodeType":"YulBlock","src":"15108:230:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15125:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15136:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15118:6:13"},"nodeType":"YulFunctionCall","src":"15118:21:13"},"nodeType":"YulExpressionStatement","src":"15118:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15159:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15170:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15155:3:13"},"nodeType":"YulFunctionCall","src":"15155:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"15175:2:13","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15148:6:13"},"nodeType":"YulFunctionCall","src":"15148:30:13"},"nodeType":"YulExpressionStatement","src":"15148:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15198:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15209:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15194:3:13"},"nodeType":"YulFunctionCall","src":"15194:18:13"},{"hexValue":"455243313135353a204552433131353552656365697665722072656a65637465","kind":"string","nodeType":"YulLiteral","src":"15214:34:13","type":"","value":"ERC1155: ERC1155Receiver rejecte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15187:6:13"},"nodeType":"YulFunctionCall","src":"15187:62:13"},"nodeType":"YulExpressionStatement","src":"15187:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15269:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15280:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15265:3:13"},"nodeType":"YulFunctionCall","src":"15265:18:13"},{"hexValue":"6420746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"15285:10:13","type":"","value":"d tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15258:6:13"},"nodeType":"YulFunctionCall","src":"15258:38:13"},"nodeType":"YulExpressionStatement","src":"15258:38:13"},{"nodeType":"YulAssignment","src":"15305:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15317:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15328:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15313:3:13"},"nodeType":"YulFunctionCall","src":"15313:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15305:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15085:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15099:4:13","type":""}],"src":"14934:404:13"},{"body":{"nodeType":"YulBlock","src":"15574:353:13","statements":[{"nodeType":"YulVariableDeclaration","src":"15584:52:13","value":{"kind":"number","nodeType":"YulLiteral","src":"15594:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15588:2:13","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15652:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15667:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"15675:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15663:3:13"},"nodeType":"YulFunctionCall","src":"15663:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15645:6:13"},"nodeType":"YulFunctionCall","src":"15645:34:13"},"nodeType":"YulExpressionStatement","src":"15645:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15699:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15710:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15695:3:13"},"nodeType":"YulFunctionCall","src":"15695:18:13"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15719:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"15727:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15715:3:13"},"nodeType":"YulFunctionCall","src":"15715:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15688:6:13"},"nodeType":"YulFunctionCall","src":"15688:43:13"},"nodeType":"YulExpressionStatement","src":"15688:43:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15751:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15762:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15747:3:13"},"nodeType":"YulFunctionCall","src":"15747:18:13"},{"name":"value2","nodeType":"YulIdentifier","src":"15767:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15740:6:13"},"nodeType":"YulFunctionCall","src":"15740:34:13"},"nodeType":"YulExpressionStatement","src":"15740:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15794:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15805:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15790:3:13"},"nodeType":"YulFunctionCall","src":"15790:18:13"},{"name":"value3","nodeType":"YulIdentifier","src":"15810:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15783:6:13"},"nodeType":"YulFunctionCall","src":"15783:34:13"},"nodeType":"YulExpressionStatement","src":"15783:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15837:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15848:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15833:3:13"},"nodeType":"YulFunctionCall","src":"15833:19:13"},{"kind":"number","nodeType":"YulLiteral","src":"15854:3:13","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15826:6:13"},"nodeType":"YulFunctionCall","src":"15826:32:13"},"nodeType":"YulExpressionStatement","src":"15826:32:13"},{"nodeType":"YulAssignment","src":"15867:54:13","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"15893:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15905:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15916:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15901:3:13"},"nodeType":"YulFunctionCall","src":"15901:19:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"15875:17:13"},"nodeType":"YulFunctionCall","src":"15875:46:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15867:4:13"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15511:9:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15522:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15530:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15538:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15546:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15554:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15565:4:13","type":""}],"src":"15343:584:13"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610d5b565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610d9e565b610225565b60405190151581526020016100a9565b6100e86100e3366004610dc2565b610275565b6040516100a99190610e21565b610108610103366004610f80565b610309565b005b61011d61011836600461102a565b61039c565b6040516100a99190611130565b610108610138366004611143565b6104c6565b6100c561014b36600461117f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101086101873660046111b2565b6104d5565b60006001600160a01b0383166101fc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061025657506001600160e01b031982166303a24d0760e21b145b8061021f57506301ffc9a760e01b6001600160e01b031983161461021f565b60606002805461028490611217565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090611217565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b6103885760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526d195c881bdc88185c1c1c9bdd995960921b60648201526084016101f3565b6103958585858585610561565b5050505050565b606081518351146104015760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f3565b6000835167ffffffffffffffff81111561041d5761041d610e34565b604051908082528060200260200182016040528015610446578160200160208202803683370190505b50905060005b84518110156104be5761049185828151811061046a5761046a611251565b602002602001015185838151811061048457610484611251565b602002602001015161018c565b8282815181106104a3576104a3611251565b60209081029190910101526104b78161127d565b905061044c565b509392505050565b6104d13383836107bf565b5050565b6001600160a01b0385163314806104f157506104f1853361014b565b6105545760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526d195c881bdc88185c1c1c9bdd995960921b60648201526084016101f3565b610395858585858561089f565b81518351146105c35760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f3565b6001600160a01b0384166106275760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016101f3565b3360005b845181101561075157600085828151811061064857610648611251565b60200260200101519050600085838151811061066657610666611251565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106f95760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016101f3565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610736908490611296565b925050819055505050508061074a9061127d565b905061062b565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107a19291906112a9565b60405180910390a46107b7818787878787610a4a565b505050505050565b816001600160a01b0316836001600160a01b0316036108325760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f3565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166109035760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016101f3565b33600061090f85610bf8565b9050600061091c85610bf8565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156109a25760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016101f3565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906109df908490611296565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610a3f848a8a8a8a8a610c43565b505050505050505050565b6001600160a01b0384163b156107b75760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610a8e90899089908890889088906004016112d7565b6020604051808303816000875af1925050508015610ac9575060408051601f3d908101601f19168201909252610ac691810190611335565b60015b610b7e57610ad5611352565b806308c379a003610b0e5750610ae961136e565b80610af45750610b10565b8060405162461bcd60e51b81526004016101f39190610e21565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016101f3565b6001600160e01b0319811663bc197c8160e01b14610bef5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016101f3565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610c3257610c32611251565b602090810291909101015292915050565b6001600160a01b0384163b156107b75760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610c8790899089908890889088906004016113f8565b6020604051808303816000875af1925050508015610cc2575060408051601f3d908101601f19168201909252610cbf91810190611335565b60015b610cce57610ad5611352565b6001600160e01b0319811663f23a6e6160e01b14610bef5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016101f3565b80356001600160a01b0381168114610d5657600080fd5b919050565b60008060408385031215610d6e57600080fd5b610d7783610d3f565b946020939093013593505050565b6001600160e01b031981168114610d9b57600080fd5b50565b600060208284031215610db057600080fd5b8135610dbb81610d85565b9392505050565b600060208284031215610dd457600080fd5b5035919050565b6000815180845260005b81811015610e0157602081850181015186830182015201610de5565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610dbb6020830184610ddb565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610e7057610e70610e34565b6040525050565b600067ffffffffffffffff821115610e9157610e91610e34565b5060051b60200190565b600082601f830112610eac57600080fd5b81356020610eb982610e77565b604051610ec68282610e4a565b83815260059390931b8501820192828101915086841115610ee657600080fd5b8286015b84811015610f015780358352918301918301610eea565b509695505050505050565b600082601f830112610f1d57600080fd5b813567ffffffffffffffff811115610f3757610f37610e34565b604051610f4e601f8301601f191660200182610e4a565b818152846020838601011115610f6357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610f9857600080fd5b610fa186610d3f565b9450610faf60208701610d3f565b9350604086013567ffffffffffffffff80821115610fcc57600080fd5b610fd889838a01610e9b565b94506060880135915080821115610fee57600080fd5b610ffa89838a01610e9b565b9350608088013591508082111561101057600080fd5b5061101d88828901610f0c565b9150509295509295909350565b6000806040838503121561103d57600080fd5b823567ffffffffffffffff8082111561105557600080fd5b818501915085601f83011261106957600080fd5b8135602061107682610e77565b6040516110838282610e4a565b83815260059390931b85018201928281019150898411156110a357600080fd5b948201945b838610156110c8576110b986610d3f565b825294820194908201906110a8565b965050860135925050808211156110de57600080fd5b506110eb85828601610e9b565b9150509250929050565b600081518084526020808501945080840160005b8381101561112557815187529582019590820190600101611109565b509495945050505050565b602081526000610dbb60208301846110f5565b6000806040838503121561115657600080fd5b61115f83610d3f565b91506020830135801515811461117457600080fd5b809150509250929050565b6000806040838503121561119257600080fd5b61119b83610d3f565b91506111a960208401610d3f565b90509250929050565b600080600080600060a086880312156111ca57600080fd5b6111d386610d3f565b94506111e160208701610d3f565b93506040860135925060608601359150608086013567ffffffffffffffff81111561120b57600080fd5b61101d88828901610f0c565b600181811c9082168061122b57607f821691505b60208210810361124b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161128f5761128f611267565b5060010190565b8082018082111561021f5761021f611267565b6040815260006112bc60408301856110f5565b82810360208401526112ce81856110f5565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261130360a08301866110f5565b828103606084015261131581866110f5565b905082810360808401526113298185610ddb565b98975050505050505050565b60006020828403121561134757600080fd5b8151610dbb81610d85565b600060033d111561136b5760046000803e5060005160e01c5b90565b600060443d101561137c5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156113ac57505050505090565b82850191508151818111156113c45750505050505090565b843d87010160208285010111156113de5750505050505090565b6113ed60208286010187610e4a565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261143060a0830184610ddb565b97965050505050505056fea2646970667358221220aaee6dcd652b9f23c0e173b72cf52b9e2e8786950495a901b458b8d6037d313964736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xD5B JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9E JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC2 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xE21 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x39C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1130 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x4C6 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x11B2 JUMP JUMPDEST PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x256 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x21F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x21F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1217 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1217 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x395 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x561 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x401 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x41D JUMPI PUSH2 0x41D PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x446 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4BE JUMPI PUSH2 0x491 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46A JUMPI PUSH2 0x46A PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x484 JUMPI PUSH2 0x484 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A3 JUMPI PUSH2 0x4A3 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4B7 DUP2 PUSH2 0x127D JUMP JUMPDEST SWAP1 POP PUSH2 0x44C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D1 CALLER DUP4 DUP4 PUSH2 0x7BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F1 JUMPI POP PUSH2 0x4F1 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x395 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x89F JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x627 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x751 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x648 JUMPI PUSH2 0x648 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x666 JUMPI PUSH2 0x666 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x736 SWAP1 DUP5 SWAP1 PUSH2 0x1296 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x74A SWAP1 PUSH2 0x127D JUMP JUMPDEST SWAP1 POP PUSH2 0x62B JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7A1 SWAP3 SWAP2 SWAP1 PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x7B7 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xA4A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x832 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x903 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x90F DUP6 PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x91C DUP6 PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x9DF SWAP1 DUP5 SWAP1 PUSH2 0x1296 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA3F DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xC43 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xA8E SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAC9 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAC6 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB7E JUMPI PUSH2 0xAD5 PUSH2 0x1352 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xB0E JUMPI POP PUSH2 0xAE9 PUSH2 0x136E JUMP JUMPDEST DUP1 PUSH2 0xAF4 JUMPI POP PUSH2 0xB10 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xE21 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC32 JUMPI PUSH2 0xC32 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xC87 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCC2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCBF SWAP2 DUP2 ADD SWAP1 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCCE JUMPI PUSH2 0xAD5 PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD77 DUP4 PUSH2 0xD3F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDBB DUP2 PUSH2 0xD85 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE01 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xDE5 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xDBB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDDB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE70 JUMPI PUSH2 0xE70 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE91 JUMPI PUSH2 0xE91 PUSH2 0xE34 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEB9 DUP3 PUSH2 0xE77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC6 DUP3 DUP3 PUSH2 0xE4A JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xEE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xF01 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xEEA JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF37 JUMPI PUSH2 0xF37 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4E PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xE4A JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xF63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA1 DUP7 PUSH2 0xD3F JUMP JUMPDEST SWAP5 POP PUSH2 0xFAF PUSH1 0x20 DUP8 ADD PUSH2 0xD3F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD8 DUP10 DUP4 DUP11 ADD PUSH2 0xE9B JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xFEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFFA DUP10 DUP4 DUP11 ADD PUSH2 0xE9B JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1010 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101D DUP9 DUP3 DUP10 ADD PUSH2 0xF0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x103D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1069 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1076 DUP3 PUSH2 0xE77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1083 DUP3 DUP3 PUSH2 0xE4A JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x10A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x10C8 JUMPI PUSH2 0x10B9 DUP7 PUSH2 0xD3F JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x10A8 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x10DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10EB DUP6 DUP3 DUP7 ADD PUSH2 0xE9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1125 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1109 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xDBB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x115F DUP4 PUSH2 0xD3F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x119B DUP4 PUSH2 0xD3F JUMP JUMPDEST SWAP2 POP PUSH2 0x11A9 PUSH1 0x20 DUP5 ADD PUSH2 0xD3F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11D3 DUP7 PUSH2 0xD3F JUMP JUMPDEST SWAP5 POP PUSH2 0x11E1 PUSH1 0x20 DUP8 ADD PUSH2 0xD3F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x120B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x101D DUP9 DUP3 DUP10 ADD PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x122B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x124B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x128F JUMPI PUSH2 0x128F PUSH2 0x1267 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x21F JUMPI PUSH2 0x21F PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12BC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x10F5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x12CE DUP2 DUP6 PUSH2 0x10F5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1303 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x10F5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1315 DUP2 DUP7 PUSH2 0x10F5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1329 DUP2 DUP6 PUSH2 0xDDB JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDBB DUP2 PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x136B JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x137C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x13AC JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x13C4 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x13DE JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x13ED PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xE4A JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1430 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xDDB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xEE PUSH14 0xCD652B9F23C0E173B72CF52B9E2E DUP8 DUP7 SWAP6 DIV SWAP6 0xA9 ADD 0xB4 PC 0xB8 0xD6 SUB PUSH30 0x313964736F6C634300081400330000000000000000000000000000000000 ","sourceMap":"570:16539:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227;;;;;;:::i;:::-;;:::i;:::-;;;620:25:13;;;608:2;593:18;2185:227:1;;;;;;;;1236:305;;;;;;:::i;:::-;;:::i;:::-;;;1207:14:13;;1200:22;1182:41;;1170:2;1155:18;1236:305:1;1042:187:13;1940:103:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4042:426::-;;;;;;:::i;:::-;;:::i;:::-;;2569:486;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3123:153::-;;;;;;:::i;:::-;;:::i;3343:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3465:27:1;;;3442:4;3465:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3343:166;3576:394;;;;;;:::i;:::-;;:::i;2185:227::-;2271:7;-1:-1:-1;;;;;2298:21:1;;2290:76;;;;-1:-1:-1;;;2290:76:1;;8232:2:13;2290:76:1;;;8214:21:13;8271:2;8251:18;;;8244:30;8310:34;8290:18;;;8283:62;-1:-1:-1;;;8361:18:13;;;8354:40;8411:19;;2290:76:1;;;;;;;;;-1:-1:-1;2383:9:1;:13;;;;;;;;;;;-1:-1:-1;;;;;2383:22:1;;;;;;;;;;2185:227;;;;;:::o;1236:305::-;1338:4;-1:-1:-1;;;;;;1373:41:1;;-1:-1:-1;;;1373:41:1;;:109;;-1:-1:-1;;;;;;;1430:52:1;;-1:-1:-1;;;1430:52:1;1373:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:8;;;1498:36:1;829:155:8;1940:103:1;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4042:426::-;-1:-1:-1;;;;;4267:20:1;;719:10:6;4267:20:1;;:60;;-1:-1:-1;4291:36:1;4308:4;719:10:6;3343:166:1;:::i;4291:36::-;4246:153;;;;-1:-1:-1;;;4246:153:1;;9028:2:13;4246:153:1;;;9010:21:13;9067:2;9047:18;;;9040:30;9106:34;9086:18;;;9079:62;-1:-1:-1;;;9157:18:13;;;9150:44;9211:19;;4246:153:1;8826:410:13;4246:153:1;4409:52;4432:4;4438:2;4442:3;4447:7;4456:4;4409:22;:52::i;:::-;4042:426;;;;;:::o;2569:486::-;2702:16;2757:3;:10;2738:8;:15;:29;2730:83;;;;-1:-1:-1;;;2730:83:1;;9443:2:13;2730:83:1;;;9425:21:13;9482:2;9462:18;;;9455:30;9521:34;9501:18;;;9494:62;-1:-1:-1;;;9572:18:13;;;9565:39;9621:19;;2730:83:1;9241:405:13;2730:83:1;2824:30;2871:8;:15;2857:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2857:30:1;;2824:63;;2903:9;2898:120;2922:8;:15;2918:1;:19;2898:120;;;2977:30;2987:8;2996:1;2987:11;;;;;;;;:::i;:::-;;;;;;;3000:3;3004:1;3000:6;;;;;;;;:::i;:::-;;;;;;;2977:9;:30::i;:::-;2958:13;2972:1;2958:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2939:3;;;:::i;:::-;;;2898:120;;;-1:-1:-1;3035:13:1;2569:486;-1:-1:-1;;;2569:486:1:o;3123:153::-;3217:52;719:10:6;3250:8:1;3260;3217:18;:52::i;:::-;3123:153;;:::o;3576:394::-;-1:-1:-1;;;;;3776:20:1;;719:10:6;3776:20:1;;:60;;-1:-1:-1;3800:36:1;3817:4;719:10:6;3343:166:1;:::i;3800:36::-;3755:153;;;;-1:-1:-1;;;3755:153:1;;9028:2:13;3755:153:1;;;9010:21:13;9067:2;9047:18;;;9040:30;9106:34;9086:18;;;9079:62;-1:-1:-1;;;9157:18:13;;;9150:44;9211:19;;3755:153:1;8826:410:13;3755:153:1;3918:45;3936:4;3942:2;3946;3950:6;3958:4;3918:17;:45::i;6211:1115::-;6431:7;:14;6417:3;:10;:28;6409:81;;;;-1:-1:-1;;;6409:81:1;;10257:2:13;6409:81:1;;;10239:21:13;10296:2;10276:18;;;10269:30;10335:34;10315:18;;;10308:62;-1:-1:-1;;;10386:18:13;;;10379:38;10434:19;;6409:81:1;10055:404:13;6409:81:1;-1:-1:-1;;;;;6508:16:1;;6500:66;;;;-1:-1:-1;;;6500:66:1;;10666:2:13;6500:66:1;;;10648:21:13;10705:2;10685:18;;;10678:30;10744:34;10724:18;;;10717:62;-1:-1:-1;;;10795:18:13;;;10788:35;10840:19;;6500:66:1;10464:401:13;6500:66:1;719:10:6;6577:16:1;6690:411;6714:3;:10;6710:1;:14;6690:411;;;6745:10;6758:3;6762:1;6758:6;;;;;;;;:::i;:::-;;;;;;;6745:19;;6778:14;6795:7;6803:1;6795:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6820:19;6842:13;;;;;;;;;;-1:-1:-1;;;;;6842:19:1;;;;;;;;;;;;6795:10;;-1:-1:-1;6883:21:1;;;;6875:76;;;;-1:-1:-1;;;6875:76:1;;11072:2:13;6875:76:1;;;11054:21:13;11111:2;11091:18;;;11084:30;11150:34;11130:18;;;11123:62;-1:-1:-1;;;11201:18:13;;;11194:40;11251:19;;6875:76:1;10870:406:13;6875:76:1;6993:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6993:19:1;;;;;;;;;;7015:20;;;6993:42;;7063:17;;;;;;;:27;;7015:20;;6993:9;7063:27;;7015:20;;7063:27;:::i;:::-;;;;;;;;6731:370;;;6726:3;;;;:::i;:::-;;;6690:411;;;;7146:2;-1:-1:-1;;;;;7116:47:1;7140:4;-1:-1:-1;;;;;7116:47:1;7130:8;-1:-1:-1;;;;;7116:47:1;;7150:3;7155:7;7116:47;;;;;;;:::i;:::-;;;;;;;;7244:75;7280:8;7290:4;7296:2;7300:3;7305:7;7314:4;7244:35;:75::i;:::-;6399:927;6211:1115;;;;;:::o;12790:293::-;12910:8;-1:-1:-1;;;;;12901:17:1;:5;-1:-1:-1;;;;;12901:17:1;;12893:71;;;;-1:-1:-1;;;12893:71:1;;12083:2:13;12893:71:1;;;12065:21:13;12122:2;12102:18;;;12095:30;12161:34;12141:18;;;12134:62;-1:-1:-1;;;12212:18:13;;;12205:39;12261:19;;12893:71:1;11881:405:13;12893:71:1;-1:-1:-1;;;;;12974:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12974:46:1;;;;;;;;;;13035:41;;1182::13;;;13035::1;;1155:18:13;13035:41:1;;;;;;;12790:293;;;:::o;4918:947::-;-1:-1:-1;;;;;5099:16:1;;5091:66;;;;-1:-1:-1;;;5091:66:1;;10666:2:13;5091:66:1;;;10648:21:13;10705:2;10685:18;;;10678:30;10744:34;10724:18;;;10717:62;-1:-1:-1;;;10795:18:13;;;10788:35;10840:19;;5091:66:1;10464:401:13;5091:66:1;719:10:6;5168:16:1;5232:21;5250:2;5232:17;:21::i;:::-;5209:44;;5263:24;5290:25;5308:6;5290:17;:25::i;:::-;5263:52;;5397:19;5419:13;;;;;;;;;;;-1:-1:-1;;;;;5419:19:1;;;;;;;;;;5456:21;;;;5448:76;;;;-1:-1:-1;;;5448:76:1;;11072:2:13;5448:76:1;;;11054:21:13;11111:2;11091:18;;;11084:30;11150:34;11130:18;;;11123:62;-1:-1:-1;;;11201:18:13;;;11194:40;11251:19;;5448:76:1;10870:406:13;5448:76:1;5558:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5558:19:1;;;;;;;;;;5580:20;;;5558:42;;5620:17;;;;;;;:27;;5580:20;;5558:9;5620:27;;5580:20;;5620:27;:::i;:::-;;;;-1:-1:-1;;5663:46:1;;;12465:25:13;;;12521:2;12506:18;;12499:34;;;-1:-1:-1;;;;;5663:46:1;;;;;;;;;;;;;;12438:18:13;5663:46:1;;;;;;;5790:68;5821:8;5831:4;5837:2;5841;5845:6;5853:4;5790:30;:68::i;:::-;5081:784;;;;4918:947;;;;;:::o;16116:792::-;-1:-1:-1;;;;;16348:13:1;;1702:19:5;:23;16344:558:1;;16383:79;;-1:-1:-1;;;16383:79:1;;-1:-1:-1;;;;;16383:43:1;;;;;:79;;16427:8;;16437:4;;16443:3;;16448:7;;16457:4;;16383:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16383:79:1;;;;;;;;-1:-1:-1;;16383:79:1;;;;;;;;;;;;:::i;:::-;;;16379:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16768:6;16761:14;;-1:-1:-1;;;16761:14:1;;;;;;;;:::i;16379:513::-;;;16815:62;;-1:-1:-1;;;16815:62:1;;14715:2:13;16815:62:1;;;14697:21:13;14754:2;14734:18;;;14727:30;14793:34;14773:18;;;14766:62;14864:22;14844:18;;;14837:50;14904:19;;16815:62:1;14513:416:13;16379:513:1;-1:-1:-1;;;;;;16541:60:1;;-1:-1:-1;;;16541:60:1;16537:157;;16625:50;;-1:-1:-1;;;16625:50:1;;15136:2:13;16625:50:1;;;15118:21:13;15175:2;15155:18;;;15148:30;15214:34;15194:18;;;15187:62;-1:-1:-1;;;15265:18:13;;;15258:38;15313:19;;16625:50:1;14934:404:13;16537:157:1;16463:245;16116:792;;;;;;:::o;16914:193::-;17033:16;;;17047:1;17033:16;;;;;;;;;16980;;17008:22;;17033:16;;;;;;;;;;;;-1:-1:-1;17033:16:1;17008:41;;17070:7;17059:5;17065:1;17059:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17095:5;16914:193;-1:-1:-1;;16914:193:1:o;15385:725::-;-1:-1:-1;;;;;15592:13:1;;1702:19:5;:23;15588:516:1;;15627:72;;-1:-1:-1;;;15627:72:1;;-1:-1:-1;;;;;15627:38:1;;;;;:72;;15666:8;;15676:4;;15682:2;;15686:6;;15694:4;;15627:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15627:72:1;;;;;;;;-1:-1:-1;;15627:72:1;;;;;;;;;;;;:::i;:::-;;;15623:471;;;;:::i;:::-;-1:-1:-1;;;;;;15748:55:1;;-1:-1:-1;;;15748:55:1;15744:152;;15827:50;;-1:-1:-1;;;15827:50:1;;15136:2:13;15827:50:1;;;15118:21:13;15175:2;15155:18;;;15148:30;15214:34;15194:18;;;15187:62;-1:-1:-1;;;15265:18:13;;;15258:38;15313:19;;15827:50:1;14934:404:13;14:196;82:20;;-1:-1:-1;;;;;131:54:13;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:254::-;283:6;291;344:2;332:9;323:7;319:23;315:32;312:52;;;360:1;357;350:12;312:52;383:29;402:9;383:29;:::i;:::-;373:39;459:2;444:18;;;;431:32;;-1:-1:-1;;;215:254:13:o;656:131::-;-1:-1:-1;;;;;;730:32:13;;720:43;;710:71;;777:1;774;767:12;710:71;656:131;:::o;792:245::-;850:6;903:2;891:9;882:7;878:23;874:32;871:52;;;919:1;916;909:12;871:52;958:9;945:23;977:30;1001:5;977:30;:::i;:::-;1026:5;792:245;-1:-1:-1;;;792:245:13:o;1234:180::-;1293:6;1346:2;1334:9;1325:7;1321:23;1317:32;1314:52;;;1362:1;1359;1352:12;1314:52;-1:-1:-1;1385:23:13;;1234:180;-1:-1:-1;1234:180:13:o;1419:423::-;1461:3;1499:5;1493:12;1526:6;1521:3;1514:19;1551:1;1561:162;1575:6;1572:1;1569:13;1561:162;;;1637:4;1693:13;;;1689:22;;1683:29;1665:11;;;1661:20;;1654:59;1590:12;1561:162;;;1565:3;1768:1;1761:4;1752:6;1747:3;1743:16;1739:27;1732:38;1831:4;1824:2;1820:7;1815:2;1807:6;1803:15;1799:29;1794:3;1790:39;1786:50;1779:57;;;1419:423;;;;:::o;1847:220::-;1996:2;1985:9;1978:21;1959:4;2016:45;2057:2;2046:9;2042:18;2034:6;2016:45;:::i;2072:127::-;2133:10;2128:3;2124:20;2121:1;2114:31;2164:4;2161:1;2154:15;2188:4;2185:1;2178:15;2204:249;2314:2;2295:13;;-1:-1:-1;;2291:27:13;2279:40;;2349:18;2334:34;;2370:22;;;2331:62;2328:88;;;2396:18;;:::i;:::-;2432:2;2425:22;-1:-1:-1;;2204:249:13:o;2458:183::-;2518:4;2551:18;2543:6;2540:30;2537:56;;;2573:18;;:::i;:::-;-1:-1:-1;2618:1:13;2614:14;2630:4;2610:25;;2458:183::o;2646:724::-;2700:5;2753:3;2746:4;2738:6;2734:17;2730:27;2720:55;;2771:1;2768;2761:12;2720:55;2807:6;2794:20;2833:4;2856:43;2896:2;2856:43;:::i;:::-;2928:2;2922:9;2940:31;2968:2;2960:6;2940:31;:::i;:::-;3006:18;;;3098:1;3094:10;;;;3082:23;;3078:32;;;3040:15;;;;-1:-1:-1;3122:15:13;;;3119:35;;;3150:1;3147;3140:12;3119:35;3186:2;3178:6;3174:15;3198:142;3214:6;3209:3;3206:15;3198:142;;;3280:17;;3268:30;;3318:12;;;;3231;;3198:142;;;-1:-1:-1;3358:6:13;2646:724;-1:-1:-1;;;;;;2646:724:13:o;3375:555::-;3417:5;3470:3;3463:4;3455:6;3451:17;3447:27;3437:55;;3488:1;3485;3478:12;3437:55;3524:6;3511:20;3550:18;3546:2;3543:26;3540:52;;;3572:18;;:::i;:::-;3621:2;3615:9;3633:67;3688:2;3669:13;;-1:-1:-1;;3665:27:13;3694:4;3661:38;3615:9;3633:67;:::i;:::-;3724:2;3716:6;3709:18;3770:3;3763:4;3758:2;3750:6;3746:15;3742:26;3739:35;3736:55;;;3787:1;3784;3777:12;3736:55;3851:2;3844:4;3836:6;3832:17;3825:4;3817:6;3813:17;3800:54;3898:1;3874:15;;;3891:4;3870:26;3863:37;;;;3878:6;3375:555;-1:-1:-1;;;3375:555:13:o;3935:943::-;4089:6;4097;4105;4113;4121;4174:3;4162:9;4153:7;4149:23;4145:33;4142:53;;;4191:1;4188;4181:12;4142:53;4214:29;4233:9;4214:29;:::i;:::-;4204:39;;4262:38;4296:2;4285:9;4281:18;4262:38;:::i;:::-;4252:48;;4351:2;4340:9;4336:18;4323:32;4374:18;4415:2;4407:6;4404:14;4401:34;;;4431:1;4428;4421:12;4401:34;4454:61;4507:7;4498:6;4487:9;4483:22;4454:61;:::i;:::-;4444:71;;4568:2;4557:9;4553:18;4540:32;4524:48;;4597:2;4587:8;4584:16;4581:36;;;4613:1;4610;4603:12;4581:36;4636:63;4691:7;4680:8;4669:9;4665:24;4636:63;:::i;:::-;4626:73;;4752:3;4741:9;4737:19;4724:33;4708:49;;4782:2;4772:8;4769:16;4766:36;;;4798:1;4795;4788:12;4766:36;;4821:51;4864:7;4853:8;4842:9;4838:24;4821:51;:::i;:::-;4811:61;;;3935:943;;;;;;;;:::o;4883:1208::-;5001:6;5009;5062:2;5050:9;5041:7;5037:23;5033:32;5030:52;;;5078:1;5075;5068:12;5030:52;5118:9;5105:23;5147:18;5188:2;5180:6;5177:14;5174:34;;;5204:1;5201;5194:12;5174:34;5242:6;5231:9;5227:22;5217:32;;5287:7;5280:4;5276:2;5272:13;5268:27;5258:55;;5309:1;5306;5299:12;5258:55;5345:2;5332:16;5367:4;5390:43;5430:2;5390:43;:::i;:::-;5462:2;5456:9;5474:31;5502:2;5494:6;5474:31;:::i;:::-;5540:18;;;5628:1;5624:10;;;;5616:19;;5612:28;;;5574:15;;;;-1:-1:-1;5652:19:13;;;5649:39;;;5684:1;5681;5674:12;5649:39;5708:11;;;;5728:148;5744:6;5739:3;5736:15;5728:148;;;5810:23;5829:3;5810:23;:::i;:::-;5798:36;;5761:12;;;;5854;;;;5728:148;;;5895:6;-1:-1:-1;;5939:18:13;;5926:32;;-1:-1:-1;;5970:16:13;;;5967:36;;;5999:1;5996;5989:12;5967:36;;6022:63;6077:7;6066:8;6055:9;6051:24;6022:63;:::i;:::-;6012:73;;;4883:1208;;;;;:::o;6096:435::-;6149:3;6187:5;6181:12;6214:6;6209:3;6202:19;6240:4;6269:2;6264:3;6260:12;6253:19;;6306:2;6299:5;6295:14;6327:1;6337:169;6351:6;6348:1;6345:13;6337:169;;;6412:13;;6400:26;;6446:12;;;;6481:15;;;;6373:1;6366:9;6337:169;;;-1:-1:-1;6522:3:13;;6096:435;-1:-1:-1;;;;;6096:435:13:o;6536:261::-;6715:2;6704:9;6697:21;6678:4;6735:56;6787:2;6776:9;6772:18;6764:6;6735:56;:::i;6802:347::-;6867:6;6875;6928:2;6916:9;6907:7;6903:23;6899:32;6896:52;;;6944:1;6941;6934:12;6896:52;6967:29;6986:9;6967:29;:::i;:::-;6957:39;;7046:2;7035:9;7031:18;7018:32;7093:5;7086:13;7079:21;7072:5;7069:32;7059:60;;7115:1;7112;7105:12;7059:60;7138:5;7128:15;;;6802:347;;;;;:::o;7154:260::-;7222:6;7230;7283:2;7271:9;7262:7;7258:23;7254:32;7251:52;;;7299:1;7296;7289:12;7251:52;7322:29;7341:9;7322:29;:::i;:::-;7312:39;;7370:38;7404:2;7393:9;7389:18;7370:38;:::i;:::-;7360:48;;7154:260;;;;;:::o;7419:606::-;7523:6;7531;7539;7547;7555;7608:3;7596:9;7587:7;7583:23;7579:33;7576:53;;;7625:1;7622;7615:12;7576:53;7648:29;7667:9;7648:29;:::i;:::-;7638:39;;7696:38;7730:2;7719:9;7715:18;7696:38;:::i;:::-;7686:48;;7781:2;7770:9;7766:18;7753:32;7743:42;;7832:2;7821:9;7817:18;7804:32;7794:42;;7887:3;7876:9;7872:19;7859:33;7915:18;7907:6;7904:30;7901:50;;;7947:1;7944;7937:12;7901:50;7970:49;8011:7;8002:6;7991:9;7987:22;7970:49;:::i;8441:380::-;8520:1;8516:12;;;;8563;;;8584:61;;8638:4;8630:6;8626:17;8616:27;;8584:61;8691:2;8683:6;8680:14;8660:18;8657:38;8654:161;;8737:10;8732:3;8728:20;8725:1;8718:31;8772:4;8769:1;8762:15;8800:4;8797:1;8790:15;8654:161;;8441:380;;;:::o;9651:127::-;9712:10;9707:3;9703:20;9700:1;9693:31;9743:4;9740:1;9733:15;9767:4;9764:1;9757:15;9783:127;9844:10;9839:3;9835:20;9832:1;9825:31;9875:4;9872:1;9865:15;9899:4;9896:1;9889:15;9915:135;9954:3;9975:17;;;9972:43;;9995:18;;:::i;:::-;-1:-1:-1;10042:1:13;10031:13;;9915:135::o;11281:125::-;11346:9;;;11367:10;;;11364:36;;;11380:18;;:::i;11411:465::-;11668:2;11657:9;11650:21;11631:4;11694:56;11746:2;11735:9;11731:18;11723:6;11694:56;:::i;:::-;11798:9;11790:6;11786:22;11781:2;11770:9;11766:18;11759:50;11826:44;11863:6;11855;11826:44;:::i;:::-;11818:52;11411:465;-1:-1:-1;;;;;11411:465:13:o;12544:850::-;12866:4;-1:-1:-1;;;;;12976:2:13;12968:6;12964:15;12953:9;12946:34;13028:2;13020:6;13016:15;13011:2;13000:9;12996:18;12989:43;;13068:3;13063:2;13052:9;13048:18;13041:31;13095:57;13147:3;13136:9;13132:19;13124:6;13095:57;:::i;:::-;13200:9;13192:6;13188:22;13183:2;13172:9;13168:18;13161:50;13234:44;13271:6;13263;13234:44;:::i;:::-;13220:58;;13327:9;13319:6;13315:22;13309:3;13298:9;13294:19;13287:51;13355:33;13381:6;13373;13355:33;:::i;:::-;13347:41;12544:850;-1:-1:-1;;;;;;;;12544:850:13:o;13399:249::-;13468:6;13521:2;13509:9;13500:7;13496:23;13492:32;13489:52;;;13537:1;13534;13527:12;13489:52;13569:9;13563:16;13588:30;13612:5;13588:30;:::i;13653:179::-;13688:3;13730:1;13712:16;13709:23;13706:120;;;13776:1;13773;13770;13755:23;-1:-1:-1;13813:1:13;13807:8;13802:3;13798:18;13706:120;13653:179;:::o;13837:671::-;13876:3;13918:4;13900:16;13897:26;13894:39;;;13837:671;:::o;13894:39::-;13960:2;13954:9;-1:-1:-1;;14025:16:13;14021:25;;14018:1;13954:9;13997:50;14076:4;14070:11;14100:16;14135:18;14206:2;14199:4;14191:6;14187:17;14184:25;14179:2;14171:6;14168:14;14165:45;14162:58;;;14213:5;;;;;13837:671;:::o;14162:58::-;14250:6;14244:4;14240:17;14229:28;;14286:3;14280:10;14313:2;14305:6;14302:14;14299:27;;;14319:5;;;;;;13837:671;:::o;14299:27::-;14403:2;14384:16;14378:4;14374:27;14370:36;14363:4;14354:6;14349:3;14345:16;14341:27;14338:69;14335:82;;;14410:5;;;;;;13837:671;:::o;14335:82::-;14426:57;14477:4;14468:6;14460;14456:19;14452:30;14446:4;14426:57;:::i;:::-;-1:-1:-1;14499:3:13;;13837:671;-1:-1:-1;;;;;13837:671:13:o;15343:584::-;15565:4;-1:-1:-1;;;;;15675:2:13;15667:6;15663:15;15652:9;15645:34;15727:2;15719:6;15715:15;15710:2;15699:9;15695:18;15688:43;;15767:6;15762:2;15751:9;15747:18;15740:34;15810:6;15805:2;15794:9;15790:18;15783:34;15854:3;15848;15837:9;15833:19;15826:32;15875:46;15916:3;15905:9;15901:19;15893:6;15875:46;:::i;:::-;15867:54;15343:584;-1:-1:-1;;;;;;;15343:584:13:o"},"gasEstimates":{"creation":{"codeDepositCost":"1046600","executionCost":"infinite","totalCost":"infinite"},"external":{"balanceOf(address,uint256)":"2677","balanceOfBatch(address[],uint256[])":"infinite","isApprovedForAll(address,address)":"infinite","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"infinite","safeTransferFrom(address,address,uint256,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26705","supportsInterface(bytes4)":"555","uri(uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_asSingletonArray(uint256)":"infinite","_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_burn(address,uint256,uint256)":"infinite","_burnBatch(address,uint256[] memory,uint256[] memory)":"infinite","_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)":"infinite","_mint(address,uint256,uint256,bytes memory)":"infinite","_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_safeTransferFrom(address,address,uint256,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_setURI(string memory)":"infinite"}},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155.sol\\\";\\nimport \\\"./IERC1155Receiver.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURI.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\\n    using Address for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping(uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    constructor(string memory uri_) {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: address zero is not a valid owner\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] memory accounts,\\n        uint256[] memory ids\\n    ) public view virtual override returns (uint256[] memory) {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeTransferFrom(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _balances[id][to] += amount;\\n        emit TransferSingle(operator, address(0), to, id, amount);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(address from, uint256 id, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory amounts) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n        }\\n\\n        emit TransferBatch(operator, from, address(0), ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC1155: setting approval status for self\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n}\\n\",\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":144,"contract":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155","label":"_operatorApprovals","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":146,"contract":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155","label":"_uri","offset":0,"slot":"2","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"_Available since v3.1._","kind":"dev","methods":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"details":"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","ids":"An array containing ids of each token being transferred (order and length must match values array)","operator":"The address which initiated the batch transfer (i.e. msg.sender)","values":"An array containing amounts of each token being transferred (order and length must match ids array)"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","id":"The ID of the token being transferred","operator":"The address which initiated the transfer (i.e. msg.sender)","value":"The amount of tokens being transferred"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"uri(uint256)":{"details":"Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ccb1c03aa8a83de9863f55eb9116c99f15a288843871f810a8b5234341d3425364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xB1 0xC0 GASPRICE 0xA8 0xA8 RETURNDATASIZE 0xE9 DUP7 EXTCODEHASH SSTORE 0xEB SWAP2 AND 0xC9 SWAP16 ISZERO LOG2 DUP9 DUP5 CODESIZE PUSH18 0xF810A8B5234341D3425364736F6C63430008 EQ STOP CALLER ","sourceMap":"194:9169:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ccb1c03aa8a83de9863f55eb9116c99f15a288843871f810a8b5234341d3425364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xB1 0xC0 GASPRICE 0xA8 0xA8 RETURNDATASIZE 0xE9 DUP7 EXTCODEHASH SSTORE 0xEB SWAP2 AND 0xC9 SWAP16 ISZERO LOG2 DUP9 DUP5 CODESIZE PUSH18 0xF810A8B5234341D3425364736F6C63430008 EQ STOP CALLER ","sourceMap":"194:9169:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Create2.sol":{"Create2":{"abi":[],"devdoc":{"details":"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204a5969780e42d652b9eddc237463d9ce5beced2cc392208e467336ca2918eeab64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A MSIZE PUSH10 0x780E42D652B9EDDC2374 PUSH4 0xD9CE5BEC 0xED 0x2C 0xC3 SWAP3 KECCAK256 DUP15 CHAINID PUSH20 0x36CA2918EEAB64736F6C63430008140033000000 ","sourceMap":"494:3457:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;494:3457:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204a5969780e42d652b9eddc237463d9ce5beced2cc392208e467336ca2918eeab64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A MSIZE PUSH10 0x780E42D652B9EDDC2374 PUSH4 0xD9CE5BEC 0xED 0x2C 0xC3 SWAP3 KECCAK256 DUP15 CHAINID PUSH20 0x36CA2918EEAB64736F6C63430008140033000000 ","sourceMap":"494:3457:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"computeAddress(bytes32,bytes32)":"infinite","computeAddress(bytes32,bytes32,address)":"infinite","deploy(uint256,bytes32,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Create2.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\\n * `CREATE2` can be used to compute in advance the address where a smart\\n * contract will be deployed, which allows for interesting new mechanisms known\\n * as 'counterfactual interactions'.\\n *\\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\\n * information.\\n */\\nlibrary Create2 {\\n    /**\\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\\n     * will be deployed can be known in advance via {computeAddress}.\\n     *\\n     * The bytecode for a contract can be obtained from Solidity with\\n     * `type(contractName).creationCode`.\\n     *\\n     * Requirements:\\n     *\\n     * - `bytecode` must not be empty.\\n     * - `salt` must have not been used for `bytecode` already.\\n     * - the factory must have a balance of at least `amount`.\\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\\n     */\\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\\n        require(address(this).balance >= amount, \\\"Create2: insufficient balance\\\");\\n        require(bytecode.length != 0, \\\"Create2: bytecode length is zero\\\");\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\\n        }\\n        require(addr != address(0), \\\"Create2: Failed on deploy\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\\n     * `bytecodeHash` or `salt` will result in a new destination address.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\\n        return computeAddress(salt, bytecodeHash, address(this));\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40) // Get free memory pointer\\n\\n            // |                   | \\u2193 ptr ...  \\u2193 ptr + 0x0B (start) ...  \\u2193 ptr + 0x20 ...  \\u2193 ptr + 0x40 ...   |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\\n            // | 0xFF              |            FF                                                             |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\\n            // | keccak(start, 85) |            \\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191 |\\n\\n            mstore(add(ptr, 0x40), bytecodeHash)\\n            mstore(add(ptr, 0x20), salt)\\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\\n            mstore8(start, 0xff)\\n            addr := keccak256(start, 85)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AuctionEstate.sol":{"AuctionEstate":{"abi":[{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"uint256","name":"_evaluation","type":"uint256"},{"internalType":"uint256","name":"_timestamp","type":"uint256"},{"internalType":"address payable","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimPrize","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"declareWinner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllBidders","outputs":[{"internalType":"address payable[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAuctionDetails","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address payable","name":"","type":"address"},{"internalType":"address payable","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"bidder","type":"address"}],"name":"getBidDetails","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"bid","type":"uint256"}],"name":"placeBid","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawMyFunds","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_157":{"entryPoint":null,"id":157,"parameterSlots":1,"returnSlots":0},"@_2045":{"entryPoint":null,"id":2045,"parameterSlots":4,"returnSlots":0},"@_setURI_668":{"entryPoint":136,"id":668,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_uint256t_uint256t_uint256t_address_payable_fromMemory":{"entryPoint":154,"id":null,"parameterSlots":2,"returnSlots":4},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":317,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":400,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":257,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":235,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3219:13","statements":[{"nodeType":"YulBlock","src":"6:3:13","statements":[]},{"body":{"nodeType":"YulBlock","src":"154:342:13","statements":[{"body":{"nodeType":"YulBlock","src":"201:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"210:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"213:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"203:6:13"},"nodeType":"YulFunctionCall","src":"203:12:13"},"nodeType":"YulExpressionStatement","src":"203:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"175:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"184:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"171:3:13"},"nodeType":"YulFunctionCall","src":"171:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"196:3:13","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"167:3:13"},"nodeType":"YulFunctionCall","src":"167:33:13"},"nodeType":"YulIf","src":"164:53:13"},{"nodeType":"YulAssignment","src":"226:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"242:9:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"236:5:13"},"nodeType":"YulFunctionCall","src":"236:16:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"226:6:13"}]},{"nodeType":"YulAssignment","src":"261:35:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"281:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"292:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"277:3:13"},"nodeType":"YulFunctionCall","src":"277:18:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"271:5:13"},"nodeType":"YulFunctionCall","src":"271:25:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"261:6:13"}]},{"nodeType":"YulAssignment","src":"305:35:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"325:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"336:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"321:3:13"},"nodeType":"YulFunctionCall","src":"321:18:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"315:5:13"},"nodeType":"YulFunctionCall","src":"315:25:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"305:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"349:38:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"372:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"383:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"368:3:13"},"nodeType":"YulFunctionCall","src":"368:18:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"362:5:13"},"nodeType":"YulFunctionCall","src":"362:25:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"353:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"450:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"459:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"462:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"452:6:13"},"nodeType":"YulFunctionCall","src":"452:12:13"},"nodeType":"YulExpressionStatement","src":"452:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"409:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"420:5:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"435:3:13","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"440:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"431:3:13"},"nodeType":"YulFunctionCall","src":"431:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"444:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"427:3:13"},"nodeType":"YulFunctionCall","src":"427:19:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"416:3:13"},"nodeType":"YulFunctionCall","src":"416:31:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"406:2:13"},"nodeType":"YulFunctionCall","src":"406:42:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"399:6:13"},"nodeType":"YulFunctionCall","src":"399:50:13"},"nodeType":"YulIf","src":"396:70:13"},{"nodeType":"YulAssignment","src":"475:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"485:5:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"475:6:13"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"96:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"107:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"119:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"127:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"135:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"143:6:13","type":""}],"src":"14:482:13"},{"body":{"nodeType":"YulBlock","src":"533:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"550:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"557:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"562:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"553:3:13"},"nodeType":"YulFunctionCall","src":"553:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"543:6:13"},"nodeType":"YulFunctionCall","src":"543:31:13"},"nodeType":"YulExpressionStatement","src":"543:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"590:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"593:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"583:6:13"},"nodeType":"YulFunctionCall","src":"583:15:13"},"nodeType":"YulExpressionStatement","src":"583:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"614:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"617:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"607:6:13"},"nodeType":"YulFunctionCall","src":"607:15:13"},"nodeType":"YulExpressionStatement","src":"607:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"501:127:13"},{"body":{"nodeType":"YulBlock","src":"688:325:13","statements":[{"nodeType":"YulAssignment","src":"698:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"712:1:13","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"715:4:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"708:3:13"},"nodeType":"YulFunctionCall","src":"708:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"698:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"729:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"759:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"765:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"755:3:13"},"nodeType":"YulFunctionCall","src":"755:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"733:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"806:31:13","statements":[{"nodeType":"YulAssignment","src":"808:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"822:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"830:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"818:3:13"},"nodeType":"YulFunctionCall","src":"818:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"808:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"786:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"779:6:13"},"nodeType":"YulFunctionCall","src":"779:26:13"},"nodeType":"YulIf","src":"776:61:13"},{"body":{"nodeType":"YulBlock","src":"896:111:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"917:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"924:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"929:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"920:3:13"},"nodeType":"YulFunctionCall","src":"920:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"910:6:13"},"nodeType":"YulFunctionCall","src":"910:31:13"},"nodeType":"YulExpressionStatement","src":"910:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"961:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"964:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"954:6:13"},"nodeType":"YulFunctionCall","src":"954:15:13"},"nodeType":"YulExpressionStatement","src":"954:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"989:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"992:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"982:6:13"},"nodeType":"YulFunctionCall","src":"982:15:13"},"nodeType":"YulExpressionStatement","src":"982:15:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"852:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"875:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"883:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"872:2:13"},"nodeType":"YulFunctionCall","src":"872:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"849:2:13"},"nodeType":"YulFunctionCall","src":"849:38:13"},"nodeType":"YulIf","src":"846:161:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"668:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"677:6:13","type":""}],"src":"633:380:13"},{"body":{"nodeType":"YulBlock","src":"1074:65:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1091:1:13","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1094:3:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1084:6:13"},"nodeType":"YulFunctionCall","src":"1084:14:13"},"nodeType":"YulExpressionStatement","src":"1084:14:13"},{"nodeType":"YulAssignment","src":"1107:26:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1125:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1128:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1115:9:13"},"nodeType":"YulFunctionCall","src":"1115:18:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1107:4:13"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1057:3:13","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1065:4:13","type":""}],"src":"1018:121:13"},{"body":{"nodeType":"YulBlock","src":"1225:464:13","statements":[{"body":{"nodeType":"YulBlock","src":"1258:425:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1272:11:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1282:1:13","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1276:2:13","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1303:2:13"},{"name":"array","nodeType":"YulIdentifier","src":"1307:5:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1296:6:13"},"nodeType":"YulFunctionCall","src":"1296:17:13"},"nodeType":"YulExpressionStatement","src":"1296:17:13"},{"nodeType":"YulVariableDeclaration","src":"1326:31:13","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1348:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"1352:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1338:9:13"},"nodeType":"YulFunctionCall","src":"1338:19:13"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"1330:4:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1370:57:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1393:4:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1403:1:13","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1410:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"1422:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1406:3:13"},"nodeType":"YulFunctionCall","src":"1406:19:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1399:3:13"},"nodeType":"YulFunctionCall","src":"1399:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1389:3:13"},"nodeType":"YulFunctionCall","src":"1389:38:13"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"1374:11:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1464:23:13","statements":[{"nodeType":"YulAssignment","src":"1466:19:13","value":{"name":"data","nodeType":"YulIdentifier","src":"1481:4:13"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"1466:11:13"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1446:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"1458:4:13","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1443:2:13"},"nodeType":"YulFunctionCall","src":"1443:20:13"},"nodeType":"YulIf","src":"1440:47:13"},{"nodeType":"YulVariableDeclaration","src":"1500:41:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1514:4:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1524:1:13","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1531:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1536:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1527:3:13"},"nodeType":"YulFunctionCall","src":"1527:12:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1520:3:13"},"nodeType":"YulFunctionCall","src":"1520:20:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1510:3:13"},"nodeType":"YulFunctionCall","src":"1510:31:13"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1504:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1554:24:13","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1567:11:13"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1558:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1652:21:13","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1661:5:13"},{"name":"_1","nodeType":"YulIdentifier","src":"1668:2:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1654:6:13"},"nodeType":"YulFunctionCall","src":"1654:17:13"},"nodeType":"YulExpressionStatement","src":"1654:17:13"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1602:5:13"},{"name":"_2","nodeType":"YulIdentifier","src":"1609:2:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1599:2:13"},"nodeType":"YulFunctionCall","src":"1599:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1613:26:13","statements":[{"nodeType":"YulAssignment","src":"1615:22:13","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1628:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1635:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1624:3:13"},"nodeType":"YulFunctionCall","src":"1624:13:13"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1615:5:13"}]}]},"pre":{"nodeType":"YulBlock","src":"1595:3:13","statements":[]},"src":"1591:82:13"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1241:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1246:2:13","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1238:2:13"},"nodeType":"YulFunctionCall","src":"1238:11:13"},"nodeType":"YulIf","src":"1235:448:13"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"1197:5:13","type":""},{"name":"len","nodeType":"YulTypedName","src":"1204:3:13","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"1209:10:13","type":""}],"src":"1144:545:13"},{"body":{"nodeType":"YulBlock","src":"1779:81:13","statements":[{"nodeType":"YulAssignment","src":"1789:65:13","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1804:4:13"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1822:1:13","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1825:3:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1818:3:13"},"nodeType":"YulFunctionCall","src":"1818:11:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1835:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1831:3:13"},"nodeType":"YulFunctionCall","src":"1831:6:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1814:3:13"},"nodeType":"YulFunctionCall","src":"1814:24:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1810:3:13"},"nodeType":"YulFunctionCall","src":"1810:29:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1800:3:13"},"nodeType":"YulFunctionCall","src":"1800:40:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1846:1:13","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1849:3:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1842:3:13"},"nodeType":"YulFunctionCall","src":"1842:11:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1797:2:13"},"nodeType":"YulFunctionCall","src":"1797:57:13"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1789:4:13"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1756:4:13","type":""},{"name":"len","nodeType":"YulTypedName","src":"1762:3:13","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1770:4:13","type":""}],"src":"1694:166:13"},{"body":{"nodeType":"YulBlock","src":"1961:1256:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1971:24:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1991:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1985:5:13"},"nodeType":"YulFunctionCall","src":"1985:10:13"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1975:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2038:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2040:16:13"},"nodeType":"YulFunctionCall","src":"2040:18:13"},"nodeType":"YulExpressionStatement","src":"2040:18:13"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2010:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2026:2:13","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2030:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2022:3:13"},"nodeType":"YulFunctionCall","src":"2022:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"2034:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2018:3:13"},"nodeType":"YulFunctionCall","src":"2018:18:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2007:2:13"},"nodeType":"YulFunctionCall","src":"2007:30:13"},"nodeType":"YulIf","src":"2004:56:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2113:4:13"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:13"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:13"},"nodeType":"YulFunctionCall","src":"2145:11:13"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"2119:25:13"},"nodeType":"YulFunctionCall","src":"2119:38:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"2159:6:13"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2069:43:13"},"nodeType":"YulFunctionCall","src":"2069:97:13"},"nodeType":"YulExpressionStatement","src":"2069:97:13"},{"nodeType":"YulVariableDeclaration","src":"2175:18:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2192:1:13","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"2179:9:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2202:23:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2221:4:13","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"2206:11:13","type":""}]},{"nodeType":"YulAssignment","src":"2234:24:13","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2247:11:13"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2234:9:13"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2304:656:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2318:35:13","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2337:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2349:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2345:3:13"},"nodeType":"YulFunctionCall","src":"2345:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2333:3:13"},"nodeType":"YulFunctionCall","src":"2333:20:13"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"2322:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2366:49:13","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2410:4:13"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"2380:29:13"},"nodeType":"YulFunctionCall","src":"2380:35:13"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"2370:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2428:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2437:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2432:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2515:172:13","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2540:6:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2558:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2563:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2554:3:13"},"nodeType":"YulFunctionCall","src":"2554:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2548:5:13"},"nodeType":"YulFunctionCall","src":"2548:26:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2533:6:13"},"nodeType":"YulFunctionCall","src":"2533:42:13"},"nodeType":"YulExpressionStatement","src":"2533:42:13"},{"nodeType":"YulAssignment","src":"2592:24:13","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2606:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2614:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2602:3:13"},"nodeType":"YulFunctionCall","src":"2602:14:13"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2592:6:13"}]},{"nodeType":"YulAssignment","src":"2633:40:13","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2650:9:13"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2661:11:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2646:3:13"},"nodeType":"YulFunctionCall","src":"2646:27:13"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2633:9:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2462:1:13"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"2465:7:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2459:2:13"},"nodeType":"YulFunctionCall","src":"2459:14:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2474:28:13","statements":[{"nodeType":"YulAssignment","src":"2476:24:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2485:1:13"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2488:11:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2481:3:13"},"nodeType":"YulFunctionCall","src":"2481:19:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2476:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"2455:3:13","statements":[]},"src":"2451:236:13"},{"body":{"nodeType":"YulBlock","src":"2735:166:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2753:43:13","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2780:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2785:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2776:3:13"},"nodeType":"YulFunctionCall","src":"2776:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2770:5:13"},"nodeType":"YulFunctionCall","src":"2770:26:13"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2757:9:13","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2820:6:13"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2832:9:13"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2859:1:13","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2862:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2855:3:13"},"nodeType":"YulFunctionCall","src":"2855:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"2871:3:13","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2851:3:13"},"nodeType":"YulFunctionCall","src":"2851:24:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2881:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2877:3:13"},"nodeType":"YulFunctionCall","src":"2877:6:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2847:3:13"},"nodeType":"YulFunctionCall","src":"2847:37:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2843:3:13"},"nodeType":"YulFunctionCall","src":"2843:42:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2828:3:13"},"nodeType":"YulFunctionCall","src":"2828:58:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2813:6:13"},"nodeType":"YulFunctionCall","src":"2813:74:13"},"nodeType":"YulExpressionStatement","src":"2813:74:13"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2706:7:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"2715:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2703:2:13"},"nodeType":"YulFunctionCall","src":"2703:19:13"},"nodeType":"YulIf","src":"2700:201:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2921:4:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2935:1:13","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2938:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2931:3:13"},"nodeType":"YulFunctionCall","src":"2931:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"2947:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2927:3:13"},"nodeType":"YulFunctionCall","src":"2927:22:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2914:6:13"},"nodeType":"YulFunctionCall","src":"2914:36:13"},"nodeType":"YulExpressionStatement","src":"2914:36:13"}]},"nodeType":"YulCase","src":"2297:663:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2302:1:13","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2977:234:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2991:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3004:1:13","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2995:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3040:67:13","statements":[{"nodeType":"YulAssignment","src":"3058:35:13","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3077:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3082:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3073:3:13"},"nodeType":"YulFunctionCall","src":"3073:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3067:5:13"},"nodeType":"YulFunctionCall","src":"3067:26:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3058:5:13"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3021:6:13"},"nodeType":"YulIf","src":"3018:89:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3127:4:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3186:5:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"3193:6:13"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"3133:52:13"},"nodeType":"YulFunctionCall","src":"3133:67:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3120:6:13"},"nodeType":"YulFunctionCall","src":"3120:81:13"},"nodeType":"YulExpressionStatement","src":"3120:81:13"}]},"nodeType":"YulCase","src":"2969:242:13","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2277:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2285:2:13","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2274:2:13"},"nodeType":"YulFunctionCall","src":"2274:14:13"},"nodeType":"YulSwitch","src":"2267:944:13"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1946:4:13","type":""},{"name":"src","nodeType":"YulTypedName","src":"1952:3:13","type":""}],"src":"1865:1352:13"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_address_payable_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        let value := mload(add(headStart, 96))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value3 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001c3c38038062001c3c83398101604081905262000034916200009a565b6040805160208101909152600081526200004e8162000088565b506003939093556004919091556007556000600555600880546001600160a01b0319166001600160a01b039092169190911790556200025c565b600262000096828262000190565b5050565b60008060008060808587031215620000b157600080fd5b845160208601516040870151606088015192965090945092506001600160a01b0381168114620000e057600080fd5b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011657607f821691505b6020821081036200013757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018b57600081815260208120601f850160051c81016020861015620001665750805b601f850160051c820191505b81811015620001875782815560010162000172565b5050505b505050565b81516001600160401b03811115620001ac57620001ac620000eb565b620001c481620001bd845462000101565b846200013d565b602080601f831160018114620001fc5760008415620001e35750858301515b600019600386901b1c1916600185901b17855562000187565b600085815260208120601f198616915b828110156200022d578886015182559484019460019091019084016200020c565b50858210156200024c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6119d0806200026c6000396000f3fe6080604052600436106100fd5760003560e01c80634e1273f411610095578063a22cb46511610064578063a22cb465146102dc578063bc197c81146102fc578063e985e9c514610341578063f23a6e611461038a578063f242432a146103b657600080fd5b80634e1273f41461025e57806370740ac91461028b5780638d07ae9f146102935780639979ef45146102c957600080fd5b80632eb2c2d6116100d15780632eb2c2d6146101ba5780633a6dcea2146101dc5780633a79d2e5146102345780634935e7401461025657600080fd5b8062fdd58e1461010257806301ffc9a7146101355780630e89341c1461016557806314034bd214610192575b600080fd5b34801561010e57600080fd5b5061012261011d36600461124a565b6103d6565b6040519081526020015b60405180910390f35b34801561014157600080fd5b5061015561015036600461128c565b61046f565b604051901515815260200161012c565b34801561017157600080fd5b506101856101803660046112b0565b6104bf565b60405161012c919061130f565b34801561019e57600080fd5b506006546040516001600160a01b03909116815260200161012c565b3480156101c657600080fd5b506101da6101d536600461146e565b610553565b005b3480156101e857600080fd5b50600354600454600554600854600654600754604080519687526020870195909552938501929092526001600160a01b03908116606085015216608083015260a082015260c00161012c565b34801561024057600080fd5b506102496105e6565b60405161012c919061151c565b6101da610648565b34801561026a57600080fd5b5061027e610279366004611569565b610710565b60405161012c9190611671565b6101da61083a565b34801561029f57600080fd5b506101226102ae366004611684565b6001600160a01b03166000908152600a602052604090205490565b6101da6102d73660046112b0565b6108cf565b3480156102e857600080fd5b506101da6102f73660046116a1565b6109bc565b34801561030857600080fd5b5061032861031736600461146e565b63bc197c8160e01b95945050505050565b6040516001600160e01b0319909116815260200161012c565b34801561034d57600080fd5b5061015561035c3660046116df565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561039657600080fd5b506103286103a536600461170d565b63f23a6e6160e01b95945050505050565b3480156103c257600080fd5b506101da6103d136600461170d565b6109cb565b60006001600160a01b0383166104465760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806104a057506001600160e01b031982166303a24d0760e21b145b8061046957506301ffc9a760e01b6001600160e01b0319831614610469565b6060600280546104ce90611776565b80601f01602080910402602001604051908101604052809291908181526020018280546104fa90611776565b80156105475780601f1061051c57610100808354040283529160200191610547565b820191906000526020600020905b81548152906001019060200180831161052a57829003601f168201915b50505050509050919050565b6001600160a01b03851633148061056f575061056f853361035c565b6105d25760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526d195c881bdc88185c1c1c9bdd995960921b606482015260840161043d565b6105df8585858585610a57565b5050505050565b6060600980548060200260200160405190810160405280929190818152602001828054801561063e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610620575b5050505050905090565b6006546001600160a01b0316331461070e57336000908152600a6020526040812054908190036106ce5760405162461bcd60e51b815260206004820152602b60248201527f596f752068617665206e6f7420706c6163656420616e792062657420696e207460448201526a3434b99030bab1ba34b7b760a91b606482015260840161043d565b604051339082156108fc029083906000818181858888f193505050501580156106fb573d6000803e3d6000fd5b5050336000908152600a60205260408120555b565b606081518351146107755760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161043d565b6000835167ffffffffffffffff81111561079157610791611322565b6040519080825280602002602001820160405280156107ba578160200160208202803683370190505b50905060005b8451811015610832576108058582815181106107de576107de6117b0565b60200260200101518583815181106107f8576107f86117b0565b60200260200101516103d6565b828281518110610817576108176117b0565b602090810291909101015261082b816117dc565b90506107c0565b509392505050565b6006546001600160a01b0316330361070e576008546005546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610888573d6000803e3d6000fd5b506108bd30600660009054906101000a90046001600160a01b03166003546000604051806020016040528060008152506109cb565b336000908152600a6020526040812055565b60045481116109465760405162461bcd60e51b815260206004820152603e60248201527f42696420706c61636564206d75737420626520686967686572207468616e207460448201527f6865206576616c756174696f6e206f66207468652074696d657374616d700000606482015260840161043d565b336000818152600a602052604081208390556009805460018101825591527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b03191690911790556005548111156109b9576005819055600680546001600160a01b031916331790555b50565b6109c7338383610cb5565b5050565b6001600160a01b0385163314806109e757506109e7853361035c565b610a4a5760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526d195c881bdc88185c1c1c9bdd995960921b606482015260840161043d565b6105df8585858585610d95565b8151835114610ab95760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161043d565b6001600160a01b038416610b1d5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161043d565b3360005b8451811015610c47576000858281518110610b3e57610b3e6117b0565b602002602001015190506000858381518110610b5c57610b5c6117b0565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610bef5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161043d565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610c2c9084906117f5565b9250508190555050505080610c40906117dc565b9050610b21565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610c97929190611808565b60405180910390a4610cad818787878787610f40565b505050505050565b816001600160a01b0316836001600160a01b031603610d285760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161043d565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610df95760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161043d565b336000610e05856110ee565b90506000610e12856110ee565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610e985760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161043d565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610ed59084906117f5565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610f35848a8a8a8a8a611139565b505050505050505050565b6001600160a01b0384163b15610cad5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610f849089908990889088908890600401611836565b6020604051808303816000875af1925050508015610fbf575060408051601f3d908101601f19168201909252610fbc91810190611894565b60015b61107457610fcb6118b1565b806308c379a0036110045750610fdf6118cd565b80610fea5750611006565b8060405162461bcd60e51b815260040161043d919061130f565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840161043d565b6001600160e01b0319811663bc197c8160e01b146110e55760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161043d565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611128576111286117b0565b602090810291909101015292915050565b6001600160a01b0384163b15610cad5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061117d9089908990889088908890600401611957565b6020604051808303816000875af19250505080156111b8575060408051601f3d908101601f191682019092526111b591810190611894565b60015b6111c457610fcb6118b1565b6001600160e01b0319811663f23a6e6160e01b146110e55760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161043d565b6001600160a01b03811681146109b957600080fd5b6000806040838503121561125d57600080fd5b823561126881611235565b946020939093013593505050565b6001600160e01b0319811681146109b957600080fd5b60006020828403121561129e57600080fd5b81356112a981611276565b9392505050565b6000602082840312156112c257600080fd5b5035919050565b6000815180845260005b818110156112ef576020818501810151868301820152016112d3565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006112a960208301846112c9565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561135e5761135e611322565b6040525050565b600067ffffffffffffffff82111561137f5761137f611322565b5060051b60200190565b600082601f83011261139a57600080fd5b813560206113a782611365565b6040516113b48282611338565b83815260059390931b85018201928281019150868411156113d457600080fd5b8286015b848110156113ef57803583529183019183016113d8565b509695505050505050565b600082601f83011261140b57600080fd5b813567ffffffffffffffff81111561142557611425611322565b60405161143c601f8301601f191660200182611338565b81815284602083860101111561145157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561148657600080fd5b853561149181611235565b945060208601356114a181611235565b9350604086013567ffffffffffffffff808211156114be57600080fd5b6114ca89838a01611389565b945060608801359150808211156114e057600080fd5b6114ec89838a01611389565b9350608088013591508082111561150257600080fd5b5061150f888289016113fa565b9150509295509295909350565b6020808252825182820181905260009190848201906040850190845b8181101561155d5783516001600160a01b031683529284019291840191600101611538565b50909695505050505050565b6000806040838503121561157c57600080fd5b823567ffffffffffffffff8082111561159457600080fd5b818501915085601f8301126115a857600080fd5b813560206115b582611365565b6040516115c28282611338565b83815260059390931b85018201928281019150898411156115e257600080fd5b948201945b838610156116095785356115fa81611235565b825294820194908201906115e7565b9650508601359250508082111561161f57600080fd5b5061162c85828601611389565b9150509250929050565b600081518084526020808501945080840160005b838110156116665781518752958201959082019060010161164a565b509495945050505050565b6020815260006112a96020830184611636565b60006020828403121561169657600080fd5b81356112a981611235565b600080604083850312156116b457600080fd5b82356116bf81611235565b9150602083013580151581146116d457600080fd5b809150509250929050565b600080604083850312156116f257600080fd5b82356116fd81611235565b915060208301356116d481611235565b600080600080600060a0868803121561172557600080fd5b853561173081611235565b9450602086013561174081611235565b93506040860135925060608601359150608086013567ffffffffffffffff81111561176a57600080fd5b61150f888289016113fa565b600181811c9082168061178a57607f821691505b6020821081036117aa57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016117ee576117ee6117c6565b5060010190565b80820180821115610469576104696117c6565b60408152600061181b6040830185611636565b828103602084015261182d8185611636565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261186260a0830186611636565b82810360608401526118748186611636565b9050828103608084015261188881856112c9565b98975050505050505050565b6000602082840312156118a657600080fd5b81516112a981611276565b600060033d11156118ca5760046000803e5060005160e01c5b90565b600060443d10156118db5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561190b57505050505090565b82850191508151818111156119235750505050505090565b843d870101602082850101111561193d5750505050505090565b61194c60208286010187611338565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261198f60a08301846112c9565b97965050505050505056fea2646970667358221220eedcf8da619a40247d35b57c20562f5cdcca4d1d031e533b6d35e929b0aa3b5564736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1C3C CODESIZE SUB DUP1 PUSH3 0x1C3C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x9A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH3 0x4E DUP2 PUSH3 0x88 JUMP JUMPDEST POP PUSH1 0x3 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x25C JUMP JUMPDEST PUSH1 0x2 PUSH3 0x96 DUP3 DUP3 PUSH3 0x190 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD SWAP3 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x116 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x137 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x18B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x166 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x187 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x172 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AC PUSH3 0xEB JUMP JUMPDEST PUSH3 0x1C4 DUP2 PUSH3 0x1BD DUP5 SLOAD PUSH3 0x101 JUMP JUMPDEST DUP5 PUSH3 0x13D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1FC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x1E3 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x187 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x22D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x20C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x24C JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x19D0 DUP1 PUSH3 0x26C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x70740AC9 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x8D07AE9F EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x9979EF45 EQ PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x3A6DCEA2 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x3A79D2E5 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x4935E740 EQ PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x14034BD2 EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x124A JUMP JUMPDEST PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x128C JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x146E JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x648 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x83A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x8CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A1 JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x146E JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x35C CALLDATASIZE PUSH1 0x4 PUSH2 0x16DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x170D JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x446 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x4A0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x469 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x469 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x4CE SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FA SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x547 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x547 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x56F JUMPI POP PUSH2 0x56F DUP6 CALLER PUSH2 0x35C JUMP JUMPDEST PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH2 0x5DF DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA57 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x63E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x620 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x70E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F7420706C6163656420616E792062657420696E2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3434B99030BAB1BA34B7B7 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x791 JUMPI PUSH2 0x791 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7BA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x832 JUMPI PUSH2 0x805 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7DE JUMPI PUSH2 0x7DE PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7F8 JUMPI PUSH2 0x7F8 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3D6 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x817 JUMPI PUSH2 0x817 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x82B DUP2 PUSH2 0x17DC JUMP JUMPDEST SWAP1 POP PUSH2 0x7C0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x70E JUMPI PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x888 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x8BD ADDRESS PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 SLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9CB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 GT PUSH2 0x946 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42696420706C61636564206D75737420626520686967686572207468616E2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6865206576616C756174696F6E206F66207468652074696D657374616D700000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 SLOAD DUP2 GT ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH2 0x9C7 CALLER DUP4 DUP4 PUSH2 0xCB5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x9E7 JUMPI POP PUSH2 0x9E7 DUP6 CALLER PUSH2 0x35C JUMP JUMPDEST PUSH2 0xA4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH2 0x5DF DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD95 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xC47 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB3E JUMPI PUSH2 0xB3E PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB5C JUMPI PUSH2 0xB5C PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xC2C SWAP1 DUP5 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xC40 SWAP1 PUSH2 0x17DC JUMP JUMPDEST SWAP1 POP PUSH2 0xB21 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xC97 SWAP3 SWAP2 SWAP1 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xCAD DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF40 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xD28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xE05 DUP6 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE12 DUP6 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0xE98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xED5 SWAP1 DUP5 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF35 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1139 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xF84 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1836 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFBF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xFBC SWAP2 DUP2 ADD SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1074 JUMPI PUSH2 0xFCB PUSH2 0x18B1 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1004 JUMPI POP PUSH2 0xFDF PUSH2 0x18CD JUMP JUMPDEST DUP1 PUSH2 0xFEA JUMPI POP PUSH2 0x1006 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x10E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1128 JUMPI PUSH2 0x1128 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x117D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11B8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11B5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11C4 JUMPI PUSH2 0xFCB PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x10E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x125D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1268 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12A9 DUP2 PUSH2 0x1276 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12EF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x12D3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12C9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x135E JUMPI PUSH2 0x135E PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x137F JUMPI PUSH2 0x137F PUSH2 0x1322 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x139A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x13A7 DUP3 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B4 DUP3 DUP3 PUSH2 0x1338 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x13D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x13EF JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x13D8 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x140B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1425 JUMPI PUSH2 0x1425 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143C PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1338 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1491 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x14A1 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x14BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14CA DUP10 DUP4 DUP11 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x14E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14EC DUP10 DUP4 DUP11 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150F DUP9 DUP3 DUP10 ADD PUSH2 0x13FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x155D JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1538 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x157C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x15B5 DUP3 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C2 DUP3 DUP3 PUSH2 0x1338 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x15E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1609 JUMPI DUP6 CALLDATALOAD PUSH2 0x15FA DUP2 PUSH2 0x1235 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x161F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162C DUP6 DUP3 DUP7 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1666 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x164A JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12A9 DUP2 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x16BF DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x16D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x16FD DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x16D4 DUP2 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1730 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1740 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x176A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x150F DUP9 DUP3 DUP10 ADD PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x178A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x17EE JUMPI PUSH2 0x17EE PUSH2 0x17C6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x469 JUMPI PUSH2 0x469 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x181B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1636 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x182D DUP2 DUP6 PUSH2 0x1636 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1862 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1636 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1874 DUP2 DUP7 PUSH2 0x1636 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1888 DUP2 DUP6 PUSH2 0x12C9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x12A9 DUP2 PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x18CA JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x18DB JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x190B JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1923 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x193D JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x194C PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1338 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x198F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x12C9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0xDC 0xF8 0xDA PUSH2 0x9A40 0x24 PUSH30 0x35B57C20562F5CDCCA4D1D031E533B6D35E929B0AA3B5564736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"298:3196:10:-:0;;;684:267;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1107:62:1;;;;;;;;;-1:-1:-1;1107:62:1;;1149:13;1107:62;1149:7;:13::i;:::-;-1:-1:-1;800:8:10::1;:14:::0;;;;825:16:::1;:30:::0;;;;866:9:::1;:22:::0;-1:-1:-1;899:10:10::1;:14:::0;924:11:::1;:19:::0;;-1:-1:-1;;;;;;924:19:10::1;-1:-1:-1::0;;;;;924:19:10;;::::1;::::0;;;::::1;::::0;;298:3196;;8149:86:1;8215:4;:13;8222:6;8215:4;:13;:::i;:::-;;8149:86;:::o;14:482:13:-;119:6;127;135;143;196:3;184:9;175:7;171:23;167:33;164:53;;;213:1;210;203:12;164:53;236:16;;292:2;277:18;;271:25;336:2;321:18;;315:25;383:2;368:18;;362:25;236:16;;-1:-1:-1;271:25:13;;-1:-1:-1;315:25:13;-1:-1:-1;;;;;;416:31:13;;406:42;;396:70;;462:1;459;452:12;396:70;14:482;;;;-1:-1:-1;14:482:13;;-1:-1:-1;;14:482:13:o;501:127::-;562:10;557:3;553:20;550:1;543:31;593:4;590:1;583:15;617:4;614:1;607:15;633:380;712:1;708:12;;;;755;;;776:61;;830:4;822:6;818:17;808:27;;776:61;883:2;875:6;872:14;852:18;849:38;846:161;;929:10;924:3;920:20;917:1;910:31;964:4;961:1;954:15;992:4;989:1;982:15;846:161;;633:380;;;:::o;1144:545::-;1246:2;1241:3;1238:11;1235:448;;;1282:1;1307:5;1303:2;1296:17;1352:4;1348:2;1338:19;1422:2;1410:10;1406:19;1403:1;1399:27;1393:4;1389:38;1458:4;1446:10;1443:20;1440:47;;;-1:-1:-1;1481:4:13;1440:47;1536:2;1531:3;1527:12;1524:1;1520:20;1514:4;1510:31;1500:41;;1591:82;1609:2;1602:5;1599:13;1591:82;;;1654:17;;;1635:1;1624:13;1591:82;;;1595:3;;;1235:448;1144:545;;;:::o;1865:1352::-;1985:10;;-1:-1:-1;;;;;2007:30:13;;2004:56;;;2040:18;;:::i;:::-;2069:97;2159:6;2119:38;2151:4;2145:11;2119:38;:::i;:::-;2113:4;2069:97;:::i;:::-;2221:4;;2285:2;2274:14;;2302:1;2297:663;;;;3004:1;3021:6;3018:89;;;-1:-1:-1;3073:19:13;;;3067:26;3018:89;-1:-1:-1;;1822:1:13;1818:11;;;1814:24;1810:29;1800:40;1846:1;1842:11;;;1797:57;3120:81;;2267:944;;2297:663;1091:1;1084:14;;;1128:4;1115:18;;-1:-1:-1;;2333:20:13;;;2451:236;2465:7;2462:1;2459:14;2451:236;;;2554:19;;;2548:26;2533:42;;2646:27;;;;2614:1;2602:14;;;;2481:19;;2451:236;;;2455:3;2715:6;2706:7;2703:19;2700:201;;;2776:19;;;2770:26;-1:-1:-1;;2859:1:13;2855:14;;;2871:3;2851:24;2847:37;2843:42;2828:58;2813:74;;2700:201;-1:-1:-1;;;;;2947:1:13;2931:14;;;2927:22;2914:36;;-1:-1:-1;1865:1352:13:o;:::-;298:3196:10;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1178":{"entryPoint":null,"id":1178,"parameterSlots":6,"returnSlots":0},"@_asSingletonArray_1334":{"entryPoint":4334,"id":1334,"parameterSlots":1,"returnSlots":1},"@_beforeTokenTransfer_1159":{"entryPoint":null,"id":1159,"parameterSlots":6,"returnSlots":0},"@_doSafeBatchTransferAcceptanceCheck_1306":{"entryPoint":3904,"id":1306,"parameterSlots":6,"returnSlots":0},"@_doSafeTransferAcceptanceCheck_1241":{"entryPoint":4409,"id":1241,"parameterSlots":6,"returnSlots":0},"@_msgSender_1855":{"entryPoint":null,"id":1855,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_657":{"entryPoint":2647,"id":657,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_522":{"entryPoint":3477,"id":522,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1140":{"entryPoint":3253,"id":1140,"parameterSlots":3,"returnSlots":0},"@balanceOfBatch_292":{"entryPoint":1808,"id":292,"parameterSlots":2,"returnSlots":1},"@balanceOf_228":{"entryPoint":982,"id":228,"parameterSlots":2,"returnSlots":1},"@claimPrize_2247":{"entryPoint":2106,"id":2247,"parameterSlots":0,"returnSlots":0},"@declareWinner_2152":{"entryPoint":null,"id":2152,"parameterSlots":0,"returnSlots":1},"@getAllBidders_2078":{"entryPoint":1510,"id":2078,"parameterSlots":0,"returnSlots":1},"@getAuctionDetails_2069":{"entryPoint":null,"id":2069,"parameterSlots":0,"returnSlots":6},"@getBidDetails_2091":{"entryPoint":null,"id":2091,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_327":{"entryPoint":null,"id":327,"parameterSlots":2,"returnSlots":1},"@isContract_1531":{"entryPoint":null,"id":1531,"parameterSlots":1,"returnSlots":1},"@onERC1155BatchReceived_2289":{"entryPoint":null,"id":2289,"parameterSlots":5,"returnSlots":1},"@onERC1155Received_2267":{"entryPoint":null,"id":2267,"parameterSlots":5,"returnSlots":1},"@placeBid_2144":{"entryPoint":2255,"id":2144,"parameterSlots":1,"returnSlots":0},"@safeBatchTransferFrom_405":{"entryPoint":1363,"id":405,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_365":{"entryPoint":2507,"id":365,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_309":{"entryPoint":2492,"id":309,"parameterSlots":2,"returnSlots":0},"@supportsInterface_188":{"entryPoint":1135,"id":188,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1969":{"entryPoint":null,"id":1969,"parameterSlots":1,"returnSlots":1},"@uri_200":{"entryPoint":1215,"id":200,"parameterSlots":1,"returnSlots":1},"@withdrawMyFunds_2204":{"entryPoint":1608,"id":2204,"parameterSlots":0,"returnSlots":0},"abi_decode_array_uint256_dyn":{"entryPoint":5001,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":5114,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":5764,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5855,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":5230,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":5901,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":5793,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4682,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5481,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":4748,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":6292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4784,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":5686,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":4809,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6198,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6487,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_payable_$dyn_memory_ptr__to_t_array$_t_address_payable_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5404,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5745,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6152,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4879,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4446e7cad40a0f0bf90a99c8349fd6e70447f532f99bb8e8209f05d74b81f6bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c78a945367e2a6899352bb4d45dcf95cd13d085cfc3f1dc5c7d2b9759890d17a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_uint256_t_uint256_t_uint256_t_address_payable_t_address_payable_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":4965,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6133,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6006,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4920,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":6108,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6086,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6064,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4898,"id":null,"parameterSlots":0,"returnSlots":0},"return_data_selector":{"entryPoint":6321,"id":null,"parameterSlots":0,"returnSlots":1},"try_decode_error_message":{"entryPoint":6349,"id":null,"parameterSlots":0,"returnSlots":1},"validator_revert_address":{"entryPoint":4661,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":4726,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:19380:13","statements":[{"nodeType":"YulBlock","src":"6:3:13","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:109:13","statements":[{"body":{"nodeType":"YulBlock","src":"146:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"155:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"158:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"148:6:13"},"nodeType":"YulFunctionCall","src":"148:12:13"},"nodeType":"YulExpressionStatement","src":"148:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"100:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:13"},"nodeType":"YulFunctionCall","src":"89:54:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:13"},"nodeType":"YulFunctionCall","src":"79:65:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:13"},"nodeType":"YulFunctionCall","src":"72:73:13"},"nodeType":"YulIf","src":"69:93:13"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:13","type":""}],"src":"14:154:13"},{"body":{"nodeType":"YulBlock","src":"260:228:13","statements":[{"body":{"nodeType":"YulBlock","src":"306:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"315:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"318:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"308:6:13"},"nodeType":"YulFunctionCall","src":"308:12:13"},"nodeType":"YulExpressionStatement","src":"308:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"281:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"290:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"277:3:13"},"nodeType":"YulFunctionCall","src":"277:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"302:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"273:3:13"},"nodeType":"YulFunctionCall","src":"273:32:13"},"nodeType":"YulIf","src":"270:52:13"},{"nodeType":"YulVariableDeclaration","src":"331:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"357:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"344:12:13"},"nodeType":"YulFunctionCall","src":"344:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"335:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"401:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"376:24:13"},"nodeType":"YulFunctionCall","src":"376:31:13"},"nodeType":"YulExpressionStatement","src":"376:31:13"},{"nodeType":"YulAssignment","src":"416:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"426:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"416:6:13"}]},{"nodeType":"YulAssignment","src":"440:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"467:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"463:3:13"},"nodeType":"YulFunctionCall","src":"463:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"450:12:13"},"nodeType":"YulFunctionCall","src":"450:32:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"440:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"218:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"229:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"241:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"249:6:13","type":""}],"src":"173:315:13"},{"body":{"nodeType":"YulBlock","src":"594:76:13","statements":[{"nodeType":"YulAssignment","src":"604:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"616:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"627:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"612:3:13"},"nodeType":"YulFunctionCall","src":"612:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"604:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"646:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"657:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"639:6:13"},"nodeType":"YulFunctionCall","src":"639:25:13"},"nodeType":"YulExpressionStatement","src":"639:25:13"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"563:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"574:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"585:4:13","type":""}],"src":"493:177:13"},{"body":{"nodeType":"YulBlock","src":"719:87:13","statements":[{"body":{"nodeType":"YulBlock","src":"784:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"793:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"796:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"786:6:13"},"nodeType":"YulFunctionCall","src":"786:12:13"},"nodeType":"YulExpressionStatement","src":"786:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"742:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"753:5:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"764:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"769:10:13","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"760:3:13"},"nodeType":"YulFunctionCall","src":"760:20:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"749:3:13"},"nodeType":"YulFunctionCall","src":"749:32:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"739:2:13"},"nodeType":"YulFunctionCall","src":"739:43:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"732:6:13"},"nodeType":"YulFunctionCall","src":"732:51:13"},"nodeType":"YulIf","src":"729:71:13"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"708:5:13","type":""}],"src":"675:131:13"},{"body":{"nodeType":"YulBlock","src":"880:176:13","statements":[{"body":{"nodeType":"YulBlock","src":"926:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"935:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"938:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"928:6:13"},"nodeType":"YulFunctionCall","src":"928:12:13"},"nodeType":"YulExpressionStatement","src":"928:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"901:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"910:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"897:3:13"},"nodeType":"YulFunctionCall","src":"897:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"922:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"893:3:13"},"nodeType":"YulFunctionCall","src":"893:32:13"},"nodeType":"YulIf","src":"890:52:13"},{"nodeType":"YulVariableDeclaration","src":"951:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"977:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"964:12:13"},"nodeType":"YulFunctionCall","src":"964:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"955:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1020:5:13"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"996:23:13"},"nodeType":"YulFunctionCall","src":"996:30:13"},"nodeType":"YulExpressionStatement","src":"996:30:13"},{"nodeType":"YulAssignment","src":"1035:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"1045:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1035:6:13"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"846:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"857:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"869:6:13","type":""}],"src":"811:245:13"},{"body":{"nodeType":"YulBlock","src":"1156:92:13","statements":[{"nodeType":"YulAssignment","src":"1166:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1178:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1189:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1174:3:13"},"nodeType":"YulFunctionCall","src":"1174:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1166:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1208:9:13"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1233:6:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1226:6:13"},"nodeType":"YulFunctionCall","src":"1226:14:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1219:6:13"},"nodeType":"YulFunctionCall","src":"1219:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1201:6:13"},"nodeType":"YulFunctionCall","src":"1201:41:13"},"nodeType":"YulExpressionStatement","src":"1201:41:13"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1125:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1136:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1147:4:13","type":""}],"src":"1061:187:13"},{"body":{"nodeType":"YulBlock","src":"1323:110:13","statements":[{"body":{"nodeType":"YulBlock","src":"1369:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1378:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1381:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1371:6:13"},"nodeType":"YulFunctionCall","src":"1371:12:13"},"nodeType":"YulExpressionStatement","src":"1371:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1344:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"1353:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1340:3:13"},"nodeType":"YulFunctionCall","src":"1340:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"1365:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1336:3:13"},"nodeType":"YulFunctionCall","src":"1336:32:13"},"nodeType":"YulIf","src":"1333:52:13"},{"nodeType":"YulAssignment","src":"1394:33:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1417:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1404:12:13"},"nodeType":"YulFunctionCall","src":"1404:23:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1394:6:13"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1289:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1300:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1312:6:13","type":""}],"src":"1253:180:13"},{"body":{"nodeType":"YulBlock","src":"1488:373:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1498:26:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1518:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1512:5:13"},"nodeType":"YulFunctionCall","src":"1512:12:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1502:6:13","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1540:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"1545:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1533:6:13"},"nodeType":"YulFunctionCall","src":"1533:19:13"},"nodeType":"YulExpressionStatement","src":"1533:19:13"},{"nodeType":"YulVariableDeclaration","src":"1561:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1570:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1565:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1632:110:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1646:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1656:4:13","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1650:2:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1688:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"1693:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1684:3:13"},"nodeType":"YulFunctionCall","src":"1684:11:13"},{"name":"_1","nodeType":"YulIdentifier","src":"1697:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1680:3:13"},"nodeType":"YulFunctionCall","src":"1680:20:13"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1716:5:13"},{"name":"i","nodeType":"YulIdentifier","src":"1723:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1712:3:13"},"nodeType":"YulFunctionCall","src":"1712:13:13"},{"name":"_1","nodeType":"YulIdentifier","src":"1727:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1708:3:13"},"nodeType":"YulFunctionCall","src":"1708:22:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1702:5:13"},"nodeType":"YulFunctionCall","src":"1702:29:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1673:6:13"},"nodeType":"YulFunctionCall","src":"1673:59:13"},"nodeType":"YulExpressionStatement","src":"1673:59:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1591:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"1594:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1588:2:13"},"nodeType":"YulFunctionCall","src":"1588:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1602:21:13","statements":[{"nodeType":"YulAssignment","src":"1604:17:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1613:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"1616:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1609:3:13"},"nodeType":"YulFunctionCall","src":"1609:12:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1604:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"1584:3:13","statements":[]},"src":"1580:162:13"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1766:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"1771:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1762:3:13"},"nodeType":"YulFunctionCall","src":"1762:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"1780:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1758:3:13"},"nodeType":"YulFunctionCall","src":"1758:27:13"},{"kind":"number","nodeType":"YulLiteral","src":"1787:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1751:6:13"},"nodeType":"YulFunctionCall","src":"1751:38:13"},"nodeType":"YulExpressionStatement","src":"1751:38:13"},{"nodeType":"YulAssignment","src":"1798:57:13","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1813:3:13"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1826:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1834:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1822:3:13"},"nodeType":"YulFunctionCall","src":"1822:15:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1843:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1839:3:13"},"nodeType":"YulFunctionCall","src":"1839:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1818:3:13"},"nodeType":"YulFunctionCall","src":"1818:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1809:3:13"},"nodeType":"YulFunctionCall","src":"1809:39:13"},{"kind":"number","nodeType":"YulLiteral","src":"1850:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1805:3:13"},"nodeType":"YulFunctionCall","src":"1805:50:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1798:3:13"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1465:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1472:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1480:3:13","type":""}],"src":"1438:423:13"},{"body":{"nodeType":"YulBlock","src":"1987:99:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2004:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2015:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1997:6:13"},"nodeType":"YulFunctionCall","src":"1997:21:13"},"nodeType":"YulExpressionStatement","src":"1997:21:13"},{"nodeType":"YulAssignment","src":"2027:53:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2053:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2065:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2076:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2061:3:13"},"nodeType":"YulFunctionCall","src":"2061:18:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2035:17:13"},"nodeType":"YulFunctionCall","src":"2035:45:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2027:4:13"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1956:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1967:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1978:4:13","type":""}],"src":"1866:220:13"},{"body":{"nodeType":"YulBlock","src":"2208:125:13","statements":[{"nodeType":"YulAssignment","src":"2218:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2230:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2241:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2226:3:13"},"nodeType":"YulFunctionCall","src":"2226:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2218:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2260:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2275:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2283:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2271:3:13"},"nodeType":"YulFunctionCall","src":"2271:55:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2253:6:13"},"nodeType":"YulFunctionCall","src":"2253:74:13"},"nodeType":"YulExpressionStatement","src":"2253:74:13"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2177:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2188:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2199:4:13","type":""}],"src":"2091:242:13"},{"body":{"nodeType":"YulBlock","src":"2370:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2387:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2399:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2390:3:13"},"nodeType":"YulFunctionCall","src":"2390:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2380:6:13"},"nodeType":"YulFunctionCall","src":"2380:31:13"},"nodeType":"YulExpressionStatement","src":"2380:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2427:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2430:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2420:6:13"},"nodeType":"YulFunctionCall","src":"2420:15:13"},"nodeType":"YulExpressionStatement","src":"2420:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2451:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2454:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2444:6:13"},"nodeType":"YulFunctionCall","src":"2444:15:13"},"nodeType":"YulExpressionStatement","src":"2444:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2338:127:13"},{"body":{"nodeType":"YulBlock","src":"2517:202:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2527:58:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2549:6:13"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2565:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"2571:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2561:3:13"},"nodeType":"YulFunctionCall","src":"2561:13:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2580:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2576:3:13"},"nodeType":"YulFunctionCall","src":"2576:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2557:3:13"},"nodeType":"YulFunctionCall","src":"2557:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2545:3:13"},"nodeType":"YulFunctionCall","src":"2545:40:13"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2531:10:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2660:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2662:16:13"},"nodeType":"YulFunctionCall","src":"2662:18:13"},"nodeType":"YulExpressionStatement","src":"2662:18:13"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2603:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"2615:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2600:2:13"},"nodeType":"YulFunctionCall","src":"2600:34:13"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2639:10:13"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2651:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2636:2:13"},"nodeType":"YulFunctionCall","src":"2636:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2597:2:13"},"nodeType":"YulFunctionCall","src":"2597:62:13"},"nodeType":"YulIf","src":"2594:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2698:2:13","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2702:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2691:6:13"},"nodeType":"YulFunctionCall","src":"2691:22:13"},"nodeType":"YulExpressionStatement","src":"2691:22:13"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2499:6:13","type":""},{"name":"size","nodeType":"YulTypedName","src":"2507:4:13","type":""}],"src":"2470:249:13"},{"body":{"nodeType":"YulBlock","src":"2793:114:13","statements":[{"body":{"nodeType":"YulBlock","src":"2837:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2839:16:13"},"nodeType":"YulFunctionCall","src":"2839:18:13"},"nodeType":"YulExpressionStatement","src":"2839:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2809:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2817:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2806:2:13"},"nodeType":"YulFunctionCall","src":"2806:30:13"},"nodeType":"YulIf","src":"2803:56:13"},{"nodeType":"YulAssignment","src":"2868:33:13","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2884:1:13","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2887:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2880:3:13"},"nodeType":"YulFunctionCall","src":"2880:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"2896:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2876:3:13"},"nodeType":"YulFunctionCall","src":"2876:25:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2868:4:13"}]}]},"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2773:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2784:4:13","type":""}],"src":"2724:183:13"},{"body":{"nodeType":"YulBlock","src":"2976:660:13","statements":[{"body":{"nodeType":"YulBlock","src":"3025:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3034:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3037:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3027:6:13"},"nodeType":"YulFunctionCall","src":"3027:12:13"},"nodeType":"YulExpressionStatement","src":"3027:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3004:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3012:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3000:3:13"},"nodeType":"YulFunctionCall","src":"3000:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"3019:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2996:3:13"},"nodeType":"YulFunctionCall","src":"2996:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2989:6:13"},"nodeType":"YulFunctionCall","src":"2989:35:13"},"nodeType":"YulIf","src":"2986:55:13"},{"nodeType":"YulVariableDeclaration","src":"3050:30:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3073:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3060:12:13"},"nodeType":"YulFunctionCall","src":"3060:20:13"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3054:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3089:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3099:4:13","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3093:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3112:53:13","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3162:2:13"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"3122:39:13"},"nodeType":"YulFunctionCall","src":"3122:43:13"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3116:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3174:23:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3194:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3188:5:13"},"nodeType":"YulFunctionCall","src":"3188:9:13"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3178:6:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3226:6:13"},{"name":"_3","nodeType":"YulIdentifier","src":"3234:2:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3206:19:13"},"nodeType":"YulFunctionCall","src":"3206:31:13"},"nodeType":"YulExpressionStatement","src":"3206:31:13"},{"nodeType":"YulVariableDeclaration","src":"3246:17:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3257:6:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3250:3:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3279:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"3287:2:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3272:6:13"},"nodeType":"YulFunctionCall","src":"3272:18:13"},"nodeType":"YulExpressionStatement","src":"3272:18:13"},{"nodeType":"YulAssignment","src":"3299:22:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3310:6:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3318:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3306:3:13"},"nodeType":"YulFunctionCall","src":"3306:15:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3299:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"3330:46:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3352:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3364:1:13","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"3367:2:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3360:3:13"},"nodeType":"YulFunctionCall","src":"3360:10:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3348:3:13"},"nodeType":"YulFunctionCall","src":"3348:23:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3373:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:13"},"nodeType":"YulFunctionCall","src":"3344:32:13"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3334:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3404:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3413:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3416:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3406:6:13"},"nodeType":"YulFunctionCall","src":"3406:12:13"},"nodeType":"YulExpressionStatement","src":"3406:12:13"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3391:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"3399:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3388:2:13"},"nodeType":"YulFunctionCall","src":"3388:15:13"},"nodeType":"YulIf","src":"3385:35:13"},{"nodeType":"YulVariableDeclaration","src":"3429:26:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3444:6:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3452:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3440:3:13"},"nodeType":"YulFunctionCall","src":"3440:15:13"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3433:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3520:86:13","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3541:3:13"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3559:3:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3546:12:13"},"nodeType":"YulFunctionCall","src":"3546:17:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3534:6:13"},"nodeType":"YulFunctionCall","src":"3534:30:13"},"nodeType":"YulExpressionStatement","src":"3534:30:13"},{"nodeType":"YulAssignment","src":"3577:19:13","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3588:3:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3593:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3584:3:13"},"nodeType":"YulFunctionCall","src":"3584:12:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3577:3:13"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3475:3:13"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3480:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3472:2:13"},"nodeType":"YulFunctionCall","src":"3472:15:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3488:23:13","statements":[{"nodeType":"YulAssignment","src":"3490:19:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3501:3:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3506:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3497:3:13"},"nodeType":"YulFunctionCall","src":"3497:12:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3490:3:13"}]}]},"pre":{"nodeType":"YulBlock","src":"3468:3:13","statements":[]},"src":"3464:142:13"},{"nodeType":"YulAssignment","src":"3615:15:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3624:6:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3615:5:13"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2950:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2958:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2966:5:13","type":""}],"src":"2912:724:13"},{"body":{"nodeType":"YulBlock","src":"3693:503:13","statements":[{"body":{"nodeType":"YulBlock","src":"3742:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3751:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3754:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3744:6:13"},"nodeType":"YulFunctionCall","src":"3744:12:13"},"nodeType":"YulExpressionStatement","src":"3744:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3721:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3729:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3717:3:13"},"nodeType":"YulFunctionCall","src":"3717:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"3736:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3713:3:13"},"nodeType":"YulFunctionCall","src":"3713:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3706:6:13"},"nodeType":"YulFunctionCall","src":"3706:35:13"},"nodeType":"YulIf","src":"3703:55:13"},{"nodeType":"YulVariableDeclaration","src":"3767:30:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3790:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3777:12:13"},"nodeType":"YulFunctionCall","src":"3777:20:13"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3771:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3836:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3838:16:13"},"nodeType":"YulFunctionCall","src":"3838:18:13"},"nodeType":"YulExpressionStatement","src":"3838:18:13"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3812:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"3816:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3809:2:13"},"nodeType":"YulFunctionCall","src":"3809:26:13"},"nodeType":"YulIf","src":"3806:52:13"},{"nodeType":"YulVariableDeclaration","src":"3867:23:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3887:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3881:5:13"},"nodeType":"YulFunctionCall","src":"3881:9:13"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3871:6:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3919:6:13"},{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3939:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"3943:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3935:3:13"},"nodeType":"YulFunctionCall","src":"3935:13:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3954:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3950:3:13"},"nodeType":"YulFunctionCall","src":"3950:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3931:3:13"},"nodeType":"YulFunctionCall","src":"3931:27:13"},{"kind":"number","nodeType":"YulLiteral","src":"3960:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3927:3:13"},"nodeType":"YulFunctionCall","src":"3927:38:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3899:19:13"},"nodeType":"YulFunctionCall","src":"3899:67:13"},"nodeType":"YulExpressionStatement","src":"3899:67:13"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3982:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"3990:2:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3975:6:13"},"nodeType":"YulFunctionCall","src":"3975:18:13"},"nodeType":"YulExpressionStatement","src":"3975:18:13"},{"body":{"nodeType":"YulBlock","src":"4041:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4050:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4053:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4043:6:13"},"nodeType":"YulFunctionCall","src":"4043:12:13"},"nodeType":"YulExpressionStatement","src":"4043:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4016:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"4024:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4012:3:13"},"nodeType":"YulFunctionCall","src":"4012:15:13"},{"kind":"number","nodeType":"YulLiteral","src":"4029:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4008:3:13"},"nodeType":"YulFunctionCall","src":"4008:26:13"},{"name":"end","nodeType":"YulIdentifier","src":"4036:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4005:2:13"},"nodeType":"YulFunctionCall","src":"4005:35:13"},"nodeType":"YulIf","src":"4002:55:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4083:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4091:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4079:3:13"},"nodeType":"YulFunctionCall","src":"4079:17:13"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4102:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4110:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4098:3:13"},"nodeType":"YulFunctionCall","src":"4098:17:13"},{"name":"_1","nodeType":"YulIdentifier","src":"4117:2:13"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4066:12:13"},"nodeType":"YulFunctionCall","src":"4066:54:13"},"nodeType":"YulExpressionStatement","src":"4066:54:13"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4144:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"4152:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4140:3:13"},"nodeType":"YulFunctionCall","src":"4140:15:13"},{"kind":"number","nodeType":"YulLiteral","src":"4157:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4136:3:13"},"nodeType":"YulFunctionCall","src":"4136:26:13"},{"kind":"number","nodeType":"YulLiteral","src":"4164:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4129:6:13"},"nodeType":"YulFunctionCall","src":"4129:37:13"},"nodeType":"YulExpressionStatement","src":"4129:37:13"},{"nodeType":"YulAssignment","src":"4175:15:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4184:6:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4175:5:13"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3667:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"3675:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3683:5:13","type":""}],"src":"3641:555:13"},{"body":{"nodeType":"YulBlock","src":"4398:874:13","statements":[{"body":{"nodeType":"YulBlock","src":"4445:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4454:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4457:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4447:6:13"},"nodeType":"YulFunctionCall","src":"4447:12:13"},"nodeType":"YulExpressionStatement","src":"4447:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4419:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"4428:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4415:3:13"},"nodeType":"YulFunctionCall","src":"4415:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"4440:3:13","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4411:3:13"},"nodeType":"YulFunctionCall","src":"4411:33:13"},"nodeType":"YulIf","src":"4408:53:13"},{"nodeType":"YulVariableDeclaration","src":"4470:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4496:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4483:12:13"},"nodeType":"YulFunctionCall","src":"4483:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4474:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4540:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4515:24:13"},"nodeType":"YulFunctionCall","src":"4515:31:13"},"nodeType":"YulExpressionStatement","src":"4515:31:13"},{"nodeType":"YulAssignment","src":"4555:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"4565:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4555:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"4579:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4611:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4622:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4607:3:13"},"nodeType":"YulFunctionCall","src":"4607:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4594:12:13"},"nodeType":"YulFunctionCall","src":"4594:32:13"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4583:7:13","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4660:7:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4635:24:13"},"nodeType":"YulFunctionCall","src":"4635:33:13"},"nodeType":"YulExpressionStatement","src":"4635:33:13"},{"nodeType":"YulAssignment","src":"4677:17:13","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4687:7:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4677:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"4703:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4734:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4745:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4730:3:13"},"nodeType":"YulFunctionCall","src":"4730:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4717:12:13"},"nodeType":"YulFunctionCall","src":"4717:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4707:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4758:28:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4768:18:13","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4762:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4813:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4822:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4825:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4815:6:13"},"nodeType":"YulFunctionCall","src":"4815:12:13"},"nodeType":"YulExpressionStatement","src":"4815:12:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4801:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"4809:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4798:2:13"},"nodeType":"YulFunctionCall","src":"4798:14:13"},"nodeType":"YulIf","src":"4795:34:13"},{"nodeType":"YulAssignment","src":"4838:71:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4881:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4892:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4877:3:13"},"nodeType":"YulFunctionCall","src":"4877:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4901:7:13"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4848:28:13"},"nodeType":"YulFunctionCall","src":"4848:61:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4838:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"4918:48:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4951:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4962:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4947:3:13"},"nodeType":"YulFunctionCall","src":"4947:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4934:12:13"},"nodeType":"YulFunctionCall","src":"4934:32:13"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4922:8:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4995:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5004:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5007:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4997:6:13"},"nodeType":"YulFunctionCall","src":"4997:12:13"},"nodeType":"YulExpressionStatement","src":"4997:12:13"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4981:8:13"},{"name":"_1","nodeType":"YulIdentifier","src":"4991:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4978:2:13"},"nodeType":"YulFunctionCall","src":"4978:16:13"},"nodeType":"YulIf","src":"4975:36:13"},{"nodeType":"YulAssignment","src":"5020:73:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5063:9:13"},{"name":"offset_1","nodeType":"YulIdentifier","src":"5074:8:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5059:3:13"},"nodeType":"YulFunctionCall","src":"5059:24:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5085:7:13"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"5030:28:13"},"nodeType":"YulFunctionCall","src":"5030:63:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5020:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"5102:49:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5135:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5146:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5131:3:13"},"nodeType":"YulFunctionCall","src":"5131:19:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5118:12:13"},"nodeType":"YulFunctionCall","src":"5118:33:13"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"5106:8:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5180:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5189:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5192:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5182:6:13"},"nodeType":"YulFunctionCall","src":"5182:12:13"},"nodeType":"YulExpressionStatement","src":"5182:12:13"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"5166:8:13"},{"name":"_1","nodeType":"YulIdentifier","src":"5176:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5163:2:13"},"nodeType":"YulFunctionCall","src":"5163:16:13"},"nodeType":"YulIf","src":"5160:36:13"},{"nodeType":"YulAssignment","src":"5205:61:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5236:9:13"},{"name":"offset_2","nodeType":"YulIdentifier","src":"5247:8:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5232:3:13"},"nodeType":"YulFunctionCall","src":"5232:24:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5258:7:13"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"5215:16:13"},"nodeType":"YulFunctionCall","src":"5215:51:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5205:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4332:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4343:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4355:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4363:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4371:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4379:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4387:6:13","type":""}],"src":"4201:1071:13"},{"body":{"nodeType":"YulBlock","src":"5550:373:13","statements":[{"nodeType":"YulAssignment","src":"5560:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5572:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5583:3:13","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5568:3:13"},"nodeType":"YulFunctionCall","src":"5568:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5560:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5603:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"5614:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5596:6:13"},"nodeType":"YulFunctionCall","src":"5596:25:13"},"nodeType":"YulExpressionStatement","src":"5596:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5641:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5652:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5637:3:13"},"nodeType":"YulFunctionCall","src":"5637:18:13"},{"name":"value1","nodeType":"YulIdentifier","src":"5657:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5630:6:13"},"nodeType":"YulFunctionCall","src":"5630:34:13"},"nodeType":"YulExpressionStatement","src":"5630:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5684:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5695:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5680:3:13"},"nodeType":"YulFunctionCall","src":"5680:18:13"},{"name":"value2","nodeType":"YulIdentifier","src":"5700:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5673:6:13"},"nodeType":"YulFunctionCall","src":"5673:34:13"},"nodeType":"YulExpressionStatement","src":"5673:34:13"},{"nodeType":"YulVariableDeclaration","src":"5716:52:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5726:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5720:2:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5788:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5799:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5784:3:13"},"nodeType":"YulFunctionCall","src":"5784:18:13"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"5808:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"5816:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5804:3:13"},"nodeType":"YulFunctionCall","src":"5804:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5777:6:13"},"nodeType":"YulFunctionCall","src":"5777:43:13"},"nodeType":"YulExpressionStatement","src":"5777:43:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5840:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5851:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5836:3:13"},"nodeType":"YulFunctionCall","src":"5836:19:13"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"5861:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"5869:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5857:3:13"},"nodeType":"YulFunctionCall","src":"5857:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5829:6:13"},"nodeType":"YulFunctionCall","src":"5829:44:13"},"nodeType":"YulExpressionStatement","src":"5829:44:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5893:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5904:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5889:3:13"},"nodeType":"YulFunctionCall","src":"5889:19:13"},{"name":"value5","nodeType":"YulIdentifier","src":"5910:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5882:6:13"},"nodeType":"YulFunctionCall","src":"5882:35:13"},"nodeType":"YulExpressionStatement","src":"5882:35:13"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_uint256_t_uint256_t_uint256_t_address_payable_t_address_payable_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5479:9:13","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5490:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5498:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5506:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5514:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5522:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5530:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5541:4:13","type":""}],"src":"5277:646:13"},{"body":{"nodeType":"YulBlock","src":"6095:530:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6105:12:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6115:2:13","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6109:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6126:32:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6144:9:13"},{"name":"_1","nodeType":"YulIdentifier","src":"6155:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6140:3:13"},"nodeType":"YulFunctionCall","src":"6140:18:13"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"6130:6:13","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6174:9:13"},{"name":"_1","nodeType":"YulIdentifier","src":"6185:2:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6167:6:13"},"nodeType":"YulFunctionCall","src":"6167:21:13"},"nodeType":"YulExpressionStatement","src":"6167:21:13"},{"nodeType":"YulVariableDeclaration","src":"6197:17:13","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"6208:6:13"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"6201:3:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6223:27:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6243:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6237:5:13"},"nodeType":"YulFunctionCall","src":"6237:13:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6227:6:13","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"6266:6:13"},{"name":"length","nodeType":"YulIdentifier","src":"6274:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6259:6:13"},"nodeType":"YulFunctionCall","src":"6259:22:13"},"nodeType":"YulExpressionStatement","src":"6259:22:13"},{"nodeType":"YulAssignment","src":"6290:25:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6301:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6312:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6297:3:13"},"nodeType":"YulFunctionCall","src":"6297:18:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6290:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"6324:29:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6342:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"6350:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6338:3:13"},"nodeType":"YulFunctionCall","src":"6338:15:13"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6328:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6362:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6371:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6366:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6430:169:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6451:3:13"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6466:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6460:5:13"},"nodeType":"YulFunctionCall","src":"6460:13:13"},{"kind":"number","nodeType":"YulLiteral","src":"6475:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6456:3:13"},"nodeType":"YulFunctionCall","src":"6456:62:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6444:6:13"},"nodeType":"YulFunctionCall","src":"6444:75:13"},"nodeType":"YulExpressionStatement","src":"6444:75:13"},{"nodeType":"YulAssignment","src":"6532:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6543:3:13"},{"name":"_1","nodeType":"YulIdentifier","src":"6548:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6539:3:13"},"nodeType":"YulFunctionCall","src":"6539:12:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6532:3:13"}]},{"nodeType":"YulAssignment","src":"6564:25:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6578:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"6586:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6574:3:13"},"nodeType":"YulFunctionCall","src":"6574:15:13"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6564:6:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6392:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"6395:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6389:2:13"},"nodeType":"YulFunctionCall","src":"6389:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6403:18:13","statements":[{"nodeType":"YulAssignment","src":"6405:14:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6414:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"6417:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6410:3:13"},"nodeType":"YulFunctionCall","src":"6410:9:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6405:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"6385:3:13","statements":[]},"src":"6381:218:13"},{"nodeType":"YulAssignment","src":"6608:11:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"6616:3:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6608:4:13"}]}]},"name":"abi_encode_tuple_t_array$_t_address_payable_$dyn_memory_ptr__to_t_array$_t_address_payable_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6064:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6075:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6086:4:13","type":""}],"src":"5928:697:13"},{"body":{"nodeType":"YulBlock","src":"6767:1140:13","statements":[{"body":{"nodeType":"YulBlock","src":"6813:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6822:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6825:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6815:6:13"},"nodeType":"YulFunctionCall","src":"6815:12:13"},"nodeType":"YulExpressionStatement","src":"6815:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6788:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"6797:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6784:3:13"},"nodeType":"YulFunctionCall","src":"6784:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"6809:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6780:3:13"},"nodeType":"YulFunctionCall","src":"6780:32:13"},"nodeType":"YulIf","src":"6777:52:13"},{"nodeType":"YulVariableDeclaration","src":"6838:37:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6865:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6852:12:13"},"nodeType":"YulFunctionCall","src":"6852:23:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6842:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6884:28:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6894:18:13","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6888:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6939:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6948:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6951:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6941:6:13"},"nodeType":"YulFunctionCall","src":"6941:12:13"},"nodeType":"YulExpressionStatement","src":"6941:12:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6927:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"6935:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6924:2:13"},"nodeType":"YulFunctionCall","src":"6924:14:13"},"nodeType":"YulIf","src":"6921:34:13"},{"nodeType":"YulVariableDeclaration","src":"6964:32:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6978:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"6989:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6974:3:13"},"nodeType":"YulFunctionCall","src":"6974:22:13"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6968:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"7044:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7053:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7056:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7046:6:13"},"nodeType":"YulFunctionCall","src":"7046:12:13"},"nodeType":"YulExpressionStatement","src":"7046:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7023:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"7027:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7019:3:13"},"nodeType":"YulFunctionCall","src":"7019:13:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7034:7:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7015:3:13"},"nodeType":"YulFunctionCall","src":"7015:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7008:6:13"},"nodeType":"YulFunctionCall","src":"7008:35:13"},"nodeType":"YulIf","src":"7005:55:13"},{"nodeType":"YulVariableDeclaration","src":"7069:26:13","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7092:2:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7079:12:13"},"nodeType":"YulFunctionCall","src":"7079:16:13"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"7073:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7104:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"7114:4:13","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"7108:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7127:53:13","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7177:2:13"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"7137:39:13"},"nodeType":"YulFunctionCall","src":"7137:43:13"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"7131:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7189:23:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7209:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7203:5:13"},"nodeType":"YulFunctionCall","src":"7203:9:13"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7193:6:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7241:6:13"},{"name":"_5","nodeType":"YulIdentifier","src":"7249:2:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7221:19:13"},"nodeType":"YulFunctionCall","src":"7221:31:13"},"nodeType":"YulExpressionStatement","src":"7221:31:13"},{"nodeType":"YulVariableDeclaration","src":"7261:17:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"7272:6:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7265:3:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7294:6:13"},{"name":"_3","nodeType":"YulIdentifier","src":"7302:2:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7287:6:13"},"nodeType":"YulFunctionCall","src":"7287:18:13"},"nodeType":"YulExpressionStatement","src":"7287:18:13"},{"nodeType":"YulAssignment","src":"7314:22:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7325:6:13"},{"name":"_4","nodeType":"YulIdentifier","src":"7333:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7321:3:13"},"nodeType":"YulFunctionCall","src":"7321:15:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7314:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"7345:42:13","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7367:2:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7375:1:13","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"7378:2:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7371:3:13"},"nodeType":"YulFunctionCall","src":"7371:10:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7363:3:13"},"nodeType":"YulFunctionCall","src":"7363:19:13"},{"name":"_4","nodeType":"YulIdentifier","src":"7384:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7359:3:13"},"nodeType":"YulFunctionCall","src":"7359:28:13"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7349:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"7419:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7428:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7431:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7421:6:13"},"nodeType":"YulFunctionCall","src":"7421:12:13"},"nodeType":"YulExpressionStatement","src":"7421:12:13"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7402:6:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7410:7:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7399:2:13"},"nodeType":"YulFunctionCall","src":"7399:19:13"},"nodeType":"YulIf","src":"7396:39:13"},{"nodeType":"YulVariableDeclaration","src":"7444:22:13","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7459:2:13"},{"name":"_4","nodeType":"YulIdentifier","src":"7463:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7455:3:13"},"nodeType":"YulFunctionCall","src":"7455:11:13"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7448:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"7531:161:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7545:30:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7571:3:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7558:12:13"},"nodeType":"YulFunctionCall","src":"7558:17:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7549:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7613:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7588:24:13"},"nodeType":"YulFunctionCall","src":"7588:31:13"},"nodeType":"YulExpressionStatement","src":"7588:31:13"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7639:3:13"},{"name":"value","nodeType":"YulIdentifier","src":"7644:5:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7632:6:13"},"nodeType":"YulFunctionCall","src":"7632:18:13"},"nodeType":"YulExpressionStatement","src":"7632:18:13"},{"nodeType":"YulAssignment","src":"7663:19:13","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7674:3:13"},{"name":"_4","nodeType":"YulIdentifier","src":"7679:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7670:3:13"},"nodeType":"YulFunctionCall","src":"7670:12:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7663:3:13"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7486:3:13"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7491:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7483:2:13"},"nodeType":"YulFunctionCall","src":"7483:15:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7499:23:13","statements":[{"nodeType":"YulAssignment","src":"7501:19:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7512:3:13"},{"name":"_4","nodeType":"YulIdentifier","src":"7517:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7508:3:13"},"nodeType":"YulFunctionCall","src":"7508:12:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7501:3:13"}]}]},"pre":{"nodeType":"YulBlock","src":"7479:3:13","statements":[]},"src":"7475:217:13"},{"nodeType":"YulAssignment","src":"7701:16:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"7711:6:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7701:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"7726:48:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7759:9:13"},{"name":"_4","nodeType":"YulIdentifier","src":"7770:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7755:3:13"},"nodeType":"YulFunctionCall","src":"7755:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7742:12:13"},"nodeType":"YulFunctionCall","src":"7742:32:13"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"7730:8:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"7803:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7812:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7815:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7805:6:13"},"nodeType":"YulFunctionCall","src":"7805:12:13"},"nodeType":"YulExpressionStatement","src":"7805:12:13"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"7789:8:13"},{"name":"_1","nodeType":"YulIdentifier","src":"7799:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7786:2:13"},"nodeType":"YulFunctionCall","src":"7786:16:13"},"nodeType":"YulIf","src":"7783:36:13"},{"nodeType":"YulAssignment","src":"7828:73:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7871:9:13"},{"name":"offset_1","nodeType":"YulIdentifier","src":"7882:8:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7867:3:13"},"nodeType":"YulFunctionCall","src":"7867:24:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7893:7:13"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"7838:28:13"},"nodeType":"YulFunctionCall","src":"7838:63:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7828:6:13"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6725:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6736:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6748:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6756:6:13","type":""}],"src":"6630:1277:13"},{"body":{"nodeType":"YulBlock","src":"7973:374:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7983:26:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8003:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7997:5:13"},"nodeType":"YulFunctionCall","src":"7997:12:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7987:6:13","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8025:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"8030:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8018:6:13"},"nodeType":"YulFunctionCall","src":"8018:19:13"},"nodeType":"YulExpressionStatement","src":"8018:19:13"},{"nodeType":"YulVariableDeclaration","src":"8046:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"8056:4:13","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8050:2:13","type":""}]},{"nodeType":"YulAssignment","src":"8069:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8080:3:13"},{"name":"_1","nodeType":"YulIdentifier","src":"8085:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8076:3:13"},"nodeType":"YulFunctionCall","src":"8076:12:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8069:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"8097:28:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8115:5:13"},{"name":"_1","nodeType":"YulIdentifier","src":"8122:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8111:3:13"},"nodeType":"YulFunctionCall","src":"8111:14:13"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"8101:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8134:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"8143:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8138:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"8202:120:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8223:3:13"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8234:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8228:5:13"},"nodeType":"YulFunctionCall","src":"8228:13:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8216:6:13"},"nodeType":"YulFunctionCall","src":"8216:26:13"},"nodeType":"YulExpressionStatement","src":"8216:26:13"},{"nodeType":"YulAssignment","src":"8255:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8266:3:13"},{"name":"_1","nodeType":"YulIdentifier","src":"8271:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8262:3:13"},"nodeType":"YulFunctionCall","src":"8262:12:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8255:3:13"}]},{"nodeType":"YulAssignment","src":"8287:25:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8301:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"8309:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8297:3:13"},"nodeType":"YulFunctionCall","src":"8297:15:13"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8287:6:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8164:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"8167:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8161:2:13"},"nodeType":"YulFunctionCall","src":"8161:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8175:18:13","statements":[{"nodeType":"YulAssignment","src":"8177:14:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8186:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"8189:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8182:3:13"},"nodeType":"YulFunctionCall","src":"8182:9:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8177:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"8157:3:13","statements":[]},"src":"8153:169:13"},{"nodeType":"YulAssignment","src":"8331:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"8338:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8331:3:13"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7950:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7957:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7965:3:13","type":""}],"src":"7912:435:13"},{"body":{"nodeType":"YulBlock","src":"8503:110:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8520:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8531:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8513:6:13"},"nodeType":"YulFunctionCall","src":"8513:21:13"},"nodeType":"YulExpressionStatement","src":"8513:21:13"},{"nodeType":"YulAssignment","src":"8543:64:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8580:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8592:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8603:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8588:3:13"},"nodeType":"YulFunctionCall","src":"8588:18:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"8551:28:13"},"nodeType":"YulFunctionCall","src":"8551:56:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8543:4:13"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8472:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8483:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8494:4:13","type":""}],"src":"8352:261:13"},{"body":{"nodeType":"YulBlock","src":"8696:177:13","statements":[{"body":{"nodeType":"YulBlock","src":"8742:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8751:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8754:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8744:6:13"},"nodeType":"YulFunctionCall","src":"8744:12:13"},"nodeType":"YulExpressionStatement","src":"8744:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8717:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"8726:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8713:3:13"},"nodeType":"YulFunctionCall","src":"8713:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"8738:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8709:3:13"},"nodeType":"YulFunctionCall","src":"8709:32:13"},"nodeType":"YulIf","src":"8706:52:13"},{"nodeType":"YulVariableDeclaration","src":"8767:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8793:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8780:12:13"},"nodeType":"YulFunctionCall","src":"8780:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8771:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8837:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"8812:24:13"},"nodeType":"YulFunctionCall","src":"8812:31:13"},"nodeType":"YulExpressionStatement","src":"8812:31:13"},{"nodeType":"YulAssignment","src":"8852:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"8862:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8852:6:13"}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8662:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8673:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8685:6:13","type":""}],"src":"8618:255:13"},{"body":{"nodeType":"YulBlock","src":"8962:332:13","statements":[{"body":{"nodeType":"YulBlock","src":"9008:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9017:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9020:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9010:6:13"},"nodeType":"YulFunctionCall","src":"9010:12:13"},"nodeType":"YulExpressionStatement","src":"9010:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8983:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"8992:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8979:3:13"},"nodeType":"YulFunctionCall","src":"8979:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"9004:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8975:3:13"},"nodeType":"YulFunctionCall","src":"8975:32:13"},"nodeType":"YulIf","src":"8972:52:13"},{"nodeType":"YulVariableDeclaration","src":"9033:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9059:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9046:12:13"},"nodeType":"YulFunctionCall","src":"9046:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9037:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9103:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9078:24:13"},"nodeType":"YulFunctionCall","src":"9078:31:13"},"nodeType":"YulExpressionStatement","src":"9078:31:13"},{"nodeType":"YulAssignment","src":"9118:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"9128:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9118:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"9142:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9174:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9185:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9170:3:13"},"nodeType":"YulFunctionCall","src":"9170:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9157:12:13"},"nodeType":"YulFunctionCall","src":"9157:32:13"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"9146:7:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"9246:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9255:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9258:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9248:6:13"},"nodeType":"YulFunctionCall","src":"9248:12:13"},"nodeType":"YulExpressionStatement","src":"9248:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9211:7:13"},{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9234:7:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9227:6:13"},"nodeType":"YulFunctionCall","src":"9227:15:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9220:6:13"},"nodeType":"YulFunctionCall","src":"9220:23:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9208:2:13"},"nodeType":"YulFunctionCall","src":"9208:36:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9201:6:13"},"nodeType":"YulFunctionCall","src":"9201:44:13"},"nodeType":"YulIf","src":"9198:64:13"},{"nodeType":"YulAssignment","src":"9271:17:13","value":{"name":"value_1","nodeType":"YulIdentifier","src":"9281:7:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9271:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8920:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8931:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8943:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8951:6:13","type":""}],"src":"8878:416:13"},{"body":{"nodeType":"YulBlock","src":"9398:103:13","statements":[{"nodeType":"YulAssignment","src":"9408:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9420:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9431:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9416:3:13"},"nodeType":"YulFunctionCall","src":"9416:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9408:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9450:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9465:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9477:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9482:10:13","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9473:3:13"},"nodeType":"YulFunctionCall","src":"9473:20:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9461:3:13"},"nodeType":"YulFunctionCall","src":"9461:33:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9443:6:13"},"nodeType":"YulFunctionCall","src":"9443:52:13"},"nodeType":"YulExpressionStatement","src":"9443:52:13"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9367:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9378:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9389:4:13","type":""}],"src":"9299:202:13"},{"body":{"nodeType":"YulBlock","src":"9593:301:13","statements":[{"body":{"nodeType":"YulBlock","src":"9639:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9648:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9651:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9641:6:13"},"nodeType":"YulFunctionCall","src":"9641:12:13"},"nodeType":"YulExpressionStatement","src":"9641:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9614:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"9623:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9610:3:13"},"nodeType":"YulFunctionCall","src":"9610:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"9635:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9606:3:13"},"nodeType":"YulFunctionCall","src":"9606:32:13"},"nodeType":"YulIf","src":"9603:52:13"},{"nodeType":"YulVariableDeclaration","src":"9664:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9690:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9677:12:13"},"nodeType":"YulFunctionCall","src":"9677:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9668:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9734:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9709:24:13"},"nodeType":"YulFunctionCall","src":"9709:31:13"},"nodeType":"YulExpressionStatement","src":"9709:31:13"},{"nodeType":"YulAssignment","src":"9749:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"9759:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9749:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"9773:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9805:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9816:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9801:3:13"},"nodeType":"YulFunctionCall","src":"9801:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9788:12:13"},"nodeType":"YulFunctionCall","src":"9788:32:13"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"9777:7:13","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9854:7:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9829:24:13"},"nodeType":"YulFunctionCall","src":"9829:33:13"},"nodeType":"YulExpressionStatement","src":"9829:33:13"},{"nodeType":"YulAssignment","src":"9871:17:13","value":{"name":"value_1","nodeType":"YulIdentifier","src":"9881:7:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9871:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9551:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9562:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9574:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9582:6:13","type":""}],"src":"9506:388:13"},{"body":{"nodeType":"YulBlock","src":"10046:587:13","statements":[{"body":{"nodeType":"YulBlock","src":"10093:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10102:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10105:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10095:6:13"},"nodeType":"YulFunctionCall","src":"10095:12:13"},"nodeType":"YulExpressionStatement","src":"10095:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10067:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"10076:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10063:3:13"},"nodeType":"YulFunctionCall","src":"10063:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"10088:3:13","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10059:3:13"},"nodeType":"YulFunctionCall","src":"10059:33:13"},"nodeType":"YulIf","src":"10056:53:13"},{"nodeType":"YulVariableDeclaration","src":"10118:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10144:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10131:12:13"},"nodeType":"YulFunctionCall","src":"10131:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10122:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10188:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10163:24:13"},"nodeType":"YulFunctionCall","src":"10163:31:13"},"nodeType":"YulExpressionStatement","src":"10163:31:13"},{"nodeType":"YulAssignment","src":"10203:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"10213:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10203:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"10227:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10259:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10270:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10255:3:13"},"nodeType":"YulFunctionCall","src":"10255:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10242:12:13"},"nodeType":"YulFunctionCall","src":"10242:32:13"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"10231:7:13","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"10308:7:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10283:24:13"},"nodeType":"YulFunctionCall","src":"10283:33:13"},"nodeType":"YulExpressionStatement","src":"10283:33:13"},{"nodeType":"YulAssignment","src":"10325:17:13","value":{"name":"value_1","nodeType":"YulIdentifier","src":"10335:7:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10325:6:13"}]},{"nodeType":"YulAssignment","src":"10351:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10378:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10389:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10374:3:13"},"nodeType":"YulFunctionCall","src":"10374:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10361:12:13"},"nodeType":"YulFunctionCall","src":"10361:32:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10351:6:13"}]},{"nodeType":"YulAssignment","src":"10402:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10429:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10440:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10425:3:13"},"nodeType":"YulFunctionCall","src":"10425:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10412:12:13"},"nodeType":"YulFunctionCall","src":"10412:32:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10402:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"10453:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10484:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10495:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10480:3:13"},"nodeType":"YulFunctionCall","src":"10480:19:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10467:12:13"},"nodeType":"YulFunctionCall","src":"10467:33:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10457:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"10543:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10552:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10555:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10545:6:13"},"nodeType":"YulFunctionCall","src":"10545:12:13"},"nodeType":"YulExpressionStatement","src":"10545:12:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10515:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10523:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10512:2:13"},"nodeType":"YulFunctionCall","src":"10512:30:13"},"nodeType":"YulIf","src":"10509:50:13"},{"nodeType":"YulAssignment","src":"10568:59:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10599:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"10610:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10595:3:13"},"nodeType":"YulFunctionCall","src":"10595:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10619:7:13"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"10578:16:13"},"nodeType":"YulFunctionCall","src":"10578:49:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10568:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9980:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9991:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10003:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10011:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10019:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10027:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10035:6:13","type":""}],"src":"9899:734:13"},{"body":{"nodeType":"YulBlock","src":"10812:232:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10829:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10840:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10822:6:13"},"nodeType":"YulFunctionCall","src":"10822:21:13"},"nodeType":"YulExpressionStatement","src":"10822:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10863:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10874:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10859:3:13"},"nodeType":"YulFunctionCall","src":"10859:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"10879:2:13","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10852:6:13"},"nodeType":"YulFunctionCall","src":"10852:30:13"},"nodeType":"YulExpressionStatement","src":"10852:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10902:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10913:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10898:3:13"},"nodeType":"YulFunctionCall","src":"10898:18:13"},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076","kind":"string","nodeType":"YulLiteral","src":"10918:34:13","type":"","value":"ERC1155: address zero is not a v"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10891:6:13"},"nodeType":"YulFunctionCall","src":"10891:62:13"},"nodeType":"YulExpressionStatement","src":"10891:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10973:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10984:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10969:3:13"},"nodeType":"YulFunctionCall","src":"10969:18:13"},{"hexValue":"616c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"10989:12:13","type":"","value":"alid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10962:6:13"},"nodeType":"YulFunctionCall","src":"10962:40:13"},"nodeType":"YulExpressionStatement","src":"10962:40:13"},{"nodeType":"YulAssignment","src":"11011:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11023:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11034:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11019:3:13"},"nodeType":"YulFunctionCall","src":"11019:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11011:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10789:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10803:4:13","type":""}],"src":"10638:406:13"},{"body":{"nodeType":"YulBlock","src":"11104:325:13","statements":[{"nodeType":"YulAssignment","src":"11114:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11128:1:13","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"11131:4:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11124:3:13"},"nodeType":"YulFunctionCall","src":"11124:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11114:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"11145:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11175:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"11181:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11171:3:13"},"nodeType":"YulFunctionCall","src":"11171:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11149:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"11222:31:13","statements":[{"nodeType":"YulAssignment","src":"11224:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11238:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"11246:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11234:3:13"},"nodeType":"YulFunctionCall","src":"11234:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11224:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11202:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11195:6:13"},"nodeType":"YulFunctionCall","src":"11195:26:13"},"nodeType":"YulIf","src":"11192:61:13"},{"body":{"nodeType":"YulBlock","src":"11312:111:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11333:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11340:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11345:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11336:3:13"},"nodeType":"YulFunctionCall","src":"11336:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11326:6:13"},"nodeType":"YulFunctionCall","src":"11326:31:13"},"nodeType":"YulExpressionStatement","src":"11326:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11377:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11380:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11370:6:13"},"nodeType":"YulFunctionCall","src":"11370:15:13"},"nodeType":"YulExpressionStatement","src":"11370:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11405:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11408:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11398:6:13"},"nodeType":"YulFunctionCall","src":"11398:15:13"},"nodeType":"YulExpressionStatement","src":"11398:15:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11268:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11291:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"11299:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11288:2:13"},"nodeType":"YulFunctionCall","src":"11288:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11265:2:13"},"nodeType":"YulFunctionCall","src":"11265:38:13"},"nodeType":"YulIf","src":"11262:161:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11084:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11093:6:13","type":""}],"src":"11049:380:13"},{"body":{"nodeType":"YulBlock","src":"11608:236:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11625:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11636:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11618:6:13"},"nodeType":"YulFunctionCall","src":"11618:21:13"},"nodeType":"YulExpressionStatement","src":"11618:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11659:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11670:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11655:3:13"},"nodeType":"YulFunctionCall","src":"11655:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"11675:2:13","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11648:6:13"},"nodeType":"YulFunctionCall","src":"11648:30:13"},"nodeType":"YulExpressionStatement","src":"11648:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11698:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11709:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11694:3:13"},"nodeType":"YulFunctionCall","src":"11694:18:13"},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e","kind":"string","nodeType":"YulLiteral","src":"11714:34:13","type":"","value":"ERC1155: caller is not token own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11687:6:13"},"nodeType":"YulFunctionCall","src":"11687:62:13"},"nodeType":"YulExpressionStatement","src":"11687:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11769:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11780:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11765:3:13"},"nodeType":"YulFunctionCall","src":"11765:18:13"},{"hexValue":"6572206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"11785:16:13","type":"","value":"er or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11758:6:13"},"nodeType":"YulFunctionCall","src":"11758:44:13"},"nodeType":"YulExpressionStatement","src":"11758:44:13"},{"nodeType":"YulAssignment","src":"11811:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11823:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11834:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11819:3:13"},"nodeType":"YulFunctionCall","src":"11819:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11811:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11585:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11599:4:13","type":""}],"src":"11434:410:13"},{"body":{"nodeType":"YulBlock","src":"12023:233:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12040:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12051:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12033:6:13"},"nodeType":"YulFunctionCall","src":"12033:21:13"},"nodeType":"YulExpressionStatement","src":"12033:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12074:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12085:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12070:3:13"},"nodeType":"YulFunctionCall","src":"12070:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"12090:2:13","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12063:6:13"},"nodeType":"YulFunctionCall","src":"12063:30:13"},"nodeType":"YulExpressionStatement","src":"12063:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12113:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12124:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12109:3:13"},"nodeType":"YulFunctionCall","src":"12109:18:13"},{"hexValue":"596f752068617665206e6f7420706c6163656420616e792062657420696e2074","kind":"string","nodeType":"YulLiteral","src":"12129:34:13","type":"","value":"You have not placed any bet in t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12102:6:13"},"nodeType":"YulFunctionCall","src":"12102:62:13"},"nodeType":"YulExpressionStatement","src":"12102:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12184:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12195:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12180:3:13"},"nodeType":"YulFunctionCall","src":"12180:18:13"},{"hexValue":"6869732061756374696f6e","kind":"string","nodeType":"YulLiteral","src":"12200:13:13","type":"","value":"his auction"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12173:6:13"},"nodeType":"YulFunctionCall","src":"12173:41:13"},"nodeType":"YulExpressionStatement","src":"12173:41:13"},{"nodeType":"YulAssignment","src":"12223:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12235:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12246:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12231:3:13"},"nodeType":"YulFunctionCall","src":"12231:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12223:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_c78a945367e2a6899352bb4d45dcf95cd13d085cfc3f1dc5c7d2b9759890d17a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12000:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12014:4:13","type":""}],"src":"11849:407:13"},{"body":{"nodeType":"YulBlock","src":"12435:231:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12452:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12463:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12445:6:13"},"nodeType":"YulFunctionCall","src":"12445:21:13"},"nodeType":"YulExpressionStatement","src":"12445:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12486:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12497:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12482:3:13"},"nodeType":"YulFunctionCall","src":"12482:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"12502:2:13","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12475:6:13"},"nodeType":"YulFunctionCall","src":"12475:30:13"},"nodeType":"YulExpressionStatement","src":"12475:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12525:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12536:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12521:3:13"},"nodeType":"YulFunctionCall","src":"12521:18:13"},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468","kind":"string","nodeType":"YulLiteral","src":"12541:34:13","type":"","value":"ERC1155: accounts and ids length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12514:6:13"},"nodeType":"YulFunctionCall","src":"12514:62:13"},"nodeType":"YulExpressionStatement","src":"12514:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12596:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12607:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12592:3:13"},"nodeType":"YulFunctionCall","src":"12592:18:13"},{"hexValue":"206d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"12612:11:13","type":"","value":" mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12585:6:13"},"nodeType":"YulFunctionCall","src":"12585:39:13"},"nodeType":"YulExpressionStatement","src":"12585:39:13"},{"nodeType":"YulAssignment","src":"12633:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12645:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12656:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12641:3:13"},"nodeType":"YulFunctionCall","src":"12641:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12633:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12412:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12426:4:13","type":""}],"src":"12261:405:13"},{"body":{"nodeType":"YulBlock","src":"12703:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12720:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12727:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12732:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12723:3:13"},"nodeType":"YulFunctionCall","src":"12723:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12713:6:13"},"nodeType":"YulFunctionCall","src":"12713:31:13"},"nodeType":"YulExpressionStatement","src":"12713:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12760:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12763:4:13","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12753:6:13"},"nodeType":"YulFunctionCall","src":"12753:15:13"},"nodeType":"YulExpressionStatement","src":"12753:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12784:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12787:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12777:6:13"},"nodeType":"YulFunctionCall","src":"12777:15:13"},"nodeType":"YulExpressionStatement","src":"12777:15:13"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"12671:127:13"},{"body":{"nodeType":"YulBlock","src":"12835:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12852:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12859:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12864:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12855:3:13"},"nodeType":"YulFunctionCall","src":"12855:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12845:6:13"},"nodeType":"YulFunctionCall","src":"12845:31:13"},"nodeType":"YulExpressionStatement","src":"12845:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12892:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12895:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12885:6:13"},"nodeType":"YulFunctionCall","src":"12885:15:13"},"nodeType":"YulExpressionStatement","src":"12885:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12916:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12919:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12909:6:13"},"nodeType":"YulFunctionCall","src":"12909:15:13"},"nodeType":"YulExpressionStatement","src":"12909:15:13"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12803:127:13"},{"body":{"nodeType":"YulBlock","src":"12982:88:13","statements":[{"body":{"nodeType":"YulBlock","src":"13013:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13015:16:13"},"nodeType":"YulFunctionCall","src":"13015:18:13"},"nodeType":"YulExpressionStatement","src":"13015:18:13"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12998:5:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13009:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13005:3:13"},"nodeType":"YulFunctionCall","src":"13005:6:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12995:2:13"},"nodeType":"YulFunctionCall","src":"12995:17:13"},"nodeType":"YulIf","src":"12992:43:13"},{"nodeType":"YulAssignment","src":"13044:20:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13055:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"13062:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13051:3:13"},"nodeType":"YulFunctionCall","src":"13051:13:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13044:3:13"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12964:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12974:3:13","type":""}],"src":"12935:135:13"},{"body":{"nodeType":"YulBlock","src":"13249:252:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13266:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13277:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13259:6:13"},"nodeType":"YulFunctionCall","src":"13259:21:13"},"nodeType":"YulExpressionStatement","src":"13259:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13300:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13311:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13296:3:13"},"nodeType":"YulFunctionCall","src":"13296:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"13316:2:13","type":"","value":"62"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13289:6:13"},"nodeType":"YulFunctionCall","src":"13289:30:13"},"nodeType":"YulExpressionStatement","src":"13289:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13339:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13350:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13335:3:13"},"nodeType":"YulFunctionCall","src":"13335:18:13"},{"hexValue":"42696420706c61636564206d75737420626520686967686572207468616e2074","kind":"string","nodeType":"YulLiteral","src":"13355:34:13","type":"","value":"Bid placed must be higher than t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13328:6:13"},"nodeType":"YulFunctionCall","src":"13328:62:13"},"nodeType":"YulExpressionStatement","src":"13328:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13410:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13421:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13406:3:13"},"nodeType":"YulFunctionCall","src":"13406:18:13"},{"hexValue":"6865206576616c756174696f6e206f66207468652074696d657374616d70","kind":"string","nodeType":"YulLiteral","src":"13426:32:13","type":"","value":"he evaluation of the timestamp"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13399:6:13"},"nodeType":"YulFunctionCall","src":"13399:60:13"},"nodeType":"YulExpressionStatement","src":"13399:60:13"},{"nodeType":"YulAssignment","src":"13468:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13480:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13491:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13476:3:13"},"nodeType":"YulFunctionCall","src":"13476:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13468:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_4446e7cad40a0f0bf90a99c8349fd6e70447f532f99bb8e8209f05d74b81f6bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13226:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13240:4:13","type":""}],"src":"13075:426:13"},{"body":{"nodeType":"YulBlock","src":"13680:230:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13697:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13708:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13690:6:13"},"nodeType":"YulFunctionCall","src":"13690:21:13"},"nodeType":"YulExpressionStatement","src":"13690:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13731:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13742:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13727:3:13"},"nodeType":"YulFunctionCall","src":"13727:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"13747:2:13","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13720:6:13"},"nodeType":"YulFunctionCall","src":"13720:30:13"},"nodeType":"YulExpressionStatement","src":"13720:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13770:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13781:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13766:3:13"},"nodeType":"YulFunctionCall","src":"13766:18:13"},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e67746820","kind":"string","nodeType":"YulLiteral","src":"13786:34:13","type":"","value":"ERC1155: ids and amounts length "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13759:6:13"},"nodeType":"YulFunctionCall","src":"13759:62:13"},"nodeType":"YulExpressionStatement","src":"13759:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13841:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13852:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13837:3:13"},"nodeType":"YulFunctionCall","src":"13837:18:13"},{"hexValue":"6d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"13857:10:13","type":"","value":"mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13830:6:13"},"nodeType":"YulFunctionCall","src":"13830:38:13"},"nodeType":"YulExpressionStatement","src":"13830:38:13"},{"nodeType":"YulAssignment","src":"13877:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13889:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13900:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13885:3:13"},"nodeType":"YulFunctionCall","src":"13885:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13877:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13657:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13671:4:13","type":""}],"src":"13506:404:13"},{"body":{"nodeType":"YulBlock","src":"14089:227:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14106:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14117:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14099:6:13"},"nodeType":"YulFunctionCall","src":"14099:21:13"},"nodeType":"YulExpressionStatement","src":"14099:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14140:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14151:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14136:3:13"},"nodeType":"YulFunctionCall","src":"14136:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"14156:2:13","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14129:6:13"},"nodeType":"YulFunctionCall","src":"14129:30:13"},"nodeType":"YulExpressionStatement","src":"14129:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14179:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14190:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14175:3:13"},"nodeType":"YulFunctionCall","src":"14175:18:13"},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"14195:34:13","type":"","value":"ERC1155: transfer to the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14168:6:13"},"nodeType":"YulFunctionCall","src":"14168:62:13"},"nodeType":"YulExpressionStatement","src":"14168:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14250:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14261:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14246:3:13"},"nodeType":"YulFunctionCall","src":"14246:18:13"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"14266:7:13","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14239:6:13"},"nodeType":"YulFunctionCall","src":"14239:35:13"},"nodeType":"YulExpressionStatement","src":"14239:35:13"},{"nodeType":"YulAssignment","src":"14283:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14295:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14306:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14291:3:13"},"nodeType":"YulFunctionCall","src":"14291:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14283:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14066:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14080:4:13","type":""}],"src":"13915:401:13"},{"body":{"nodeType":"YulBlock","src":"14495:232:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14512:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14523:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14505:6:13"},"nodeType":"YulFunctionCall","src":"14505:21:13"},"nodeType":"YulExpressionStatement","src":"14505:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14546:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14557:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14542:3:13"},"nodeType":"YulFunctionCall","src":"14542:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"14562:2:13","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14535:6:13"},"nodeType":"YulFunctionCall","src":"14535:30:13"},"nodeType":"YulExpressionStatement","src":"14535:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14585:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14596:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14581:3:13"},"nodeType":"YulFunctionCall","src":"14581:18:13"},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"14601:34:13","type":"","value":"ERC1155: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14574:6:13"},"nodeType":"YulFunctionCall","src":"14574:62:13"},"nodeType":"YulExpressionStatement","src":"14574:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14656:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14667:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14652:3:13"},"nodeType":"YulFunctionCall","src":"14652:18:13"},{"hexValue":"72207472616e73666572","kind":"string","nodeType":"YulLiteral","src":"14672:12:13","type":"","value":"r transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14645:6:13"},"nodeType":"YulFunctionCall","src":"14645:40:13"},"nodeType":"YulExpressionStatement","src":"14645:40:13"},{"nodeType":"YulAssignment","src":"14694:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14706:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14717:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14702:3:13"},"nodeType":"YulFunctionCall","src":"14702:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14694:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14472:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14486:4:13","type":""}],"src":"14321:406:13"},{"body":{"nodeType":"YulBlock","src":"14780:77:13","statements":[{"nodeType":"YulAssignment","src":"14790:16:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14801:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"14804:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14797:3:13"},"nodeType":"YulFunctionCall","src":"14797:9:13"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"14790:3:13"}]},{"body":{"nodeType":"YulBlock","src":"14829:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14831:16:13"},"nodeType":"YulFunctionCall","src":"14831:18:13"},"nodeType":"YulExpressionStatement","src":"14831:18:13"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14821:1:13"},{"name":"sum","nodeType":"YulIdentifier","src":"14824:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14818:2:13"},"nodeType":"YulFunctionCall","src":"14818:10:13"},"nodeType":"YulIf","src":"14815:36:13"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14763:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"14766:1:13","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"14772:3:13","type":""}],"src":"14732:125:13"},{"body":{"nodeType":"YulBlock","src":"15091:236:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15108:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15119:2:13","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15101:6:13"},"nodeType":"YulFunctionCall","src":"15101:21:13"},"nodeType":"YulExpressionStatement","src":"15101:21:13"},{"nodeType":"YulVariableDeclaration","src":"15131:70:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15174:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15186:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15197:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15182:3:13"},"nodeType":"YulFunctionCall","src":"15182:18:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"15145:28:13"},"nodeType":"YulFunctionCall","src":"15145:56:13"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"15135:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15221:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15232:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15217:3:13"},"nodeType":"YulFunctionCall","src":"15217:18:13"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"15241:6:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"15249:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15237:3:13"},"nodeType":"YulFunctionCall","src":"15237:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15210:6:13"},"nodeType":"YulFunctionCall","src":"15210:50:13"},"nodeType":"YulExpressionStatement","src":"15210:50:13"},{"nodeType":"YulAssignment","src":"15269:52:13","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15306:6:13"},{"name":"tail_1","nodeType":"YulIdentifier","src":"15314:6:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"15277:28:13"},"nodeType":"YulFunctionCall","src":"15277:44:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15269:4:13"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15052:9:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15063:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15071:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15082:4:13","type":""}],"src":"14862:465:13"},{"body":{"nodeType":"YulBlock","src":"15506:231:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15523:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15534:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15516:6:13"},"nodeType":"YulFunctionCall","src":"15516:21:13"},"nodeType":"YulExpressionStatement","src":"15516:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15557:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15568:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15553:3:13"},"nodeType":"YulFunctionCall","src":"15553:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"15573:2:13","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15546:6:13"},"nodeType":"YulFunctionCall","src":"15546:30:13"},"nodeType":"YulExpressionStatement","src":"15546:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15596:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15607:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15592:3:13"},"nodeType":"YulFunctionCall","src":"15592:18:13"},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c20737461747573","kind":"string","nodeType":"YulLiteral","src":"15612:34:13","type":"","value":"ERC1155: setting approval status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15585:6:13"},"nodeType":"YulFunctionCall","src":"15585:62:13"},"nodeType":"YulExpressionStatement","src":"15585:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15667:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15678:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15663:3:13"},"nodeType":"YulFunctionCall","src":"15663:18:13"},{"hexValue":"20666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"15683:11:13","type":"","value":" for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15656:6:13"},"nodeType":"YulFunctionCall","src":"15656:39:13"},"nodeType":"YulExpressionStatement","src":"15656:39:13"},{"nodeType":"YulAssignment","src":"15704:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15716:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15727:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15712:3:13"},"nodeType":"YulFunctionCall","src":"15712:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15704:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15483:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15497:4:13","type":""}],"src":"15332:405:13"},{"body":{"nodeType":"YulBlock","src":"15871:119:13","statements":[{"nodeType":"YulAssignment","src":"15881:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15893:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15904:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15889:3:13"},"nodeType":"YulFunctionCall","src":"15889:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15881:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15923:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"15934:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15916:6:13"},"nodeType":"YulFunctionCall","src":"15916:25:13"},"nodeType":"YulExpressionStatement","src":"15916:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15961:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15972:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15957:3:13"},"nodeType":"YulFunctionCall","src":"15957:18:13"},{"name":"value1","nodeType":"YulIdentifier","src":"15977:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15950:6:13"},"nodeType":"YulFunctionCall","src":"15950:34:13"},"nodeType":"YulExpressionStatement","src":"15950:34:13"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15832:9:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15843:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15851:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15862:4:13","type":""}],"src":"15742:248:13"},{"body":{"nodeType":"YulBlock","src":"16326:519:13","statements":[{"nodeType":"YulVariableDeclaration","src":"16336:52:13","value":{"kind":"number","nodeType":"YulLiteral","src":"16346:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"16340:2:13","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16404:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16419:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"16427:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16415:3:13"},"nodeType":"YulFunctionCall","src":"16415:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16397:6:13"},"nodeType":"YulFunctionCall","src":"16397:34:13"},"nodeType":"YulExpressionStatement","src":"16397:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16451:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16462:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16447:3:13"},"nodeType":"YulFunctionCall","src":"16447:18:13"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16471:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"16479:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16467:3:13"},"nodeType":"YulFunctionCall","src":"16467:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16440:6:13"},"nodeType":"YulFunctionCall","src":"16440:43:13"},"nodeType":"YulExpressionStatement","src":"16440:43:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16503:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16514:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16499:3:13"},"nodeType":"YulFunctionCall","src":"16499:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"16519:3:13","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16492:6:13"},"nodeType":"YulFunctionCall","src":"16492:31:13"},"nodeType":"YulExpressionStatement","src":"16492:31:13"},{"nodeType":"YulVariableDeclaration","src":"16532:71:13","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16575:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16587:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16598:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16583:3:13"},"nodeType":"YulFunctionCall","src":"16583:19:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"16546:28:13"},"nodeType":"YulFunctionCall","src":"16546:57:13"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"16536:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16623:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16634:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16619:3:13"},"nodeType":"YulFunctionCall","src":"16619:18:13"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"16643:6:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"16651:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16639:3:13"},"nodeType":"YulFunctionCall","src":"16639:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16612:6:13"},"nodeType":"YulFunctionCall","src":"16612:50:13"},"nodeType":"YulExpressionStatement","src":"16612:50:13"},{"nodeType":"YulVariableDeclaration","src":"16671:58:13","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16714:6:13"},{"name":"tail_1","nodeType":"YulIdentifier","src":"16722:6:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"16685:28:13"},"nodeType":"YulFunctionCall","src":"16685:44:13"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"16675:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16749:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16760:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16745:3:13"},"nodeType":"YulFunctionCall","src":"16745:19:13"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"16770:6:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"16778:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16766:3:13"},"nodeType":"YulFunctionCall","src":"16766:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16738:6:13"},"nodeType":"YulFunctionCall","src":"16738:51:13"},"nodeType":"YulExpressionStatement","src":"16738:51:13"},{"nodeType":"YulAssignment","src":"16798:41:13","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"16824:6:13"},{"name":"tail_2","nodeType":"YulIdentifier","src":"16832:6:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"16806:17:13"},"nodeType":"YulFunctionCall","src":"16806:33:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16798:4:13"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16263:9:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16274:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16282:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16290:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16298:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16306:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16317:4:13","type":""}],"src":"15995:850:13"},{"body":{"nodeType":"YulBlock","src":"16930:169:13","statements":[{"body":{"nodeType":"YulBlock","src":"16976:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16985:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16988:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16978:6:13"},"nodeType":"YulFunctionCall","src":"16978:12:13"},"nodeType":"YulExpressionStatement","src":"16978:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16951:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"16960:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16947:3:13"},"nodeType":"YulFunctionCall","src":"16947:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"16972:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16943:3:13"},"nodeType":"YulFunctionCall","src":"16943:32:13"},"nodeType":"YulIf","src":"16940:52:13"},{"nodeType":"YulVariableDeclaration","src":"17001:29:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17020:9:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17014:5:13"},"nodeType":"YulFunctionCall","src":"17014:16:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"17005:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17063:5:13"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"17039:23:13"},"nodeType":"YulFunctionCall","src":"17039:30:13"},"nodeType":"YulExpressionStatement","src":"17039:30:13"},{"nodeType":"YulAssignment","src":"17078:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"17088:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17078:6:13"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16896:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16907:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16919:6:13","type":""}],"src":"16850:249:13"},{"body":{"nodeType":"YulBlock","src":"17147:136:13","statements":[{"body":{"nodeType":"YulBlock","src":"17192:85:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17221:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17224:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17227:1:13","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"17206:14:13"},"nodeType":"YulFunctionCall","src":"17206:23:13"},"nodeType":"YulExpressionStatement","src":"17206:23:13"},{"nodeType":"YulAssignment","src":"17242:25:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17253:3:13","type":"","value":"224"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17264:1:13","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17258:5:13"},"nodeType":"YulFunctionCall","src":"17258:8:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17249:3:13"},"nodeType":"YulFunctionCall","src":"17249:18:13"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"17242:3:13"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"17163:14:13"},"nodeType":"YulFunctionCall","src":"17163:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"17181:1:13","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17160:2:13"},"nodeType":"YulFunctionCall","src":"17160:23:13"},"nodeType":"YulIf","src":"17157:120:13"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"17139:3:13","type":""}],"src":"17104:179:13"},{"body":{"nodeType":"YulBlock","src":"17335:624:13","statements":[{"body":{"nodeType":"YulBlock","src":"17375:9:13","statements":[{"nodeType":"YulLeave","src":"17377:5:13"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"17351:14:13"},"nodeType":"YulFunctionCall","src":"17351:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"17369:4:13","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17348:2:13"},"nodeType":"YulFunctionCall","src":"17348:26:13"},"nodeType":"YulIf","src":"17345:39:13"},{"nodeType":"YulVariableDeclaration","src":"17393:21:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17411:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17405:5:13"},"nodeType":"YulFunctionCall","src":"17405:9:13"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"17397:4:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17423:16:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17437:1:13","type":"","value":"3"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17433:3:13"},"nodeType":"YulFunctionCall","src":"17433:6:13"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"17427:2:13","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17463:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"17469:1:13","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"17476:14:13"},"nodeType":"YulFunctionCall","src":"17476:16:13"},{"name":"_1","nodeType":"YulIdentifier","src":"17494:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17472:3:13"},"nodeType":"YulFunctionCall","src":"17472:25:13"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"17448:14:13"},"nodeType":"YulFunctionCall","src":"17448:50:13"},"nodeType":"YulExpressionStatement","src":"17448:50:13"},{"nodeType":"YulVariableDeclaration","src":"17507:25:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17527:4:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17521:5:13"},"nodeType":"YulFunctionCall","src":"17521:11:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17511:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17541:26:13","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"17551:14:13"},"nodeType":"YulFunctionCall","src":"17551:16:13"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"17545:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17576:28:13","value":{"kind":"number","nodeType":"YulLiteral","src":"17586:18:13","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"17580:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"17662:9:13","statements":[{"nodeType":"YulLeave","src":"17664:5:13"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17622:6:13"},{"name":"_3","nodeType":"YulIdentifier","src":"17630:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17619:2:13"},"nodeType":"YulFunctionCall","src":"17619:14:13"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17642:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"17650:4:13","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17638:3:13"},"nodeType":"YulFunctionCall","src":"17638:17:13"},{"name":"_2","nodeType":"YulIdentifier","src":"17657:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17635:2:13"},"nodeType":"YulFunctionCall","src":"17635:25:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"17616:2:13"},"nodeType":"YulFunctionCall","src":"17616:45:13"},"nodeType":"YulIf","src":"17613:58:13"},{"nodeType":"YulVariableDeclaration","src":"17680:28:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17695:4:13"},{"name":"offset","nodeType":"YulIdentifier","src":"17701:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17691:3:13"},"nodeType":"YulFunctionCall","src":"17691:17:13"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"17684:3:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17717:24:13","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"17737:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17731:5:13"},"nodeType":"YulFunctionCall","src":"17731:10:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17721:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"17768:9:13","statements":[{"nodeType":"YulLeave","src":"17770:5:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17756:6:13"},{"name":"_3","nodeType":"YulIdentifier","src":"17764:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17753:2:13"},"nodeType":"YulFunctionCall","src":"17753:14:13"},"nodeType":"YulIf","src":"17750:27:13"},{"body":{"nodeType":"YulBlock","src":"17859:9:13","statements":[{"nodeType":"YulLeave","src":"17861:5:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"17800:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"17805:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17796:3:13"},"nodeType":"YulFunctionCall","src":"17796:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"17814:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17792:3:13"},"nodeType":"YulFunctionCall","src":"17792:27:13"},{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17829:4:13"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"17835:14:13"},"nodeType":"YulFunctionCall","src":"17835:16:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17825:3:13"},"nodeType":"YulFunctionCall","src":"17825:27:13"},{"name":"_1","nodeType":"YulIdentifier","src":"17854:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17821:3:13"},"nodeType":"YulFunctionCall","src":"17821:36:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17789:2:13"},"nodeType":"YulFunctionCall","src":"17789:69:13"},"nodeType":"YulIf","src":"17786:82:13"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17897:4:13"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17911:6:13"},{"name":"length","nodeType":"YulIdentifier","src":"17919:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17907:3:13"},"nodeType":"YulFunctionCall","src":"17907:19:13"},{"kind":"number","nodeType":"YulLiteral","src":"17928:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17903:3:13"},"nodeType":"YulFunctionCall","src":"17903:30:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"17877:19:13"},"nodeType":"YulFunctionCall","src":"17877:57:13"},"nodeType":"YulExpressionStatement","src":"17877:57:13"},{"nodeType":"YulAssignment","src":"17943:10:13","value":{"name":"msg","nodeType":"YulIdentifier","src":"17950:3:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17943:3:13"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"17327:3:13","type":""}],"src":"17288:671:13"},{"body":{"nodeType":"YulBlock","src":"18138:242:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18155:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18166:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18148:6:13"},"nodeType":"YulFunctionCall","src":"18148:21:13"},"nodeType":"YulExpressionStatement","src":"18148:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18189:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18200:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18185:3:13"},"nodeType":"YulFunctionCall","src":"18185:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"18205:2:13","type":"","value":"52"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18178:6:13"},"nodeType":"YulFunctionCall","src":"18178:30:13"},"nodeType":"YulExpressionStatement","src":"18178:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18228:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18239:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18224:3:13"},"nodeType":"YulFunctionCall","src":"18224:18:13"},{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535","kind":"string","nodeType":"YulLiteral","src":"18244:34:13","type":"","value":"ERC1155: transfer to non-ERC1155"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18217:6:13"},"nodeType":"YulFunctionCall","src":"18217:62:13"},"nodeType":"YulExpressionStatement","src":"18217:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18299:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18310:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18295:3:13"},"nodeType":"YulFunctionCall","src":"18295:18:13"},{"hexValue":"526563656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"18315:22:13","type":"","value":"Receiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18288:6:13"},"nodeType":"YulFunctionCall","src":"18288:50:13"},"nodeType":"YulExpressionStatement","src":"18288:50:13"},{"nodeType":"YulAssignment","src":"18347:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18359:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18370:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18355:3:13"},"nodeType":"YulFunctionCall","src":"18355:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18347:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18115:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18129:4:13","type":""}],"src":"17964:416:13"},{"body":{"nodeType":"YulBlock","src":"18559:230:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18576:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18587:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18569:6:13"},"nodeType":"YulFunctionCall","src":"18569:21:13"},"nodeType":"YulExpressionStatement","src":"18569:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18610:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18621:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18606:3:13"},"nodeType":"YulFunctionCall","src":"18606:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"18626:2:13","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18599:6:13"},"nodeType":"YulFunctionCall","src":"18599:30:13"},"nodeType":"YulExpressionStatement","src":"18599:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18649:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18660:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18645:3:13"},"nodeType":"YulFunctionCall","src":"18645:18:13"},{"hexValue":"455243313135353a204552433131353552656365697665722072656a65637465","kind":"string","nodeType":"YulLiteral","src":"18665:34:13","type":"","value":"ERC1155: ERC1155Receiver rejecte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18638:6:13"},"nodeType":"YulFunctionCall","src":"18638:62:13"},"nodeType":"YulExpressionStatement","src":"18638:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18720:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18731:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18716:3:13"},"nodeType":"YulFunctionCall","src":"18716:18:13"},{"hexValue":"6420746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"18736:10:13","type":"","value":"d tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18709:6:13"},"nodeType":"YulFunctionCall","src":"18709:38:13"},"nodeType":"YulExpressionStatement","src":"18709:38:13"},{"nodeType":"YulAssignment","src":"18756:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18768:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18779:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18764:3:13"},"nodeType":"YulFunctionCall","src":"18764:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18756:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18536:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18550:4:13","type":""}],"src":"18385:404:13"},{"body":{"nodeType":"YulBlock","src":"19025:353:13","statements":[{"nodeType":"YulVariableDeclaration","src":"19035:52:13","value":{"kind":"number","nodeType":"YulLiteral","src":"19045:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"19039:2:13","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19103:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19118:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"19126:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19114:3:13"},"nodeType":"YulFunctionCall","src":"19114:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19096:6:13"},"nodeType":"YulFunctionCall","src":"19096:34:13"},"nodeType":"YulExpressionStatement","src":"19096:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19150:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19161:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19146:3:13"},"nodeType":"YulFunctionCall","src":"19146:18:13"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19170:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"19178:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19166:3:13"},"nodeType":"YulFunctionCall","src":"19166:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19139:6:13"},"nodeType":"YulFunctionCall","src":"19139:43:13"},"nodeType":"YulExpressionStatement","src":"19139:43:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19202:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19213:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19198:3:13"},"nodeType":"YulFunctionCall","src":"19198:18:13"},{"name":"value2","nodeType":"YulIdentifier","src":"19218:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19191:6:13"},"nodeType":"YulFunctionCall","src":"19191:34:13"},"nodeType":"YulExpressionStatement","src":"19191:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19245:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19256:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19241:3:13"},"nodeType":"YulFunctionCall","src":"19241:18:13"},{"name":"value3","nodeType":"YulIdentifier","src":"19261:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19234:6:13"},"nodeType":"YulFunctionCall","src":"19234:34:13"},"nodeType":"YulExpressionStatement","src":"19234:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19288:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19299:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19284:3:13"},"nodeType":"YulFunctionCall","src":"19284:19:13"},{"kind":"number","nodeType":"YulLiteral","src":"19305:3:13","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19277:6:13"},"nodeType":"YulFunctionCall","src":"19277:32:13"},"nodeType":"YulExpressionStatement","src":"19277:32:13"},{"nodeType":"YulAssignment","src":"19318:54:13","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"19344:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19356:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19367:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19352:3:13"},"nodeType":"YulFunctionCall","src":"19352:19:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"19326:17:13"},"nodeType":"YulFunctionCall","src":"19326:46:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19318:4:13"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18962:9:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18973:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18981:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18989:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18997:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19005:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19016:4:13","type":""}],"src":"18794:584:13"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_uint256_t_uint256_t_uint256_t_address_payable_t_address_payable_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_array$_t_address_payable_$dyn_memory_ptr__to_t_array$_t_address_payable_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c78a945367e2a6899352bb4d45dcf95cd13d085cfc3f1dc5c7d2b9759890d17a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"You have not placed any bet in t\")\n        mstore(add(headStart, 96), \"his auction\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_4446e7cad40a0f0bf90a99c8349fd6e70447f532f99bb8e8209f05d74b81f6bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 62)\n        mstore(add(headStart, 64), \"Bid placed must be higher than t\")\n        mstore(add(headStart, 96), \"he evaluation of the timestamp\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x70740AC9 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x8D07AE9F EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x9979EF45 EQ PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x3A6DCEA2 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x3A79D2E5 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x4935E740 EQ PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x14034BD2 EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x124A JUMP JUMPDEST PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x128C JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x146E JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x648 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x83A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x8CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A1 JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x146E JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x35C CALLDATASIZE PUSH1 0x4 PUSH2 0x16DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x170D JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x446 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x4A0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x469 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x469 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x4CE SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FA SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x547 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x547 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x56F JUMPI POP PUSH2 0x56F DUP6 CALLER PUSH2 0x35C JUMP JUMPDEST PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH2 0x5DF DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA57 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x63E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x620 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x70E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F7420706C6163656420616E792062657420696E2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3434B99030BAB1BA34B7B7 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x791 JUMPI PUSH2 0x791 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7BA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x832 JUMPI PUSH2 0x805 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7DE JUMPI PUSH2 0x7DE PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7F8 JUMPI PUSH2 0x7F8 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3D6 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x817 JUMPI PUSH2 0x817 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x82B DUP2 PUSH2 0x17DC JUMP JUMPDEST SWAP1 POP PUSH2 0x7C0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x70E JUMPI PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x888 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x8BD ADDRESS PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 SLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9CB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 GT PUSH2 0x946 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42696420706C61636564206D75737420626520686967686572207468616E2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6865206576616C756174696F6E206F66207468652074696D657374616D700000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 SLOAD DUP2 GT ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH2 0x9C7 CALLER DUP4 DUP4 PUSH2 0xCB5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x9E7 JUMPI POP PUSH2 0x9E7 DUP6 CALLER PUSH2 0x35C JUMP JUMPDEST PUSH2 0xA4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH2 0x5DF DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD95 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xC47 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB3E JUMPI PUSH2 0xB3E PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB5C JUMPI PUSH2 0xB5C PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xC2C SWAP1 DUP5 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xC40 SWAP1 PUSH2 0x17DC JUMP JUMPDEST SWAP1 POP PUSH2 0xB21 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xC97 SWAP3 SWAP2 SWAP1 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xCAD DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF40 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xD28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xE05 DUP6 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE12 DUP6 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0xE98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xED5 SWAP1 DUP5 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF35 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1139 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xF84 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1836 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFBF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xFBC SWAP2 DUP2 ADD SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1074 JUMPI PUSH2 0xFCB PUSH2 0x18B1 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1004 JUMPI POP PUSH2 0xFDF PUSH2 0x18CD JUMP JUMPDEST DUP1 PUSH2 0xFEA JUMPI POP PUSH2 0x1006 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x10E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1128 JUMPI PUSH2 0x1128 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x117D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11B8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11B5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11C4 JUMPI PUSH2 0xFCB PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x10E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x125D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1268 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12A9 DUP2 PUSH2 0x1276 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12EF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x12D3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12C9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x135E JUMPI PUSH2 0x135E PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x137F JUMPI PUSH2 0x137F PUSH2 0x1322 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x139A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x13A7 DUP3 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B4 DUP3 DUP3 PUSH2 0x1338 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x13D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x13EF JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x13D8 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x140B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1425 JUMPI PUSH2 0x1425 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143C PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1338 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1491 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x14A1 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x14BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14CA DUP10 DUP4 DUP11 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x14E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14EC DUP10 DUP4 DUP11 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150F DUP9 DUP3 DUP10 ADD PUSH2 0x13FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x155D JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1538 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x157C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x15B5 DUP3 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C2 DUP3 DUP3 PUSH2 0x1338 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x15E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1609 JUMPI DUP6 CALLDATALOAD PUSH2 0x15FA DUP2 PUSH2 0x1235 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x161F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162C DUP6 DUP3 DUP7 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1666 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x164A JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12A9 DUP2 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x16BF DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x16D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x16FD DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x16D4 DUP2 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1730 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1740 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x176A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x150F DUP9 DUP3 DUP10 ADD PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x178A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x17EE JUMPI PUSH2 0x17EE PUSH2 0x17C6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x469 JUMPI PUSH2 0x469 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x181B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1636 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x182D DUP2 DUP6 PUSH2 0x1636 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1862 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1636 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1874 DUP2 DUP7 PUSH2 0x1636 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1888 DUP2 DUP6 PUSH2 0x12C9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x12A9 DUP2 PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x18CA JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x18DB JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x190B JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1923 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x193D JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x194C PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1338 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x198F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x12C9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0xDC 0xF8 0xDA PUSH2 0x9A40 0x24 PUSH30 0x35B57C20562F5CDCCA4D1D031E533B6D35E929B0AA3B5564736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"298:3196:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227:1;;;;;;;;;;-1:-1:-1;2185:227:1;;;;;:::i;:::-;;:::i;:::-;;;639:25:13;;;627:2;612:18;2185:227:1;;;;;;;;1236:305;;;;;;;;;;-1:-1:-1;1236:305:1;;;;;:::i;:::-;;:::i;:::-;;;1226:14:13;;1219:22;1201:41;;1189:2;1174:18;1236:305:1;1061:187:13;1940:103:1;;;;;;;;;;-1:-1:-1;1940:103:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1907:218:10:-;;;;;;;;;;-1:-1:-1;2104:13:10;;1907:218;;-1:-1:-1;;;;;2104:13:10;;;2253:74:13;;2241:2;2226:18;1907:218:10;2091:242:13;4042:426:1;;;;;;;;;;-1:-1:-1;4042:426:1;;;;;:::i;:::-;;:::i;:::-;;959:214:10;;;;;;;;;;-1:-1:-1;1092:8:10;;1101:16;;1118:10;;1129:11;;1141:13;;1155:9;;959:214;;;5596:25:13;;;5652:2;5637:18;;5630:34;;;;5680:18;;;5673:34;;;;-1:-1:-1;;;;;1129:11:10;;;5799:2:13;5784:18;;5777:43;1141:13:10;5851:3:13;5836:19;;5829:44;5904:3;5889:19;;5882:35;5583:3;5568:19;959:214:10;5277:646:13;1181:106:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2133:492::-;;;:::i;2569:486:1:-;;;;;;;;;;-1:-1:-1;2569:486:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2633:410:10:-;;;:::i;1295:123::-;;;;;;;;;;-1:-1:-1;1295:123:10;;;;;:::i;:::-;-1:-1:-1;;;;;1391:18:10;1364:7;1391:18;;;:10;:18;;;;;;;1295:123;1426:473;;;;;;:::i;:::-;;:::i;3123:153:1:-;;;;;;;;;;-1:-1:-1;3123:153:1;;;;;:::i;:::-;;:::i;3225:194:10:-;;;;;;;;;;-1:-1:-1;3225:194:10;;;;;:::i;:::-;-1:-1:-1;;;3225:194:10;;;;;;;;;;;-1:-1:-1;;;;;;9461:33:13;;;9443:52;;9431:2;9416:18;3225:194:10;9299:202:13;3343:166:1;;;;;;;;;;-1:-1:-1;3343:166:1;;;;;:::i;:::-;-1:-1:-1;;;;;3465:27:1;;;3442:4;3465:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3343:166;3051::10;;;;;;;;;;-1:-1:-1;3051:166:10;;;;;:::i;:::-;-1:-1:-1;;;3051:166:10;;;;;;;;3576:394:1;;;;;;;;;;-1:-1:-1;3576:394:1;;;;;:::i;:::-;;:::i;2185:227::-;2271:7;-1:-1:-1;;;;;2298:21:1;;2290:76;;;;-1:-1:-1;;;2290:76:1;;10840:2:13;2290:76:1;;;10822:21:13;10879:2;10859:18;;;10852:30;10918:34;10898:18;;;10891:62;-1:-1:-1;;;10969:18:13;;;10962:40;11019:19;;2290:76:1;;;;;;;;;-1:-1:-1;2383:9:1;:13;;;;;;;;;;;-1:-1:-1;;;;;2383:22:1;;;;;;;;;;2185:227;;;;;:::o;1236:305::-;1338:4;-1:-1:-1;;;;;;1373:41:1;;-1:-1:-1;;;1373:41:1;;:109;;-1:-1:-1;;;;;;;1430:52:1;;-1:-1:-1;;;1430:52:1;1373:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:8;;;1498:36:1;829:155:8;1940:103:1;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4042:426::-;-1:-1:-1;;;;;4267:20:1;;719:10:6;4267:20:1;;:60;;-1:-1:-1;4291:36:1;4308:4;719:10:6;3343:166:1;:::i;4291:36::-;4246:153;;;;-1:-1:-1;;;4246:153:1;;11636:2:13;4246:153:1;;;11618:21:13;11675:2;11655:18;;;11648:30;11714:34;11694:18;;;11687:62;-1:-1:-1;;;11765:18:13;;;11758:44;11819:19;;4246:153:1;11434:410:13;4246:153:1;4409:52;4432:4;4438:2;4442:3;4447:7;4456:4;4409:22;:52::i;:::-;4042:426;;;;;:::o;1181:106:10:-;1228:25;1272:7;1265:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1265:14:10;;;;;;;;;;;;;;;;;;;;;;;1181:106;:::o;2133:492::-;2338:13;;-1:-1:-1;;;;;2338:13:10;2324:10;2308:43;2305:313;;2398:10;2367:17;2387:22;;;:10;:22;;;;;;;2432:12;;;2424:69;;;;-1:-1:-1;;;2424:69:10;;12051:2:13;2424:69:10;;;12033:21:13;12090:2;12070:18;;;12063:30;12129:34;12109:18;;;12102:62;-1:-1:-1;;;12180:18:13;;;12173:41;12231:19;;2424:69:10;11849:407:13;2424:69:10;2508:48;;2524:10;;2508:48;;;;;2546:9;;2508:48;;;;2546:9;2524:10;2508:48;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2590:10:10;2605:1;2571:31;;;:10;:31;;;;;:35;2305:313;2133:492::o;2569:486:1:-;2702:16;2757:3;:10;2738:8;:15;:29;2730:83;;;;-1:-1:-1;;;2730:83:1;;12463:2:13;2730:83:1;;;12445:21:13;12502:2;12482:18;;;12475:30;12541:34;12521:18;;;12514:62;-1:-1:-1;;;12592:18:13;;;12585:39;12641:19;;2730:83:1;12261:405:13;2730:83:1;2824:30;2871:8;:15;2857:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2857:30:1;;2824:63;;2903:9;2898:120;2922:8;:15;2918:1;:19;2898:120;;;2977:30;2987:8;2996:1;2987:11;;;;;;;;:::i;:::-;;;;;;;3000:3;3004:1;3000:6;;;;;;;;:::i;:::-;;;;;;;2977:9;:30::i;:::-;2958:13;2972:1;2958:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2939:3;;;:::i;:::-;;;2898:120;;;-1:-1:-1;3035:13:1;2569:486;-1:-1:-1;;;2569:486:1:o;2633:410:10:-;2833:13;;-1:-1:-1;;;;;2833:13:10;2819:10;2803:43;2800:234;;2862:11;;2883:10;;2862:32;;-1:-1:-1;;;;;2862:11:10;;;;:32;;;;;2883:10;2862:11;:32;:11;:32;2883:10;2862:11;:32;;;;;;;;;;;;;;;;;;;;;2909:63;2934:4;2941:13;;;;;;;;;-1:-1:-1;;;;;2941:13:10;2956:8;;2966:1;2909:63;;;;;;;;;;;;:16;:63::i;:::-;3006:10;3021:1;2987:31;;;:10;:31;;;;;:35;2633:410::o;1426:473::-;1586:16;;1582:3;:20;1574:95;;;;-1:-1:-1;;;1574:95:10;;13277:2:13;1574:95:10;;;13259:21:13;13316:2;13296:18;;;13289:30;13355:34;13335:18;;;13328:62;13426:32;13406:18;;;13399:60;13476:19;;1574:95:10;13075:426:13;1574:95:10;1691:10;1680:22;;;;:10;:22;;;;;:28;;;1719:7;:42;;;;;;;;;;;;;-1:-1:-1;;;;;;1719:42:10;;;;;;1775:10;;:14;-1:-1:-1;1772:120:10;;;1805:10;:16;;;1836:13;:44;;-1:-1:-1;;;;;;1836:44:10;1868:10;1836:44;;;1772:120;1426:473;:::o;3123:153:1:-;3217:52;719:10:6;3250:8:1;3260;3217:18;:52::i;:::-;3123:153;;:::o;3576:394::-;-1:-1:-1;;;;;3776:20:1;;719:10:6;3776:20:1;;:60;;-1:-1:-1;3800:36:1;3817:4;719:10:6;3343:166:1;:::i;3800:36::-;3755:153;;;;-1:-1:-1;;;3755:153:1;;11636:2:13;3755:153:1;;;11618:21:13;11675:2;11655:18;;;11648:30;11714:34;11694:18;;;11687:62;-1:-1:-1;;;11765:18:13;;;11758:44;11819:19;;3755:153:1;11434:410:13;3755:153:1;3918:45;3936:4;3942:2;3946;3950:6;3958:4;3918:17;:45::i;6211:1115::-;6431:7;:14;6417:3;:10;:28;6409:81;;;;-1:-1:-1;;;6409:81:1;;13708:2:13;6409:81:1;;;13690:21:13;13747:2;13727:18;;;13720:30;13786:34;13766:18;;;13759:62;-1:-1:-1;;;13837:18:13;;;13830:38;13885:19;;6409:81:1;13506:404:13;6409:81:1;-1:-1:-1;;;;;6508:16:1;;6500:66;;;;-1:-1:-1;;;6500:66:1;;14117:2:13;6500:66:1;;;14099:21:13;14156:2;14136:18;;;14129:30;14195:34;14175:18;;;14168:62;-1:-1:-1;;;14246:18:13;;;14239:35;14291:19;;6500:66:1;13915:401:13;6500:66:1;719:10:6;6577:16:1;6690:411;6714:3;:10;6710:1;:14;6690:411;;;6745:10;6758:3;6762:1;6758:6;;;;;;;;:::i;:::-;;;;;;;6745:19;;6778:14;6795:7;6803:1;6795:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6820:19;6842:13;;;;;;;;;;-1:-1:-1;;;;;6842:19:1;;;;;;;;;;;;6795:10;;-1:-1:-1;6883:21:1;;;;6875:76;;;;-1:-1:-1;;;6875:76:1;;14523:2:13;6875:76:1;;;14505:21:13;14562:2;14542:18;;;14535:30;14601:34;14581:18;;;14574:62;-1:-1:-1;;;14652:18:13;;;14645:40;14702:19;;6875:76:1;14321:406:13;6875:76:1;6993:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6993:19:1;;;;;;;;;;7015:20;;;6993:42;;7063:17;;;;;;;:27;;7015:20;;6993:9;7063:27;;7015:20;;7063:27;:::i;:::-;;;;;;;;6731:370;;;6726:3;;;;:::i;:::-;;;6690:411;;;;7146:2;-1:-1:-1;;;;;7116:47:1;7140:4;-1:-1:-1;;;;;7116:47:1;7130:8;-1:-1:-1;;;;;7116:47:1;;7150:3;7155:7;7116:47;;;;;;;:::i;:::-;;;;;;;;7244:75;7280:8;7290:4;7296:2;7300:3;7305:7;7314:4;7244:35;:75::i;:::-;6399:927;6211:1115;;;;;:::o;12790:293::-;12910:8;-1:-1:-1;;;;;12901:17:1;:5;-1:-1:-1;;;;;12901:17:1;;12893:71;;;;-1:-1:-1;;;12893:71:1;;15534:2:13;12893:71:1;;;15516:21:13;15573:2;15553:18;;;15546:30;15612:34;15592:18;;;15585:62;-1:-1:-1;;;15663:18:13;;;15656:39;15712:19;;12893:71:1;15332:405:13;12893:71:1;-1:-1:-1;;;;;12974:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12974:46:1;;;;;;;;;;13035:41;;1201::13;;;13035::1;;1174:18:13;13035:41:1;;;;;;;12790:293;;;:::o;4918:947::-;-1:-1:-1;;;;;5099:16:1;;5091:66;;;;-1:-1:-1;;;5091:66:1;;14117:2:13;5091:66:1;;;14099:21:13;14156:2;14136:18;;;14129:30;14195:34;14175:18;;;14168:62;-1:-1:-1;;;14246:18:13;;;14239:35;14291:19;;5091:66:1;13915:401:13;5091:66:1;719:10:6;5168:16:1;5232:21;5250:2;5232:17;:21::i;:::-;5209:44;;5263:24;5290:25;5308:6;5290:17;:25::i;:::-;5263:52;;5397:19;5419:13;;;;;;;;;;;-1:-1:-1;;;;;5419:19:1;;;;;;;;;;5456:21;;;;5448:76;;;;-1:-1:-1;;;5448:76:1;;14523:2:13;5448:76:1;;;14505:21:13;14562:2;14542:18;;;14535:30;14601:34;14581:18;;;14574:62;-1:-1:-1;;;14652:18:13;;;14645:40;14702:19;;5448:76:1;14321:406:13;5448:76:1;5558:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5558:19:1;;;;;;;;;;5580:20;;;5558:42;;5620:17;;;;;;;:27;;5580:20;;5558:9;5620:27;;5580:20;;5620:27;:::i;:::-;;;;-1:-1:-1;;5663:46:1;;;15916:25:13;;;15972:2;15957:18;;15950:34;;;-1:-1:-1;;;;;5663:46:1;;;;;;;;;;;;;;15889:18:13;5663:46:1;;;;;;;5790:68;5821:8;5831:4;5837:2;5841;5845:6;5853:4;5790:30;:68::i;:::-;5081:784;;;;4918:947;;;;;:::o;16116:792::-;-1:-1:-1;;;;;16348:13:1;;1702:19:5;:23;16344:558:1;;16383:79;;-1:-1:-1;;;16383:79:1;;-1:-1:-1;;;;;16383:43:1;;;;;:79;;16427:8;;16437:4;;16443:3;;16448:7;;16457:4;;16383:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16383:79:1;;;;;;;;-1:-1:-1;;16383:79:1;;;;;;;;;;;;:::i;:::-;;;16379:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16768:6;16761:14;;-1:-1:-1;;;16761:14:1;;;;;;;;:::i;16379:513::-;;;16815:62;;-1:-1:-1;;;16815:62:1;;18166:2:13;16815:62:1;;;18148:21:13;18205:2;18185:18;;;18178:30;18244:34;18224:18;;;18217:62;18315:22;18295:18;;;18288:50;18355:19;;16815:62:1;17964:416:13;16379:513:1;-1:-1:-1;;;;;;16541:60:1;;-1:-1:-1;;;16541:60:1;16537:157;;16625:50;;-1:-1:-1;;;16625:50:1;;18587:2:13;16625:50:1;;;18569:21:13;18626:2;18606:18;;;18599:30;18665:34;18645:18;;;18638:62;-1:-1:-1;;;18716:18:13;;;18709:38;18764:19;;16625:50:1;18385:404:13;16537:157:1;16463:245;16116:792;;;;;;:::o;16914:193::-;17033:16;;;17047:1;17033:16;;;;;;;;;16980;;17008:22;;17033:16;;;;;;;;;;;;-1:-1:-1;17033:16:1;17008:41;;17070:7;17059:5;17065:1;17059:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17095:5;16914:193;-1:-1:-1;;16914:193:1:o;15385:725::-;-1:-1:-1;;;;;15592:13:1;;1702:19:5;:23;15588:516:1;;15627:72;;-1:-1:-1;;;15627:72:1;;-1:-1:-1;;;;;15627:38:1;;;;;:72;;15666:8;;15676:4;;15682:2;;15686:6;;15694:4;;15627:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15627:72:1;;;;;;;;-1:-1:-1;;15627:72:1;;;;;;;;;;;;:::i;:::-;;;15623:471;;;;:::i;:::-;-1:-1:-1;;;;;;15748:55:1;;-1:-1:-1;;;15748:55:1;15744:152;;15827:50;;-1:-1:-1;;;15827:50:1;;18587:2:13;15827:50:1;;;18569:21:13;18626:2;18606:18;;;18599:30;18665:34;18645:18;;;18638:62;-1:-1:-1;;;18716:18:13;;;18709:38;18764:19;;15827:50:1;18385:404:13;14:154;-1:-1:-1;;;;;93:5:13;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:315;241:6;249;302:2;290:9;281:7;277:23;273:32;270:52;;;318:1;315;308:12;270:52;357:9;344:23;376:31;401:5;376:31;:::i;:::-;426:5;478:2;463:18;;;;450:32;;-1:-1:-1;;;173:315:13:o;675:131::-;-1:-1:-1;;;;;;749:32:13;;739:43;;729:71;;796:1;793;786:12;811:245;869:6;922:2;910:9;901:7;897:23;893:32;890:52;;;938:1;935;928:12;890:52;977:9;964:23;996:30;1020:5;996:30;:::i;:::-;1045:5;811:245;-1:-1:-1;;;811:245:13:o;1253:180::-;1312:6;1365:2;1353:9;1344:7;1340:23;1336:32;1333:52;;;1381:1;1378;1371:12;1333:52;-1:-1:-1;1404:23:13;;1253:180;-1:-1:-1;1253:180:13:o;1438:423::-;1480:3;1518:5;1512:12;1545:6;1540:3;1533:19;1570:1;1580:162;1594:6;1591:1;1588:13;1580:162;;;1656:4;1712:13;;;1708:22;;1702:29;1684:11;;;1680:20;;1673:59;1609:12;1580:162;;;1584:3;1787:1;1780:4;1771:6;1766:3;1762:16;1758:27;1751:38;1850:4;1843:2;1839:7;1834:2;1826:6;1822:15;1818:29;1813:3;1809:39;1805:50;1798:57;;;1438:423;;;;:::o;1866:220::-;2015:2;2004:9;1997:21;1978:4;2035:45;2076:2;2065:9;2061:18;2053:6;2035:45;:::i;2338:127::-;2399:10;2394:3;2390:20;2387:1;2380:31;2430:4;2427:1;2420:15;2454:4;2451:1;2444:15;2470:249;2580:2;2561:13;;-1:-1:-1;;2557:27:13;2545:40;;2615:18;2600:34;;2636:22;;;2597:62;2594:88;;;2662:18;;:::i;:::-;2698:2;2691:22;-1:-1:-1;;2470:249:13:o;2724:183::-;2784:4;2817:18;2809:6;2806:30;2803:56;;;2839:18;;:::i;:::-;-1:-1:-1;2884:1:13;2880:14;2896:4;2876:25;;2724:183::o;2912:724::-;2966:5;3019:3;3012:4;3004:6;3000:17;2996:27;2986:55;;3037:1;3034;3027:12;2986:55;3073:6;3060:20;3099:4;3122:43;3162:2;3122:43;:::i;:::-;3194:2;3188:9;3206:31;3234:2;3226:6;3206:31;:::i;:::-;3272:18;;;3364:1;3360:10;;;;3348:23;;3344:32;;;3306:15;;;;-1:-1:-1;3388:15:13;;;3385:35;;;3416:1;3413;3406:12;3385:35;3452:2;3444:6;3440:15;3464:142;3480:6;3475:3;3472:15;3464:142;;;3546:17;;3534:30;;3584:12;;;;3497;;3464:142;;;-1:-1:-1;3624:6:13;2912:724;-1:-1:-1;;;;;;2912:724:13:o;3641:555::-;3683:5;3736:3;3729:4;3721:6;3717:17;3713:27;3703:55;;3754:1;3751;3744:12;3703:55;3790:6;3777:20;3816:18;3812:2;3809:26;3806:52;;;3838:18;;:::i;:::-;3887:2;3881:9;3899:67;3954:2;3935:13;;-1:-1:-1;;3931:27:13;3960:4;3927:38;3881:9;3899:67;:::i;:::-;3990:2;3982:6;3975:18;4036:3;4029:4;4024:2;4016:6;4012:15;4008:26;4005:35;4002:55;;;4053:1;4050;4043:12;4002:55;4117:2;4110:4;4102:6;4098:17;4091:4;4083:6;4079:17;4066:54;4164:1;4140:15;;;4157:4;4136:26;4129:37;;;;4144:6;3641:555;-1:-1:-1;;;3641:555:13:o;4201:1071::-;4355:6;4363;4371;4379;4387;4440:3;4428:9;4419:7;4415:23;4411:33;4408:53;;;4457:1;4454;4447:12;4408:53;4496:9;4483:23;4515:31;4540:5;4515:31;:::i;:::-;4565:5;-1:-1:-1;4622:2:13;4607:18;;4594:32;4635:33;4594:32;4635:33;:::i;:::-;4687:7;-1:-1:-1;4745:2:13;4730:18;;4717:32;4768:18;4798:14;;;4795:34;;;4825:1;4822;4815:12;4795:34;4848:61;4901:7;4892:6;4881:9;4877:22;4848:61;:::i;:::-;4838:71;;4962:2;4951:9;4947:18;4934:32;4918:48;;4991:2;4981:8;4978:16;4975:36;;;5007:1;5004;4997:12;4975:36;5030:63;5085:7;5074:8;5063:9;5059:24;5030:63;:::i;:::-;5020:73;;5146:3;5135:9;5131:19;5118:33;5102:49;;5176:2;5166:8;5163:16;5160:36;;;5192:1;5189;5182:12;5160:36;;5215:51;5258:7;5247:8;5236:9;5232:24;5215:51;:::i;:::-;5205:61;;;4201:1071;;;;;;;;:::o;5928:697::-;6115:2;6167:21;;;6237:13;;6140:18;;;6259:22;;;6086:4;;6115:2;6338:15;;;;6312:2;6297:18;;;6086:4;6381:218;6395:6;6392:1;6389:13;6381:218;;;6460:13;;-1:-1:-1;;;;;6456:62:13;6444:75;;6574:15;;;;6539:12;;;;6417:1;6410:9;6381:218;;;-1:-1:-1;6616:3:13;;5928:697;-1:-1:-1;;;;;;5928:697:13:o;6630:1277::-;6748:6;6756;6809:2;6797:9;6788:7;6784:23;6780:32;6777:52;;;6825:1;6822;6815:12;6777:52;6865:9;6852:23;6894:18;6935:2;6927:6;6924:14;6921:34;;;6951:1;6948;6941:12;6921:34;6989:6;6978:9;6974:22;6964:32;;7034:7;7027:4;7023:2;7019:13;7015:27;7005:55;;7056:1;7053;7046:12;7005:55;7092:2;7079:16;7114:4;7137:43;7177:2;7137:43;:::i;:::-;7209:2;7203:9;7221:31;7249:2;7241:6;7221:31;:::i;:::-;7287:18;;;7375:1;7371:10;;;;7363:19;;7359:28;;;7321:15;;;;-1:-1:-1;7399:19:13;;;7396:39;;;7431:1;7428;7421:12;7396:39;7455:11;;;;7475:217;7491:6;7486:3;7483:15;7475:217;;;7571:3;7558:17;7588:31;7613:5;7588:31;:::i;:::-;7632:18;;7508:12;;;;7670;;;;7475:217;;;7711:6;-1:-1:-1;;7755:18:13;;7742:32;;-1:-1:-1;;7786:16:13;;;7783:36;;;7815:1;7812;7805:12;7783:36;;7838:63;7893:7;7882:8;7871:9;7867:24;7838:63;:::i;:::-;7828:73;;;6630:1277;;;;;:::o;7912:435::-;7965:3;8003:5;7997:12;8030:6;8025:3;8018:19;8056:4;8085:2;8080:3;8076:12;8069:19;;8122:2;8115:5;8111:14;8143:1;8153:169;8167:6;8164:1;8161:13;8153:169;;;8228:13;;8216:26;;8262:12;;;;8297:15;;;;8189:1;8182:9;8153:169;;;-1:-1:-1;8338:3:13;;7912:435;-1:-1:-1;;;;;7912:435:13:o;8352:261::-;8531:2;8520:9;8513:21;8494:4;8551:56;8603:2;8592:9;8588:18;8580:6;8551:56;:::i;8618:255::-;8685:6;8738:2;8726:9;8717:7;8713:23;8709:32;8706:52;;;8754:1;8751;8744:12;8706:52;8793:9;8780:23;8812:31;8837:5;8812:31;:::i;8878:416::-;8943:6;8951;9004:2;8992:9;8983:7;8979:23;8975:32;8972:52;;;9020:1;9017;9010:12;8972:52;9059:9;9046:23;9078:31;9103:5;9078:31;:::i;:::-;9128:5;-1:-1:-1;9185:2:13;9170:18;;9157:32;9227:15;;9220:23;9208:36;;9198:64;;9258:1;9255;9248:12;9198:64;9281:7;9271:17;;;8878:416;;;;;:::o;9506:388::-;9574:6;9582;9635:2;9623:9;9614:7;9610:23;9606:32;9603:52;;;9651:1;9648;9641:12;9603:52;9690:9;9677:23;9709:31;9734:5;9709:31;:::i;:::-;9759:5;-1:-1:-1;9816:2:13;9801:18;;9788:32;9829:33;9788:32;9829:33;:::i;9899:734::-;10003:6;10011;10019;10027;10035;10088:3;10076:9;10067:7;10063:23;10059:33;10056:53;;;10105:1;10102;10095:12;10056:53;10144:9;10131:23;10163:31;10188:5;10163:31;:::i;:::-;10213:5;-1:-1:-1;10270:2:13;10255:18;;10242:32;10283:33;10242:32;10283:33;:::i;:::-;10335:7;-1:-1:-1;10389:2:13;10374:18;;10361:32;;-1:-1:-1;10440:2:13;10425:18;;10412:32;;-1:-1:-1;10495:3:13;10480:19;;10467:33;10523:18;10512:30;;10509:50;;;10555:1;10552;10545:12;10509:50;10578:49;10619:7;10610:6;10599:9;10595:22;10578:49;:::i;11049:380::-;11128:1;11124:12;;;;11171;;;11192:61;;11246:4;11238:6;11234:17;11224:27;;11192:61;11299:2;11291:6;11288:14;11268:18;11265:38;11262:161;;11345:10;11340:3;11336:20;11333:1;11326:31;11380:4;11377:1;11370:15;11408:4;11405:1;11398:15;11262:161;;11049:380;;;:::o;12671:127::-;12732:10;12727:3;12723:20;12720:1;12713:31;12763:4;12760:1;12753:15;12787:4;12784:1;12777:15;12803:127;12864:10;12859:3;12855:20;12852:1;12845:31;12895:4;12892:1;12885:15;12919:4;12916:1;12909:15;12935:135;12974:3;12995:17;;;12992:43;;13015:18;;:::i;:::-;-1:-1:-1;13062:1:13;13051:13;;12935:135::o;14732:125::-;14797:9;;;14818:10;;;14815:36;;;14831:18;;:::i;14862:465::-;15119:2;15108:9;15101:21;15082:4;15145:56;15197:2;15186:9;15182:18;15174:6;15145:56;:::i;:::-;15249:9;15241:6;15237:22;15232:2;15221:9;15217:18;15210:50;15277:44;15314:6;15306;15277:44;:::i;:::-;15269:52;14862:465;-1:-1:-1;;;;;14862:465:13:o;15995:850::-;16317:4;-1:-1:-1;;;;;16427:2:13;16419:6;16415:15;16404:9;16397:34;16479:2;16471:6;16467:15;16462:2;16451:9;16447:18;16440:43;;16519:3;16514:2;16503:9;16499:18;16492:31;16546:57;16598:3;16587:9;16583:19;16575:6;16546:57;:::i;:::-;16651:9;16643:6;16639:22;16634:2;16623:9;16619:18;16612:50;16685:44;16722:6;16714;16685:44;:::i;:::-;16671:58;;16778:9;16770:6;16766:22;16760:3;16749:9;16745:19;16738:51;16806:33;16832:6;16824;16806:33;:::i;:::-;16798:41;15995:850;-1:-1:-1;;;;;;;;15995:850:13:o;16850:249::-;16919:6;16972:2;16960:9;16951:7;16947:23;16943:32;16940:52;;;16988:1;16985;16978:12;16940:52;17020:9;17014:16;17039:30;17063:5;17039:30;:::i;17104:179::-;17139:3;17181:1;17163:16;17160:23;17157:120;;;17227:1;17224;17221;17206:23;-1:-1:-1;17264:1:13;17258:8;17253:3;17249:18;17157:120;17104:179;:::o;17288:671::-;17327:3;17369:4;17351:16;17348:26;17345:39;;;17288:671;:::o;17345:39::-;17411:2;17405:9;-1:-1:-1;;17476:16:13;17472:25;;17469:1;17405:9;17448:50;17527:4;17521:11;17551:16;17586:18;17657:2;17650:4;17642:6;17638:17;17635:25;17630:2;17622:6;17619:14;17616:45;17613:58;;;17664:5;;;;;17288:671;:::o;17613:58::-;17701:6;17695:4;17691:17;17680:28;;17737:3;17731:10;17764:2;17756:6;17753:14;17750:27;;;17770:5;;;;;;17288:671;:::o;17750:27::-;17854:2;17835:16;17829:4;17825:27;17821:36;17814:4;17805:6;17800:3;17796:16;17792:27;17789:69;17786:82;;;17861:5;;;;;;17288:671;:::o;17786:82::-;17877:57;17928:4;17919:6;17911;17907:19;17903:30;17897:4;17877:57;:::i;:::-;-1:-1:-1;17950:3:13;;17288:671;-1:-1:-1;;;;;17288:671:13:o;18794:584::-;19016:4;-1:-1:-1;;;;;19126:2:13;19118:6;19114:15;19103:9;19096:34;19178:2;19170:6;19166:15;19161:2;19150:9;19146:18;19139:43;;19218:6;19213:2;19202:9;19198:18;19191:34;19261:6;19256:2;19245:9;19241:18;19234:34;19305:3;19299;19288:9;19284:19;19277:32;19326:46;19367:3;19356:9;19352:19;19344:6;19326:46;:::i;:::-;19318:54;18794:584;-1:-1:-1;;;;;;;18794:584:13:o"},"gasEstimates":{"creation":{"codeDepositCost":"1321600","executionCost":"infinite","totalCost":"infinite"},"external":{"balanceOf(address,uint256)":"2694","balanceOfBatch(address[],uint256[])":"infinite","claimPrize()":"infinite","declareWinner()":"2391","getAllBidders()":"infinite","getAuctionDetails()":"12963","getBidDetails(address)":"2587","isApprovedForAll(address,address)":"infinite","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"infinite","onERC1155Received(address,address,uint256,uint256,bytes)":"infinite","placeBid(uint256)":"121524","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"infinite","safeTransferFrom(address,address,uint256,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26699","supportsInterface(bytes4)":"578","uri(uint256)":"infinite","withdrawMyFunds()":"infinite"}},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","claimPrize()":"70740ac9","declareWinner()":"14034bd2","getAllBidders()":"3a79d2e5","getAuctionDetails()":"3a6dcea2","getBidDetails(address)":"8d07ae9f","isApprovedForAll(address,address)":"e985e9c5","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","placeBid(uint256)":"9979ef45","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c","withdrawMyFunds()":"4935e740"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_evaluation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPrize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"declareWinner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllBidders\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuctionDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"getBidDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawMyFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AuctionEstate.sol\":\"AuctionEstate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155.sol\\\";\\nimport \\\"./IERC1155Receiver.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURI.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\\n    using Address for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping(uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    constructor(string memory uri_) {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: address zero is not a valid owner\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] memory accounts,\\n        uint256[] memory ids\\n    ) public view virtual override returns (uint256[] memory) {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeTransferFrom(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _balances[id][to] += amount;\\n        emit TransferSingle(operator, address(0), to, id, amount);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(address from, uint256 id, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory amounts) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n        }\\n\\n        emit TransferBatch(operator, from, address(0), ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC1155: setting approval status for self\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n}\\n\",\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/AuctionEstate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Compatible with OpenZeppelin Contracts ^5.0.0\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract AuctionEstate is ERC1155,IERC1155Receiver {\\r\\n\\r\\n    uint256 private estateId;\\r\\n    uint256 private estateEvaluation;\\r\\n    uint256 private highestBid;\\r\\n    address payable private auctionWinner;\\r\\n    uint256 private timestamp;\\r\\n    address payable private estateOwner;\\r\\n\\r\\n    address payable [] private bidders;\\r\\n    \\r\\n    mapping (address=>uint256) private BidsPlaced;\\r\\n\\r\\n\\r\\n    constructor(uint256 _id,uint256 _evaluation,uint256 _timestamp,address payable owner)\\r\\n        ERC1155(\\\"\\\")\\r\\n    {   estateId = _id;\\r\\n        estateEvaluation = _evaluation;\\r\\n        timestamp = _timestamp;\\r\\n        highestBid = 0;\\r\\n        estateOwner = owner;\\r\\n    }\\r\\n\\r\\n    function getAuctionDetails() external view returns(uint256,uint256,uint256,address payable,address payable,uint256){\\r\\n        return(estateId,estateEvaluation,highestBid,estateOwner,auctionWinner,timestamp);\\r\\n    }\\r\\n\\r\\n    function getAllBidders() external view returns(address payable [] memory){\\r\\n        return bidders;\\r\\n    }\\r\\n\\r\\n    function getBidDetails(address payable bidder) external view returns(uint256){\\r\\n        return (BidsPlaced[bidder]);\\r\\n    }\\r\\n\\r\\n    function placeBid(uint256 bid) external payable  {\\r\\n        //require(block.timestamp - timestamp <= 24 hours,\\\"This listing has expired\\\");\\r\\n        require(bid>estateEvaluation, \\\"Bid placed must be higher than the evaluation of the timestamp\\\");\\r\\n        BidsPlaced[msg.sender] = bid;\\r\\n        bidders.push(payable(address(msg.sender)));\\r\\n        if(highestBid<bid){\\r\\n            highestBid = bid;\\r\\n            auctionWinner = payable(address(msg.sender));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function declareWinner() public view returns(address payable) {\\r\\n        //require(block.timestamp-timestamp> 24 hours, \\\"Winner cannot be declared before 24 hours of the listing\\\");\\r\\n        return auctionWinner;\\r\\n    }\\r\\n\\r\\n    function withdrawMyFunds() external payable {\\r\\n        //require(block.timestamp-timestamp> 24 hours, \\\"Funds cannot be withdrawn before 24 hours of the listing\\\");\\r\\n        if(payable(address(msg.sender))!=auctionWinner){\\r\\n            uint256 bidPlaced = BidsPlaced[msg.sender];\\r\\n            require(bidPlaced!=0 , \\\"You have not placed any bet in this auction\\\");\\r\\n            payable(address(msg.sender)).transfer(bidPlaced);\\r\\n            BidsPlaced[address(msg.sender)] = 0;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function claimPrize() external payable {\\r\\n        //require(block.timestamp-timestamp> 24 hours, \\\"Estate cannnot be claimed before 24 hours of the listing\\\");\\r\\n        if(payable(address(msg.sender))==auctionWinner){\\r\\n            estateOwner.transfer(highestBid);\\r\\n            safeTransferFrom(address(this), auctionWinner, estateId, 0, \\\"\\\");\\r\\n            BidsPlaced[address(msg.sender)] = 0;\\r\\n        }  \\r\\n    }\\r\\n\\r\\n    function onERC1155Received(address, address, uint256, uint256, bytes memory) public virtual returns (bytes4) {\\r\\n        return this.onERC1155Received.selector;\\r\\n    }\\r\\n\\r\\n    function onERC1155BatchReceived(address, address, uint256[] memory, uint256[] memory, bytes memory) public virtual returns (bytes4) {\\r\\n        return this.onERC1155BatchReceived.selector;\\r\\n    }\\r\\n\\r\\n    // The following functions are overrides required by Solidity.\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0xd9fa09abb223589413ee4ffd809465af24db65b0627f223dd859dc21d42239cd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"contracts/AuctionEstate.sol:AuctionEstate","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":144,"contract":"contracts/AuctionEstate.sol:AuctionEstate","label":"_operatorApprovals","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":146,"contract":"contracts/AuctionEstate.sol:AuctionEstate","label":"_uri","offset":0,"slot":"2","type":"t_string_storage"},{"astId":1993,"contract":"contracts/AuctionEstate.sol:AuctionEstate","label":"estateId","offset":0,"slot":"3","type":"t_uint256"},{"astId":1995,"contract":"contracts/AuctionEstate.sol:AuctionEstate","label":"estateEvaluation","offset":0,"slot":"4","type":"t_uint256"},{"astId":1997,"contract":"contracts/AuctionEstate.sol:AuctionEstate","label":"highestBid","offset":0,"slot":"5","type":"t_uint256"},{"astId":1999,"contract":"contracts/AuctionEstate.sol:AuctionEstate","label":"auctionWinner","offset":0,"slot":"6","type":"t_address_payable"},{"astId":2001,"contract":"contracts/AuctionEstate.sol:AuctionEstate","label":"timestamp","offset":0,"slot":"7","type":"t_uint256"},{"astId":2003,"contract":"contracts/AuctionEstate.sol:AuctionEstate","label":"estateOwner","offset":0,"slot":"8","type":"t_address_payable"},{"astId":2006,"contract":"contracts/AuctionEstate.sol:AuctionEstate","label":"bidders","offset":0,"slot":"9","type":"t_array(t_address_payable)dyn_storage"},{"astId":2010,"contract":"contracts/AuctionEstate.sol:AuctionEstate","label":"BidsPlaced","offset":0,"slot":"10","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_address_payable)dyn_storage":{"base":"t_address_payable","encoding":"dynamic_array","label":"address payable[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/FactoryEstate.sol":{"EstateFactory":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"estateId","type":"uint256"}],"name":"getEstateAuctionListing","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"estateId","type":"uint256"}],"name":"getEstateInvestmentListing","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"estateId","type":"uint256"}],"name":"getEstateListing","outputs":[{"components":[{"internalType":"uint256","name":"estateID","type":"uint256"},{"internalType":"address payable","name":"estateOwner","type":"address"},{"internalType":"uint256","name":"estateEvaluation","type":"uint256"},{"internalType":"string","name":"estateMetadata","type":"string"},{"internalType":"bool","name":"isListedForAuction","type":"bool"},{"internalType":"bool","name":"isListedForInvestment","type":"bool"}],"internalType":"struct EstateFactory.Estate","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumEstates","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"estateId","type":"uint256"}],"name":"listEstateForAuction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"estateId","type":"uint256"}],"name":"listEstateForInvestment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_metadata","type":"string"},{"internalType":"uint256","name":"_evaluation","type":"uint256"}],"name":"tokenizeEstate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"estateID","type":"uint256"},{"internalType":"address payable","name":"newOwner","type":"address"}],"name":"updateOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_157":{"entryPoint":null,"id":157,"parameterSlots":1,"returnSlots":0},"@_2311":{"entryPoint":null,"id":2311,"parameterSlots":0,"returnSlots":0},"@_setURI_668":{"entryPoint":56,"id":668,"parameterSlots":1,"returnSlots":0},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":156,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":239,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":96,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":74,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2732:13","statements":[{"nodeType":"YulBlock","src":"6:3:13","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:13"},"nodeType":"YulFunctionCall","src":"66:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:13"},"nodeType":"YulFunctionCall","src":"56:31:13"},"nodeType":"YulExpressionStatement","src":"56:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:13"},"nodeType":"YulFunctionCall","src":"96:15:13"},"nodeType":"YulExpressionStatement","src":"96:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:13"},"nodeType":"YulFunctionCall","src":"120:15:13"},"nodeType":"YulExpressionStatement","src":"120:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:13"},{"body":{"nodeType":"YulBlock","src":"201:325:13","statements":[{"nodeType":"YulAssignment","src":"211:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:13","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:13"},"nodeType":"YulFunctionCall","src":"221:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:13"},"nodeType":"YulFunctionCall","src":"268:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:13","statements":[{"nodeType":"YulAssignment","src":"321:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:13"},"nodeType":"YulFunctionCall","src":"331:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:13"},"nodeType":"YulFunctionCall","src":"292:26:13"},"nodeType":"YulIf","src":"289:61:13"},{"body":{"nodeType":"YulBlock","src":"409:111:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:13"},"nodeType":"YulFunctionCall","src":"433:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:13"},"nodeType":"YulFunctionCall","src":"423:31:13"},"nodeType":"YulExpressionStatement","src":"423:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:13"},"nodeType":"YulFunctionCall","src":"467:15:13"},"nodeType":"YulExpressionStatement","src":"467:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:13"},"nodeType":"YulFunctionCall","src":"495:15:13"},"nodeType":"YulExpressionStatement","src":"495:15:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:13"},"nodeType":"YulFunctionCall","src":"385:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:13"},"nodeType":"YulFunctionCall","src":"362:38:13"},"nodeType":"YulIf","src":"359:161:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:13","type":""}],"src":"146:380:13"},{"body":{"nodeType":"YulBlock","src":"587:65:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:13","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:13"},"nodeType":"YulFunctionCall","src":"597:14:13"},"nodeType":"YulExpressionStatement","src":"597:14:13"},{"nodeType":"YulAssignment","src":"620:26:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:13"},"nodeType":"YulFunctionCall","src":"628:18:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:13"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:13","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:13","type":""}],"src":"531:121:13"},{"body":{"nodeType":"YulBlock","src":"738:464:13","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:13","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:13","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:13","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:13","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:13"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:13"},"nodeType":"YulFunctionCall","src":"809:17:13"},"nodeType":"YulExpressionStatement","src":"809:17:13"},{"nodeType":"YulVariableDeclaration","src":"839:31:13","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:13"},"nodeType":"YulFunctionCall","src":"851:19:13"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:13","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:13"},"nodeType":"YulFunctionCall","src":"919:19:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:13"},"nodeType":"YulFunctionCall","src":"912:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:13"},"nodeType":"YulFunctionCall","src":"902:38:13"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:13","statements":[{"nodeType":"YulAssignment","src":"979:19:13","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:13"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:13"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:13","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:13"},"nodeType":"YulFunctionCall","src":"956:20:13"},"nodeType":"YulIf","src":"953:47:13"},{"nodeType":"YulVariableDeclaration","src":"1013:41:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:13","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:13"},"nodeType":"YulFunctionCall","src":"1040:12:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:13"},"nodeType":"YulFunctionCall","src":"1033:20:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:13"},"nodeType":"YulFunctionCall","src":"1023:31:13"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:13","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:13"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:13","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:13"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:13"},"nodeType":"YulFunctionCall","src":"1167:17:13"},"nodeType":"YulExpressionStatement","src":"1167:17:13"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:13"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:13"},"nodeType":"YulFunctionCall","src":"1112:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:13","statements":[{"nodeType":"YulAssignment","src":"1128:22:13","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:13"},"nodeType":"YulFunctionCall","src":"1137:13:13"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:13"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:13","statements":[]},"src":"1104:82:13"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:13","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:13"},"nodeType":"YulFunctionCall","src":"751:11:13"},"nodeType":"YulIf","src":"748:448:13"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:13","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:13","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:13","type":""}],"src":"657:545:13"},{"body":{"nodeType":"YulBlock","src":"1292:81:13","statements":[{"nodeType":"YulAssignment","src":"1302:65:13","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:13"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:13","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:13"},"nodeType":"YulFunctionCall","src":"1331:11:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:13"},"nodeType":"YulFunctionCall","src":"1344:6:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:13"},"nodeType":"YulFunctionCall","src":"1327:24:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:13"},"nodeType":"YulFunctionCall","src":"1323:29:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:13"},"nodeType":"YulFunctionCall","src":"1313:40:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:13","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:13"},"nodeType":"YulFunctionCall","src":"1355:11:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:13"},"nodeType":"YulFunctionCall","src":"1310:57:13"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:13"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:13","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:13","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:13","type":""}],"src":"1207:166:13"},{"body":{"nodeType":"YulBlock","src":"1474:1256:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:13"},"nodeType":"YulFunctionCall","src":"1498:10:13"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:13"},"nodeType":"YulFunctionCall","src":"1553:18:13"},"nodeType":"YulExpressionStatement","src":"1553:18:13"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:13","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:13"},"nodeType":"YulFunctionCall","src":"1535:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:13"},"nodeType":"YulFunctionCall","src":"1531:18:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:13"},"nodeType":"YulFunctionCall","src":"1520:30:13"},"nodeType":"YulIf","src":"1517:56:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:13"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:13"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:13"},"nodeType":"YulFunctionCall","src":"1658:11:13"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:13"},"nodeType":"YulFunctionCall","src":"1632:38:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:13"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:13"},"nodeType":"YulFunctionCall","src":"1582:97:13"},"nodeType":"YulExpressionStatement","src":"1582:97:13"},{"nodeType":"YulVariableDeclaration","src":"1688:18:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:13","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:13","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:13","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:13","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:13"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:13"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:13","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:13"},"nodeType":"YulFunctionCall","src":"1858:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:13"},"nodeType":"YulFunctionCall","src":"1846:20:13"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:13","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:13"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:13"},"nodeType":"YulFunctionCall","src":"1893:35:13"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:13","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:13"},"nodeType":"YulFunctionCall","src":"2067:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:13"},"nodeType":"YulFunctionCall","src":"2061:26:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:13"},"nodeType":"YulFunctionCall","src":"2046:42:13"},"nodeType":"YulExpressionStatement","src":"2046:42:13"},{"nodeType":"YulAssignment","src":"2105:24:13","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:13"},"nodeType":"YulFunctionCall","src":"2115:14:13"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:13"}]},{"nodeType":"YulAssignment","src":"2146:40:13","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:13"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:13"},"nodeType":"YulFunctionCall","src":"2159:27:13"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:13"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:13"},"nodeType":"YulFunctionCall","src":"1972:14:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:13","statements":[{"nodeType":"YulAssignment","src":"1989:24:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:13"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:13"},"nodeType":"YulFunctionCall","src":"1994:19:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:13","statements":[]},"src":"1964:236:13"},{"body":{"nodeType":"YulBlock","src":"2248:166:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:13","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:13"},"nodeType":"YulFunctionCall","src":"2289:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:13"},"nodeType":"YulFunctionCall","src":"2283:26:13"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:13","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:13"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:13"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:13","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:13"},"nodeType":"YulFunctionCall","src":"2368:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:13","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:13"},"nodeType":"YulFunctionCall","src":"2364:24:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:13"},"nodeType":"YulFunctionCall","src":"2390:6:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:13"},"nodeType":"YulFunctionCall","src":"2360:37:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:13"},"nodeType":"YulFunctionCall","src":"2356:42:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:13"},"nodeType":"YulFunctionCall","src":"2341:58:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:13"},"nodeType":"YulFunctionCall","src":"2326:74:13"},"nodeType":"YulExpressionStatement","src":"2326:74:13"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:13"},"nodeType":"YulFunctionCall","src":"2216:19:13"},"nodeType":"YulIf","src":"2213:201:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:13","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:13"},"nodeType":"YulFunctionCall","src":"2444:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:13"},"nodeType":"YulFunctionCall","src":"2440:22:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:13"},"nodeType":"YulFunctionCall","src":"2427:36:13"},"nodeType":"YulExpressionStatement","src":"2427:36:13"}]},"nodeType":"YulCase","src":"1810:663:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:13","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:13","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:13","statements":[{"nodeType":"YulAssignment","src":"2571:35:13","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:13"},"nodeType":"YulFunctionCall","src":"2586:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:13"},"nodeType":"YulFunctionCall","src":"2580:26:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:13"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:13"},"nodeType":"YulIf","src":"2531:89:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:13"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:13"},"nodeType":"YulFunctionCall","src":"2646:67:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:13"},"nodeType":"YulFunctionCall","src":"2633:81:13"},"nodeType":"YulExpressionStatement","src":"2633:81:13"}]},"nodeType":"YulCase","src":"2482:242:13","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:13","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:13"},"nodeType":"YulFunctionCall","src":"1787:14:13"},"nodeType":"YulSwitch","src":"1780:944:13"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:13","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:13","type":""}],"src":"1378:1352:13"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH3 0x31 DUP2 PUSH3 0x38 JUMP JUMPDEST POP PUSH3 0x1BB JUMP JUMPDEST PUSH1 0x2 PUSH3 0x46 DUP3 DUP3 PUSH3 0xEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x75 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x96 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xEA JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0xC5 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xE6 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xD1 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x10B JUMPI PUSH3 0x10B PUSH3 0x4A JUMP JUMPDEST PUSH3 0x123 DUP2 PUSH3 0x11C DUP5 SLOAD PUSH3 0x60 JUMP JUMPDEST DUP5 PUSH3 0x9C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x15B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x142 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0xE6 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x18C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x16B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x1AB JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x5B8C DUP1 PUSH3 0x1CB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7192711F GT PUSH3 0xAF JUMPI DUP1 PUSH4 0xD18FF5F8 GT PUSH3 0x7A JUMPI DUP1 PUSH4 0xD18FF5F8 EQ PUSH3 0x334 JUMPI DUP1 PUSH4 0xE6EFD4D0 EQ PUSH3 0x35A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH3 0x371 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH3 0x3B0 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH3 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7192711F EQ PUSH3 0x279 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH3 0x2CA JUMPI DUP1 PUSH4 0xBA1B60FC EQ PUSH3 0x2E1 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH3 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH3 0xFC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH3 0x1EE JUMPI DUP1 PUSH4 0x3BA44BE6 EQ PUSH3 0x207 JUMPI DUP1 PUSH4 0x3D55DAF8 EQ PUSH3 0x21E JUMPI DUP1 PUSH4 0x4A2454BE EQ PUSH3 0x227 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH3 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH3 0x131 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH3 0x15B JUMPI DUP1 PUSH4 0xE89341C EQ PUSH3 0x183 JUMPI DUP1 PUSH4 0x1A05B063 EQ PUSH3 0x1A9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x148 PUSH3 0x142 CALLDATASIZE PUSH1 0x4 PUSH3 0x17A9 JUMP JUMPDEST PUSH3 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x172 PUSH3 0x16C CALLDATASIZE PUSH1 0x4 PUSH3 0x17EF JUMP JUMPDEST PUSH3 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x152 JUMP JUMPDEST PUSH3 0x19A PUSH3 0x194 CALLDATASIZE PUSH1 0x4 PUSH3 0x180F JUMP JUMPDEST PUSH3 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x152 SWAP2 SWAP1 PUSH3 0x187D JUMP JUMPDEST PUSH3 0x1D5 PUSH3 0x1BA CALLDATASIZE PUSH1 0x4 PUSH3 0x180F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x152 JUMP JUMPDEST PUSH3 0x205 PUSH3 0x1FF CALLDATASIZE PUSH1 0x4 PUSH3 0x19FF JUMP JUMPDEST PUSH3 0x547 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x205 PUSH3 0x218 CALLDATASIZE PUSH1 0x4 PUSH3 0x1ABB JUMP JUMPDEST PUSH3 0x5E1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH3 0x148 JUMP JUMPDEST PUSH3 0x1D5 PUSH3 0x238 CALLDATASIZE PUSH1 0x4 PUSH3 0x180F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0x26A PUSH3 0x264 CALLDATASIZE PUSH1 0x4 PUSH3 0x1B19 JUMP JUMPDEST PUSH3 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x152 SWAP2 SWAP1 PUSH3 0x1C32 JUMP JUMPDEST PUSH3 0x205 PUSH3 0x28A CALLDATASIZE PUSH1 0x4 PUSH3 0x1C47 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x205 PUSH3 0x2DB CALLDATASIZE PUSH1 0x4 PUSH3 0x1C7A JUMP JUMPDEST PUSH3 0x888 JUMP JUMPDEST PUSH3 0x205 PUSH3 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH3 0x180F JUMP JUMPDEST PUSH3 0x899 JUMP JUMPDEST PUSH3 0x31A PUSH3 0x309 CALLDATASIZE PUSH1 0x4 PUSH3 0x19FF JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x152 JUMP JUMPDEST PUSH3 0x34B PUSH3 0x345 CALLDATASIZE PUSH1 0x4 PUSH3 0x180F JUMP JUMPDEST PUSH3 0x98E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x152 SWAP2 SWAP1 PUSH3 0x1CB1 JUMP JUMPDEST PUSH3 0x205 PUSH3 0x36B CALLDATASIZE PUSH1 0x4 PUSH3 0x180F JUMP JUMPDEST PUSH3 0xAC1 JUMP JUMPDEST PUSH3 0x172 PUSH3 0x382 CALLDATASIZE PUSH1 0x4 PUSH3 0x1D1A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH3 0x31A PUSH3 0x3C1 CALLDATASIZE PUSH1 0x4 PUSH3 0x1D4D JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH3 0x205 PUSH3 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH3 0x1D4D JUMP JUMPDEST PUSH3 0xC18 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x45A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH3 0x47D JUMPI POP PUSH3 0x47D DUP3 PUSH3 0xCAB JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH3 0x4BC SWAP1 PUSH3 0x1DBE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x4EA SWAP1 PUSH3 0x1DBE JUMP JUMPDEST DUP1 ISZERO PUSH3 0x53B JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x50F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x53B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x51D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH3 0x566 JUMPI POP PUSH3 0x566 DUP6 CALLER PUSH3 0x382 JUMP JUMPDEST PUSH3 0x5CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH3 0x5DA DUP6 DUP6 DUP6 DUP6 DUP6 PUSH3 0xCFE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH3 0x64C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576616C756174696F6E206F662074686520457374617465206D757374206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x206D6F7265207468616E207A65726F21 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD CALLER SWAP2 DUP2 SWAP1 PUSH1 0x0 PUSH3 0x661 DUP4 PUSH3 0x1E10 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH3 0x684 DUP3 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0xF72 JUMP JUMPDEST PUSH3 0x68F DUP5 PUSH3 0xF86 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE CALLER PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP3 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP10 DUP2 MSTORE PUSH1 0x0 PUSH1 0x80 DUP7 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP7 ADD DUP2 SWAP1 MSTORE DUP8 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP4 MSTORE SWAP5 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x3 DUP3 ADD SWAP1 PUSH3 0x711 SWAP1 DUP3 PUSH3 0x1E7B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xA0 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH3 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x7CF JUMPI PUSH3 0x7CF PUSH3 0x1892 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x7F9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH3 0x880 JUMPI PUSH3 0x84D DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x822 JUMPI PUSH3 0x822 PUSH3 0x1F48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH3 0x83F JUMPI PUSH3 0x83F PUSH3 0x1F48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH3 0x3E9 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x862 JUMPI PUSH3 0x862 PUSH3 0x1F48 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH3 0x878 DUP2 PUSH3 0x1E10 JUMP JUMPDEST SWAP1 POP PUSH3 0x7FF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0x895 CALLER DUP4 DUP4 PUSH3 0xF94 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD DUP4 SWAP2 SWAP1 PUSH3 0x8BC SWAP1 PUSH3 0x1777 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x8E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH3 0x906 CALLER DUP3 DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0xC18 JUMP JUMPDEST PUSH3 0x925 CALLER PUSH1 0x0 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x1076 JUMP JUMPDEST PUSH3 0x945 CALLER DUP3 PUSH1 0x0 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0xC18 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 SWAP1 DUP2 SWAP1 MSTORE SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP6 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD DUP4 SWAP1 MSTORE DUP7 DUP4 MSTORE PUSH1 0x4 DUP3 MSTORE SWAP2 DUP6 SWAP1 KECCAK256 DUP6 MLOAD SWAP4 DUP5 ADD DUP7 MSTORE DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 DUP5 ADD SWAP2 PUSH3 0xA12 SWAP1 PUSH3 0x1DBE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xA40 SWAP1 PUSH3 0x1DBE JUMP JUMPDEST DUP1 ISZERO PUSH3 0xA91 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xA65 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xA91 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xA73 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xAF2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH3 0xBAE PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH3 0xB25 SWAP1 PUSH3 0x1785 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP5 ADD DUP12 SWAP1 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0xB99 SWAP3 SWAP2 PUSH1 0x20 ADD PUSH3 0x1F5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH3 0x1194 JUMP JUMPDEST SWAP1 POP PUSH3 0xBCF CALLER DUP3 DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0xC18 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 SWAP1 DUP2 SWAP1 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH3 0xC37 JUMPI POP PUSH3 0xC37 DUP6 CALLER PUSH3 0x382 JUMP JUMPDEST PUSH3 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH3 0x5DA DUP6 DUP6 DUP6 DUP6 DUP6 PUSH3 0x12A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH3 0xCDD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH3 0x47D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH3 0x47D JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH3 0xD62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0xDC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH3 0xF00 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0xDED JUMPI PUSH3 0xDED PUSH3 0x1F48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH3 0xE0E JUMPI PUSH3 0xE0E PUSH3 0x1F48 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH3 0xEA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH3 0xEE2 SWAP1 DUP5 SWAP1 PUSH3 0x1F91 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH3 0xEF8 SWAP1 PUSH3 0x1E10 JUMP JUMPDEST SWAP1 POP PUSH3 0xDCC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH3 0xF52 SWAP3 SWAP2 SWAP1 PUSH3 0x1FA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH3 0xF6A DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH3 0x145C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xF80 DUP5 DUP5 DUP5 DUP5 PUSH3 0x1076 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH3 0xF91 DUP2 PUSH3 0x1614 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH3 0x1009 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x10D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH3 0x10E6 DUP6 PUSH3 0x1622 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x10F5 DUP6 PUSH3 0x1622 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH3 0x1129 SWAP1 DUP5 SWAP1 PUSH3 0x1F91 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH3 0x118B DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH3 0x1670 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 SELFBALANCE LT ISZERO PUSH3 0x11E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x451 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SUB PUSH3 0x123B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A2062797465636F6465206C656E677468206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x451 JUMP JUMPDEST DUP3 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP7 CREATE2 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x129E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A204661696C6564206F6E206465706C6F7900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x451 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x130B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH3 0x1319 DUP6 PUSH3 0x1622 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x1328 DUP6 PUSH3 0x1622 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH3 0x13B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH3 0x13EF SWAP1 DUP5 SWAP1 PUSH3 0x1F91 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH3 0x1451 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH3 0x1670 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH3 0xF6A JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH3 0x14A3 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH3 0x1FD9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x14E1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH3 0x14DE SWAP2 DUP2 ADD SWAP1 PUSH3 0x203D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x15A1 JUMPI PUSH3 0x14F0 PUSH3 0x205D JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH3 0x1530 JUMPI POP PUSH3 0x1507 PUSH3 0x207A JUMP JUMPDEST DUP1 PUSH3 0x1514 JUMPI POP PUSH3 0x1532 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x451 SWAP2 SWAP1 PUSH3 0x187D JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH3 0x118B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x895 DUP3 DUP3 PUSH3 0x1E7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x165F JUMPI PUSH3 0x165F PUSH3 0x1F48 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH3 0xF6A JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH3 0x16B7 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH3 0x210A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x16F5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH3 0x16F2 SWAP2 DUP2 ADD SWAP1 PUSH3 0x203D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x1704 JUMPI PUSH3 0x14F0 PUSH3 0x205D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH3 0x118B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH2 0x1DCB DUP1 PUSH3 0x2150 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x1C3C DUP1 PUSH3 0x3F1B DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xF91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x17BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH3 0x17CA DUP2 PUSH3 0x1793 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH3 0xF91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH3 0x129E DUP2 PUSH3 0x17D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1846 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x182C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH3 0x1869 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH3 0x1829 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH3 0x129E PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x184F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x18D1 JUMPI PUSH3 0x18D1 PUSH3 0x1892 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x18F5 JUMPI PUSH3 0x18F5 PUSH3 0x1892 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1911 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH3 0x1920 DUP3 PUSH3 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x192F DUP3 DUP3 PUSH3 0x18A8 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH3 0x1950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH3 0x196D JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH3 0x1954 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH3 0x1995 JUMPI PUSH3 0x1995 PUSH3 0x1892 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x19AE PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH3 0x18A8 JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x19C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x19EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x129E DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH3 0x1978 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x1A18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH3 0x1A25 DUP2 PUSH3 0x1793 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH3 0x1A37 DUP2 PUSH3 0x1793 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x1A55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1A63 DUP10 DUP4 DUP11 ADD PUSH3 0x18FF JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x1A7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1A88 DUP10 DUP4 DUP11 ADD PUSH3 0x18FF JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x1A9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1AAE DUP9 DUP3 DUP10 ADD PUSH3 0x19DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1ACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1AE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH3 0x1AF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1B0A DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH3 0x1978 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1B2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x1B46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1B5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH3 0x1B6A DUP3 PUSH3 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1B79 DUP3 DUP3 PUSH3 0x18A8 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH3 0x1B9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH3 0x1BC5 JUMPI DUP6 CALLDATALOAD PUSH3 0x1BB5 DUP2 PUSH3 0x1793 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH3 0x1B9F JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH3 0x1BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1BEB DUP6 DUP3 DUP7 ADD PUSH3 0x18FF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1C27 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH3 0x1C09 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH3 0x129E PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1BF5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1C5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH3 0x1C6F DUP2 PUSH3 0x1793 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1C8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH3 0x1C9B DUP2 PUSH3 0x1793 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x1C6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0xC0 PUSH1 0x80 DUP5 ADD MSTORE PUSH3 0x1CF6 PUSH1 0xE0 DUP5 ADD DUP3 PUSH3 0x184F JUMP JUMPDEST SWAP1 POP PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH3 0x1D3B DUP2 PUSH3 0x1793 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH3 0x1C6F DUP2 PUSH3 0x1793 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x1D66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH3 0x1D73 DUP2 PUSH3 0x1793 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH3 0x1D85 DUP2 PUSH3 0x1793 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1DB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1AAE DUP9 DUP3 DUP10 ADD PUSH3 0x19DC JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1DD3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1DF4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0x1E25 JUMPI PUSH3 0x1E25 PUSH3 0x1DFA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1E76 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1E55 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xF6A JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1E61 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1E98 JUMPI PUSH3 0x1E98 PUSH3 0x1892 JUMP JUMPDEST PUSH3 0x1EB0 DUP2 PUSH3 0x1EA9 DUP5 SLOAD PUSH3 0x1DBE JUMP JUMPDEST DUP5 PUSH3 0x1E2C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1EE8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x1ECF JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0xF6A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1F19 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x1EF8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x1F38 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH3 0x1F72 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH3 0x1829 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH3 0x1F88 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH3 0x1829 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x47D JUMPI PUSH3 0x47D PUSH3 0x1DFA JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH3 0x1FBC PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x1BF5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x1FD0 DUP2 DUP6 PUSH3 0x1BF5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0x2007 PUSH1 0xA0 DUP4 ADD DUP7 PUSH3 0x1BF5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH3 0x201B DUP2 DUP7 PUSH3 0x1BF5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH3 0x2031 DUP2 DUP6 PUSH3 0x184F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2050 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x129E DUP2 PUSH3 0x17D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH3 0x2077 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH3 0x2089 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH3 0x20BA JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x20D3 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH3 0x20EE JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH3 0x20FF PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH3 0x18A8 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH3 0x2144 PUSH1 0xA0 DUP4 ADD DUP5 PUSH3 0x184F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1DCB CODESIZE SUB DUP1 PUSH3 0x1DCB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x82 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH3 0x4E DUP2 PUSH3 0x70 JUMP JUMPDEST POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x4 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH3 0x218 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x7E DUP3 DUP3 PUSH3 0x14C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0xD2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xF3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x147 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x122 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x143 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x12E JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0xA7 JUMP JUMPDEST PUSH3 0x180 DUP2 PUSH3 0x179 DUP5 SLOAD PUSH3 0xBD JUMP JUMPDEST DUP5 PUSH3 0xF9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1B8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x19F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x143 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1E9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x1C8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x208 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1BA3 DUP1 PUSH3 0x228 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91A62523 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDF48981A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xDF48981A EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91A62523 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xD0A2F2C4 EQ PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4BA8AE81 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x4BA8AE81 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x80BB4EF4 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x8FCB4E5B EQ PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x441 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A7 PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x121 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x8D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F5 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1819 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x1866 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x1894 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x418 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x472 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x43B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x43B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x4A0 SWAP1 PUSH2 0x18FD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4CC SWAP1 PUSH2 0x18FD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x519 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x519 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4FC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x541 JUMPI POP PUSH2 0x541 DUP6 CALLER PUSH2 0x32E JUMP JUMPDEST PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0x5B1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xBDB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742073686172657320746F20626520736F6C640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0x634 CALLER ADDRESS PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x64 PUSH1 0x4 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH2 0x659 SWAP2 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH2 0x663 SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x693 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B3 SWAP1 DUP5 SWAP1 PUSH2 0x1986 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x73D JUMPI PUSH2 0x73D PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x766 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x7DE JUMPI PUSH2 0x7B1 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x78A JUMPI PUSH2 0x78A PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7A4 JUMPI PUSH2 0x7A4 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3A8 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7C3 JUMPI PUSH2 0x7C3 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x7D7 DUP2 PUSH2 0x19AF JUMP JUMPDEST SWAP1 POP PUSH2 0x76C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742073686172657320746F206265207472616E7366 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x657272656420746F20726563657069656E740000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0x888 CALLER DUP4 PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB4F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x8A7 SWAP1 DUP5 SWAP1 PUSH2 0x1986 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6B3 SWAP1 DUP5 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST PUSH2 0x8DF CALLER DUP4 DUP4 PUSH2 0xE39 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x93B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x91D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D206E756D626572206F66207368617265732074686174206361 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E20626520707572636861736564206973203130300000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F6620736861726573207075726368617365642063616E6E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74206265207A65726F206F72206C657373000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0xA3D ADDRESS PUSH1 0x0 PUSH2 0x3A8 JUMP JUMPDEST DUP2 LT PUSH2 0xAA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206172656E27742073756666696369656E74207368617265732074 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x1BC81899481C1D5C98DA185CD959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD ADDRESS SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xACE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xAEC ADDRESS CALLER PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB4F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0xB6B JUMPI POP PUSH2 0xB6B DUP6 CALLER PUSH2 0x32E JUMP JUMPDEST PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0x5B1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF19 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCC2 JUMPI PUSH2 0xCC2 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCE0 JUMPI PUSH2 0xCE0 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xDB0 SWAP1 DUP5 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xDC4 SWAP1 PUSH2 0x19AF JUMP JUMPDEST SWAP1 POP PUSH2 0xCA5 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xE1B SWAP3 SWAP2 SWAP1 PUSH2 0x19DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE31 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x10C4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xEAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xF7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xF89 DUP6 PUSH2 0x1272 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF96 DUP6 PUSH2 0x1272 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1059 SWAP1 DUP5 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10B9 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x12BD JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1108 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A09 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1143 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1140 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11F8 JUMPI PUSH2 0x114F PUSH2 0x1A84 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1188 JUMPI POP PUSH2 0x1163 PUSH2 0x1AA0 JUMP JUMPDEST DUP1 PUSH2 0x116E JUMPI POP PUSH2 0x118A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x12AC JUMPI PUSH2 0x12AC PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1301 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x133C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1339 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1348 JUMPI PUSH2 0x114F PUSH2 0x1A84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x13EF DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x13CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1430 DUP2 PUSH2 0x13FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1476 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x145A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1430 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1450 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x14E5 JUMPI PUSH2 0x14E5 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1506 JUMPI PUSH2 0x1506 PUSH2 0x14A9 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x152E DUP3 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153B DUP3 DUP3 PUSH2 0x14BF JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x155B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1576 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x155F JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15AC JUMPI PUSH2 0x15AC PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C3 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x14BF JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x15D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x160D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1618 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1628 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1651 DUP10 DUP4 DUP11 ADD PUSH2 0x1510 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1673 DUP10 DUP4 DUP11 ADD PUSH2 0x1510 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1696 DUP9 DUP3 DUP10 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x16EF DUP3 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16FC DUP3 DUP3 PUSH2 0x14BF JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x171C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1743 JUMPI DUP6 CALLDATALOAD PUSH2 0x1734 DUP2 PUSH2 0x13B9 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1721 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1766 DUP6 DUP3 DUP7 ADD PUSH2 0x1510 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17A0 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1784 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1430 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1430 DUP2 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x17F9 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x180E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x185A JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1835 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1884 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x180E DUP2 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x18AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x18B7 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x18C7 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1696 DUP9 DUP3 DUP10 ADD PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1911 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1931 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x43B JUMPI PUSH2 0x43B PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1981 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x43B JUMPI PUSH2 0x43B PUSH2 0x1937 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x19C1 JUMPI PUSH2 0x19C1 PUSH2 0x1937 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x43B JUMPI PUSH2 0x43B PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x19EE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1770 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1A00 DUP2 DUP6 PUSH2 0x1770 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1A35 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1770 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1A47 DUP2 DUP7 PUSH2 0x1770 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1A5B DUP2 DUP6 PUSH2 0x1450 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1430 DUP2 PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1A9D JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1AAE JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1ADE JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1AF6 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1B10 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1B1F PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x14BF JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B62 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1450 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 PUSH1 0xC5 0xFC 0x1F SWAP12 0xE 0xB2 PUSH31 0xE89AE9B7A82B89AC5EA9793FAFDCF8DF724B8067F24EE64736F6C63430008 EQ STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1C3C CODESIZE SUB DUP1 PUSH3 0x1C3C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x9A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH3 0x4E DUP2 PUSH3 0x88 JUMP JUMPDEST POP PUSH1 0x3 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x25C JUMP JUMPDEST PUSH1 0x2 PUSH3 0x96 DUP3 DUP3 PUSH3 0x190 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD SWAP3 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x116 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x137 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x18B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x166 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x187 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x172 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AC PUSH3 0xEB JUMP JUMPDEST PUSH3 0x1C4 DUP2 PUSH3 0x1BD DUP5 SLOAD PUSH3 0x101 JUMP JUMPDEST DUP5 PUSH3 0x13D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1FC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x1E3 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x187 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x22D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x20C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x24C JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x19D0 DUP1 PUSH3 0x26C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x70740AC9 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x8D07AE9F EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x9979EF45 EQ PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x3A6DCEA2 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x3A79D2E5 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x4935E740 EQ PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x14034BD2 EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x124A JUMP JUMPDEST PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x128C JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x146E JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x648 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x83A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x8CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A1 JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x146E JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x35C CALLDATASIZE PUSH1 0x4 PUSH2 0x16DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x170D JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x446 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x4A0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x469 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x469 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x4CE SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FA SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x547 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x547 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x56F JUMPI POP PUSH2 0x56F DUP6 CALLER PUSH2 0x35C JUMP JUMPDEST PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH2 0x5DF DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA57 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x63E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x620 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x70E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F7420706C6163656420616E792062657420696E2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3434B99030BAB1BA34B7B7 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x791 JUMPI PUSH2 0x791 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7BA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x832 JUMPI PUSH2 0x805 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7DE JUMPI PUSH2 0x7DE PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7F8 JUMPI PUSH2 0x7F8 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3D6 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x817 JUMPI PUSH2 0x817 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x82B DUP2 PUSH2 0x17DC JUMP JUMPDEST SWAP1 POP PUSH2 0x7C0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x70E JUMPI PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x888 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x8BD ADDRESS PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 SLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9CB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 GT PUSH2 0x946 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42696420706C61636564206D75737420626520686967686572207468616E2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6865206576616C756174696F6E206F66207468652074696D657374616D700000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 SLOAD DUP2 GT ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH2 0x9C7 CALLER DUP4 DUP4 PUSH2 0xCB5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x9E7 JUMPI POP PUSH2 0x9E7 DUP6 CALLER PUSH2 0x35C JUMP JUMPDEST PUSH2 0xA4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH2 0x5DF DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD95 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xC47 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB3E JUMPI PUSH2 0xB3E PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB5C JUMPI PUSH2 0xB5C PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xC2C SWAP1 DUP5 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xC40 SWAP1 PUSH2 0x17DC JUMP JUMPDEST SWAP1 POP PUSH2 0xB21 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xC97 SWAP3 SWAP2 SWAP1 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xCAD DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF40 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xD28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xE05 DUP6 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE12 DUP6 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0xE98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xED5 SWAP1 DUP5 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF35 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1139 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xF84 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1836 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFBF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xFBC SWAP2 DUP2 ADD SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1074 JUMPI PUSH2 0xFCB PUSH2 0x18B1 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1004 JUMPI POP PUSH2 0xFDF PUSH2 0x18CD JUMP JUMPDEST DUP1 PUSH2 0xFEA JUMPI POP PUSH2 0x1006 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x10E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1128 JUMPI PUSH2 0x1128 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x117D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11B8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11B5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11C4 JUMPI PUSH2 0xFCB PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x10E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x125D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1268 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12A9 DUP2 PUSH2 0x1276 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12EF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x12D3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12C9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x135E JUMPI PUSH2 0x135E PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x137F JUMPI PUSH2 0x137F PUSH2 0x1322 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x139A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x13A7 DUP3 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B4 DUP3 DUP3 PUSH2 0x1338 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x13D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x13EF JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x13D8 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x140B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1425 JUMPI PUSH2 0x1425 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143C PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1338 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1491 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x14A1 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x14BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14CA DUP10 DUP4 DUP11 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x14E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14EC DUP10 DUP4 DUP11 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150F DUP9 DUP3 DUP10 ADD PUSH2 0x13FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x155D JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1538 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x157C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x15B5 DUP3 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C2 DUP3 DUP3 PUSH2 0x1338 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x15E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1609 JUMPI DUP6 CALLDATALOAD PUSH2 0x15FA DUP2 PUSH2 0x1235 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x161F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162C DUP6 DUP3 DUP7 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1666 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x164A JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12A9 DUP2 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x16BF DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x16D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x16FD DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x16D4 DUP2 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1730 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1740 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x176A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x150F DUP9 DUP3 DUP10 ADD PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x178A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x17EE JUMPI PUSH2 0x17EE PUSH2 0x17C6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x469 JUMPI PUSH2 0x469 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x181B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1636 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x182D DUP2 DUP6 PUSH2 0x1636 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1862 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1636 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1874 DUP2 DUP7 PUSH2 0x1636 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1888 DUP2 DUP6 PUSH2 0x12C9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x12A9 DUP2 PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x18CA JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x18DB JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x190B JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1923 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x193D JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x194C PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1338 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x198F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x12C9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0xDC 0xF8 0xDA PUSH2 0x9A40 0x24 PUSH30 0x35B57C20562F5CDCCA4D1D031E533B6D35E929B0AA3B5564736F6C634300 ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xEB AND PUSH3 0x57A82C 0x22 0xEF CHAINID 0x26 0xF6 PREVRANDAO 0x21 0xD7 ADDRESS EQ PUSH14 0x72C1E85B510EC4F771CB9DF01102 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"348:4278:11:-:0;;;434:1;405:30;;442:48;;;;;;;;;-1:-1:-1;1107:62:1;;;;;;;;;-1:-1:-1;1107:62:1;;1149:13;1107:62;1149:7;:13::i;:::-;1107:62;348:4278:11;;8149:86:1;8215:4;:13;8222:6;8215:4;:13;:::i;:::-;;8149:86;:::o;14:127:13:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:13;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:13;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:13;;;2580:26;2531:89;-1:-1:-1;;1335:1:13;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:13;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:13;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:13;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:13:o;:::-;348:4278:11;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1178":{"entryPoint":null,"id":1178,"parameterSlots":6,"returnSlots":0},"@_asSingletonArray_1334":{"entryPoint":5666,"id":1334,"parameterSlots":1,"returnSlots":1},"@_beforeTokenTransfer_1159":{"entryPoint":null,"id":1159,"parameterSlots":6,"returnSlots":0},"@_doSafeBatchTransferAcceptanceCheck_1306":{"entryPoint":5212,"id":1306,"parameterSlots":6,"returnSlots":0},"@_doSafeTransferAcceptanceCheck_1241":{"entryPoint":5744,"id":1241,"parameterSlots":6,"returnSlots":0},"@_mint_769":{"entryPoint":4214,"id":769,"parameterSlots":4,"returnSlots":0},"@_msgSender_1855":{"entryPoint":null,"id":1855,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_657":{"entryPoint":3326,"id":657,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_522":{"entryPoint":4773,"id":522,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1140":{"entryPoint":3988,"id":1140,"parameterSlots":3,"returnSlots":0},"@_setURI_668":{"entryPoint":5652,"id":668,"parameterSlots":1,"returnSlots":0},"@balanceOfBatch_292":{"entryPoint":1865,"id":292,"parameterSlots":2,"returnSlots":1},"@balanceOf_228":{"entryPoint":1001,"id":228,"parameterSlots":2,"returnSlots":1},"@deploy_1911":{"entryPoint":4500,"id":1911,"parameterSlots":3,"returnSlots":1},"@getEstateAuctionListing_2606":{"entryPoint":null,"id":2606,"parameterSlots":1,"returnSlots":1},"@getEstateInvestmentListing_2565":{"entryPoint":null,"id":2565,"parameterSlots":1,"returnSlots":1},"@getEstateListing_2553":{"entryPoint":2446,"id":2553,"parameterSlots":1,"returnSlots":1},"@getNumEstates_2614":{"entryPoint":null,"id":2614,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_327":{"entryPoint":null,"id":327,"parameterSlots":2,"returnSlots":1},"@isContract_1531":{"entryPoint":null,"id":1531,"parameterSlots":1,"returnSlots":1},"@listEstateForAuction_2470":{"entryPoint":2753,"id":2470,"parameterSlots":1,"returnSlots":0},"@listEstateForInvestment_2540":{"entryPoint":2201,"id":2540,"parameterSlots":1,"returnSlots":0},"@mint_2643":{"entryPoint":3954,"id":2643,"parameterSlots":4,"returnSlots":0},"@onERC1155BatchReceived_2708":{"entryPoint":null,"id":2708,"parameterSlots":5,"returnSlots":1},"@onERC1155Received_2685":{"entryPoint":null,"id":2685,"parameterSlots":5,"returnSlots":1},"@safeBatchTransferFrom_405":{"entryPoint":1351,"id":405,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_365":{"entryPoint":3096,"id":365,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_309":{"entryPoint":2184,"id":309,"parameterSlots":2,"returnSlots":0},"@setURI_2624":{"entryPoint":3974,"id":2624,"parameterSlots":1,"returnSlots":0},"@supportsInterface_188":{"entryPoint":3243,"id":188,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1969":{"entryPoint":null,"id":1969,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2731":{"entryPoint":1155,"id":2731,"parameterSlots":1,"returnSlots":1},"@tokenizeEstate_2401":{"entryPoint":1505,"id":2401,"parameterSlots":2,"returnSlots":0},"@updateOwner_2594":{"entryPoint":null,"id":2594,"parameterSlots":2,"returnSlots":0},"@uri_200":{"entryPoint":1195,"id":200,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":6399,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":6520,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes":{"entryPoint":6620,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7450,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":6655,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":7501,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":7290,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6057,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6937,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8253,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_uint256":{"entryPoint":6843,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":6159,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address_payable":{"entryPoint":7239,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_array_uint256_dyn":{"entryPoint":7157,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":6223,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8030,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8153,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8458,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7218,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":8103,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6269,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_75d492dc39fdce738c198d69e2dd08182d4530e4507782c31fe8fbb961c66e8d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Estate_$2324_memory_ptr__to_t_struct$_Estate_$2324_memory_ptr__fromStack_reversed":{"entryPoint":7345,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address_payable__to_t_uint256_t_uint256_t_uint256_t_address_payable__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":6360,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8081,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":7724,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":7803,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6185,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7614,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":6312,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":7696,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7674,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8008,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6290,"id":null,"parameterSlots":0,"returnSlots":0},"return_data_selector":{"entryPoint":8285,"id":null,"parameterSlots":0,"returnSlots":1},"try_decode_error_message":{"entryPoint":8314,"id":null,"parameterSlots":0,"returnSlots":1},"validator_revert_address":{"entryPoint":6035,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":6104,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24111:13","statements":[{"nodeType":"YulBlock","src":"6:3:13","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:109:13","statements":[{"body":{"nodeType":"YulBlock","src":"146:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"155:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"158:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"148:6:13"},"nodeType":"YulFunctionCall","src":"148:12:13"},"nodeType":"YulExpressionStatement","src":"148:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"100:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:13"},"nodeType":"YulFunctionCall","src":"89:54:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:13"},"nodeType":"YulFunctionCall","src":"79:65:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:13"},"nodeType":"YulFunctionCall","src":"72:73:13"},"nodeType":"YulIf","src":"69:93:13"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:13","type":""}],"src":"14:154:13"},{"body":{"nodeType":"YulBlock","src":"260:228:13","statements":[{"body":{"nodeType":"YulBlock","src":"306:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"315:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"318:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"308:6:13"},"nodeType":"YulFunctionCall","src":"308:12:13"},"nodeType":"YulExpressionStatement","src":"308:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"281:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"290:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"277:3:13"},"nodeType":"YulFunctionCall","src":"277:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"302:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"273:3:13"},"nodeType":"YulFunctionCall","src":"273:32:13"},"nodeType":"YulIf","src":"270:52:13"},{"nodeType":"YulVariableDeclaration","src":"331:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"357:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"344:12:13"},"nodeType":"YulFunctionCall","src":"344:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"335:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"401:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"376:24:13"},"nodeType":"YulFunctionCall","src":"376:31:13"},"nodeType":"YulExpressionStatement","src":"376:31:13"},{"nodeType":"YulAssignment","src":"416:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"426:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"416:6:13"}]},{"nodeType":"YulAssignment","src":"440:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"467:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"463:3:13"},"nodeType":"YulFunctionCall","src":"463:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"450:12:13"},"nodeType":"YulFunctionCall","src":"450:32:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"440:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"218:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"229:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"241:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"249:6:13","type":""}],"src":"173:315:13"},{"body":{"nodeType":"YulBlock","src":"594:76:13","statements":[{"nodeType":"YulAssignment","src":"604:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"616:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"627:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"612:3:13"},"nodeType":"YulFunctionCall","src":"612:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"604:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"646:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"657:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"639:6:13"},"nodeType":"YulFunctionCall","src":"639:25:13"},"nodeType":"YulExpressionStatement","src":"639:25:13"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"563:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"574:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"585:4:13","type":""}],"src":"493:177:13"},{"body":{"nodeType":"YulBlock","src":"719:87:13","statements":[{"body":{"nodeType":"YulBlock","src":"784:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"793:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"796:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"786:6:13"},"nodeType":"YulFunctionCall","src":"786:12:13"},"nodeType":"YulExpressionStatement","src":"786:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"742:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"753:5:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"764:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"769:10:13","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"760:3:13"},"nodeType":"YulFunctionCall","src":"760:20:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"749:3:13"},"nodeType":"YulFunctionCall","src":"749:32:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"739:2:13"},"nodeType":"YulFunctionCall","src":"739:43:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"732:6:13"},"nodeType":"YulFunctionCall","src":"732:51:13"},"nodeType":"YulIf","src":"729:71:13"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"708:5:13","type":""}],"src":"675:131:13"},{"body":{"nodeType":"YulBlock","src":"880:176:13","statements":[{"body":{"nodeType":"YulBlock","src":"926:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"935:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"938:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"928:6:13"},"nodeType":"YulFunctionCall","src":"928:12:13"},"nodeType":"YulExpressionStatement","src":"928:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"901:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"910:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"897:3:13"},"nodeType":"YulFunctionCall","src":"897:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"922:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"893:3:13"},"nodeType":"YulFunctionCall","src":"893:32:13"},"nodeType":"YulIf","src":"890:52:13"},{"nodeType":"YulVariableDeclaration","src":"951:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"977:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"964:12:13"},"nodeType":"YulFunctionCall","src":"964:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"955:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1020:5:13"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"996:23:13"},"nodeType":"YulFunctionCall","src":"996:30:13"},"nodeType":"YulExpressionStatement","src":"996:30:13"},{"nodeType":"YulAssignment","src":"1035:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"1045:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1035:6:13"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"846:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"857:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"869:6:13","type":""}],"src":"811:245:13"},{"body":{"nodeType":"YulBlock","src":"1156:92:13","statements":[{"nodeType":"YulAssignment","src":"1166:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1178:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1189:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1174:3:13"},"nodeType":"YulFunctionCall","src":"1174:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1166:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1208:9:13"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1233:6:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1226:6:13"},"nodeType":"YulFunctionCall","src":"1226:14:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1219:6:13"},"nodeType":"YulFunctionCall","src":"1219:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1201:6:13"},"nodeType":"YulFunctionCall","src":"1201:41:13"},"nodeType":"YulExpressionStatement","src":"1201:41:13"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1125:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1136:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1147:4:13","type":""}],"src":"1061:187:13"},{"body":{"nodeType":"YulBlock","src":"1323:110:13","statements":[{"body":{"nodeType":"YulBlock","src":"1369:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1378:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1381:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1371:6:13"},"nodeType":"YulFunctionCall","src":"1371:12:13"},"nodeType":"YulExpressionStatement","src":"1371:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1344:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"1353:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1340:3:13"},"nodeType":"YulFunctionCall","src":"1340:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"1365:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1336:3:13"},"nodeType":"YulFunctionCall","src":"1336:32:13"},"nodeType":"YulIf","src":"1333:52:13"},{"nodeType":"YulAssignment","src":"1394:33:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1417:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1404:12:13"},"nodeType":"YulFunctionCall","src":"1404:23:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1394:6:13"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1289:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1300:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1312:6:13","type":""}],"src":"1253:180:13"},{"body":{"nodeType":"YulBlock","src":"1504:184:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1514:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1523:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1518:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1583:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1608:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"1613:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1604:3:13"},"nodeType":"YulFunctionCall","src":"1604:11:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1627:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"1632:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1623:3:13"},"nodeType":"YulFunctionCall","src":"1623:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1617:5:13"},"nodeType":"YulFunctionCall","src":"1617:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1597:6:13"},"nodeType":"YulFunctionCall","src":"1597:39:13"},"nodeType":"YulExpressionStatement","src":"1597:39:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1544:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"1547:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1541:2:13"},"nodeType":"YulFunctionCall","src":"1541:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1555:19:13","statements":[{"nodeType":"YulAssignment","src":"1557:15:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1566:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"1569:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1562:3:13"},"nodeType":"YulFunctionCall","src":"1562:10:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1557:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"1537:3:13","statements":[]},"src":"1533:113:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1666:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"1671:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1662:3:13"},"nodeType":"YulFunctionCall","src":"1662:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"1680:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1655:6:13"},"nodeType":"YulFunctionCall","src":"1655:27:13"},"nodeType":"YulExpressionStatement","src":"1655:27:13"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1482:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1487:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"1492:6:13","type":""}],"src":"1438:250:13"},{"body":{"nodeType":"YulBlock","src":"1743:221:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1753:26:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1767:5:13"},"nodeType":"YulFunctionCall","src":"1767:12:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1757:6:13","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1795:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"1800:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1788:6:13"},"nodeType":"YulFunctionCall","src":"1788:19:13"},"nodeType":"YulExpressionStatement","src":"1788:19:13"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1855:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1862:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1851:3:13"},"nodeType":"YulFunctionCall","src":"1851:16:13"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1873:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1878:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1869:3:13"},"nodeType":"YulFunctionCall","src":"1869:14:13"},{"name":"length","nodeType":"YulIdentifier","src":"1885:6:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1816:34:13"},"nodeType":"YulFunctionCall","src":"1816:76:13"},"nodeType":"YulExpressionStatement","src":"1816:76:13"},{"nodeType":"YulAssignment","src":"1901:57:13","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1916:3:13"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1929:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1937:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1925:3:13"},"nodeType":"YulFunctionCall","src":"1925:15:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1946:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1942:3:13"},"nodeType":"YulFunctionCall","src":"1942:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1921:3:13"},"nodeType":"YulFunctionCall","src":"1921:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1912:3:13"},"nodeType":"YulFunctionCall","src":"1912:39:13"},{"kind":"number","nodeType":"YulLiteral","src":"1953:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1908:3:13"},"nodeType":"YulFunctionCall","src":"1908:50:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1901:3:13"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1720:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1727:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1735:3:13","type":""}],"src":"1693:271:13"},{"body":{"nodeType":"YulBlock","src":"2090:99:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2107:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2118:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2100:6:13"},"nodeType":"YulFunctionCall","src":"2100:21:13"},"nodeType":"YulExpressionStatement","src":"2100:21:13"},{"nodeType":"YulAssignment","src":"2130:53:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2156:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2168:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2179:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2164:3:13"},"nodeType":"YulFunctionCall","src":"2164:18:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2138:17:13"},"nodeType":"YulFunctionCall","src":"2138:45:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2130:4:13"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2059:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2070:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2081:4:13","type":""}],"src":"1969:220:13"},{"body":{"nodeType":"YulBlock","src":"2295:125:13","statements":[{"nodeType":"YulAssignment","src":"2305:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2317:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2328:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2313:3:13"},"nodeType":"YulFunctionCall","src":"2313:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2305:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2347:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2362:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2370:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2358:3:13"},"nodeType":"YulFunctionCall","src":"2358:55:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2340:6:13"},"nodeType":"YulFunctionCall","src":"2340:74:13"},"nodeType":"YulExpressionStatement","src":"2340:74:13"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2264:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2275:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2286:4:13","type":""}],"src":"2194:226:13"},{"body":{"nodeType":"YulBlock","src":"2457:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2474:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2481:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2486:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2477:3:13"},"nodeType":"YulFunctionCall","src":"2477:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2467:6:13"},"nodeType":"YulFunctionCall","src":"2467:31:13"},"nodeType":"YulExpressionStatement","src":"2467:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2514:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2517:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2507:6:13"},"nodeType":"YulFunctionCall","src":"2507:15:13"},"nodeType":"YulExpressionStatement","src":"2507:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2538:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2541:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2531:6:13"},"nodeType":"YulFunctionCall","src":"2531:15:13"},"nodeType":"YulExpressionStatement","src":"2531:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2425:127:13"},{"body":{"nodeType":"YulBlock","src":"2604:202:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2614:58:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2636:6:13"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2652:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"2658:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2648:3:13"},"nodeType":"YulFunctionCall","src":"2648:13:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2667:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2663:3:13"},"nodeType":"YulFunctionCall","src":"2663:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2644:3:13"},"nodeType":"YulFunctionCall","src":"2644:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2632:3:13"},"nodeType":"YulFunctionCall","src":"2632:40:13"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2618:10:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2747:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2749:16:13"},"nodeType":"YulFunctionCall","src":"2749:18:13"},"nodeType":"YulExpressionStatement","src":"2749:18:13"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2690:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"2702:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2687:2:13"},"nodeType":"YulFunctionCall","src":"2687:34:13"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2726:10:13"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2738:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2723:2:13"},"nodeType":"YulFunctionCall","src":"2723:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2684:2:13"},"nodeType":"YulFunctionCall","src":"2684:62:13"},"nodeType":"YulIf","src":"2681:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2785:2:13","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2789:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2778:6:13"},"nodeType":"YulFunctionCall","src":"2778:22:13"},"nodeType":"YulExpressionStatement","src":"2778:22:13"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2586:6:13","type":""},{"name":"size","nodeType":"YulTypedName","src":"2594:4:13","type":""}],"src":"2557:249:13"},{"body":{"nodeType":"YulBlock","src":"2880:114:13","statements":[{"body":{"nodeType":"YulBlock","src":"2924:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2926:16:13"},"nodeType":"YulFunctionCall","src":"2926:18:13"},"nodeType":"YulExpressionStatement","src":"2926:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2896:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2904:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2893:2:13"},"nodeType":"YulFunctionCall","src":"2893:30:13"},"nodeType":"YulIf","src":"2890:56:13"},{"nodeType":"YulAssignment","src":"2955:33:13","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2971:1:13","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2974:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2967:3:13"},"nodeType":"YulFunctionCall","src":"2967:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"2983:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2963:3:13"},"nodeType":"YulFunctionCall","src":"2963:25:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2955:4:13"}]}]},"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2860:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2871:4:13","type":""}],"src":"2811:183:13"},{"body":{"nodeType":"YulBlock","src":"3063:660:13","statements":[{"body":{"nodeType":"YulBlock","src":"3112:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3121:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3124:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3114:6:13"},"nodeType":"YulFunctionCall","src":"3114:12:13"},"nodeType":"YulExpressionStatement","src":"3114:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3091:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3099:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3087:3:13"},"nodeType":"YulFunctionCall","src":"3087:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"3106:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3083:3:13"},"nodeType":"YulFunctionCall","src":"3083:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3076:6:13"},"nodeType":"YulFunctionCall","src":"3076:35:13"},"nodeType":"YulIf","src":"3073:55:13"},{"nodeType":"YulVariableDeclaration","src":"3137:30:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3160:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3147:12:13"},"nodeType":"YulFunctionCall","src":"3147:20:13"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3141:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3176:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3186:4:13","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3180:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3199:53:13","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3249:2:13"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"3209:39:13"},"nodeType":"YulFunctionCall","src":"3209:43:13"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3203:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3261:23:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3281:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3275:5:13"},"nodeType":"YulFunctionCall","src":"3275:9:13"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3265:6:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3313:6:13"},{"name":"_3","nodeType":"YulIdentifier","src":"3321:2:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3293:19:13"},"nodeType":"YulFunctionCall","src":"3293:31:13"},"nodeType":"YulExpressionStatement","src":"3293:31:13"},{"nodeType":"YulVariableDeclaration","src":"3333:17:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3344:6:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3337:3:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3366:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"3374:2:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3359:6:13"},"nodeType":"YulFunctionCall","src":"3359:18:13"},"nodeType":"YulExpressionStatement","src":"3359:18:13"},{"nodeType":"YulAssignment","src":"3386:22:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3397:6:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3405:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3393:3:13"},"nodeType":"YulFunctionCall","src":"3393:15:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3386:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"3417:46:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3439:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3451:1:13","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"3454:2:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3447:3:13"},"nodeType":"YulFunctionCall","src":"3447:10:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3435:3:13"},"nodeType":"YulFunctionCall","src":"3435:23:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3460:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3431:3:13"},"nodeType":"YulFunctionCall","src":"3431:32:13"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3421:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3491:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3500:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3503:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3493:6:13"},"nodeType":"YulFunctionCall","src":"3493:12:13"},"nodeType":"YulExpressionStatement","src":"3493:12:13"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3478:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"3486:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3475:2:13"},"nodeType":"YulFunctionCall","src":"3475:15:13"},"nodeType":"YulIf","src":"3472:35:13"},{"nodeType":"YulVariableDeclaration","src":"3516:26:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3531:6:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3539:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:13"},"nodeType":"YulFunctionCall","src":"3527:15:13"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3520:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3607:86:13","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3628:3:13"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3646:3:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3633:12:13"},"nodeType":"YulFunctionCall","src":"3633:17:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3621:6:13"},"nodeType":"YulFunctionCall","src":"3621:30:13"},"nodeType":"YulExpressionStatement","src":"3621:30:13"},{"nodeType":"YulAssignment","src":"3664:19:13","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3675:3:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3680:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3671:3:13"},"nodeType":"YulFunctionCall","src":"3671:12:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3664:3:13"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3562:3:13"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3567:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3559:2:13"},"nodeType":"YulFunctionCall","src":"3559:15:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3575:23:13","statements":[{"nodeType":"YulAssignment","src":"3577:19:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3588:3:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3593:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3584:3:13"},"nodeType":"YulFunctionCall","src":"3584:12:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3577:3:13"}]}]},"pre":{"nodeType":"YulBlock","src":"3555:3:13","statements":[]},"src":"3551:142:13"},{"nodeType":"YulAssignment","src":"3702:15:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3711:6:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3702:5:13"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3037:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"3045:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3053:5:13","type":""}],"src":"2999:724:13"},{"body":{"nodeType":"YulBlock","src":"3802:394:13","statements":[{"body":{"nodeType":"YulBlock","src":"3846:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3848:16:13"},"nodeType":"YulFunctionCall","src":"3848:18:13"},"nodeType":"YulExpressionStatement","src":"3848:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3818:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3826:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3815:2:13"},"nodeType":"YulFunctionCall","src":"3815:30:13"},"nodeType":"YulIf","src":"3812:56:13"},{"nodeType":"YulVariableDeclaration","src":"3877:23:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3897:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3891:5:13"},"nodeType":"YulFunctionCall","src":"3891:9:13"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3881:6:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3929:6:13"},{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3949:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3957:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3945:3:13"},"nodeType":"YulFunctionCall","src":"3945:15:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3966:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3962:3:13"},"nodeType":"YulFunctionCall","src":"3962:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3941:3:13"},"nodeType":"YulFunctionCall","src":"3941:29:13"},{"kind":"number","nodeType":"YulLiteral","src":"3972:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:13"},"nodeType":"YulFunctionCall","src":"3937:40:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3909:19:13"},"nodeType":"YulFunctionCall","src":"3909:69:13"},"nodeType":"YulExpressionStatement","src":"3909:69:13"},{"nodeType":"YulAssignment","src":"3987:15:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3996:6:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3987:5:13"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4018:6:13"},{"name":"length","nodeType":"YulIdentifier","src":"4026:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4011:6:13"},"nodeType":"YulFunctionCall","src":"4011:22:13"},"nodeType":"YulExpressionStatement","src":"4011:22:13"},{"body":{"nodeType":"YulBlock","src":"4071:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4080:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4083:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4073:6:13"},"nodeType":"YulFunctionCall","src":"4073:12:13"},"nodeType":"YulExpressionStatement","src":"4073:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4052:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"4057:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4048:3:13"},"nodeType":"YulFunctionCall","src":"4048:16:13"},{"name":"end","nodeType":"YulIdentifier","src":"4066:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4045:2:13"},"nodeType":"YulFunctionCall","src":"4045:25:13"},"nodeType":"YulIf","src":"4042:45:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4113:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4121:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4109:3:13"},"nodeType":"YulFunctionCall","src":"4109:17:13"},{"name":"src","nodeType":"YulIdentifier","src":"4128:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"4133:6:13"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4096:12:13"},"nodeType":"YulFunctionCall","src":"4096:44:13"},"nodeType":"YulExpressionStatement","src":"4096:44:13"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4164:6:13"},{"name":"length","nodeType":"YulIdentifier","src":"4172:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4160:3:13"},"nodeType":"YulFunctionCall","src":"4160:19:13"},{"kind":"number","nodeType":"YulLiteral","src":"4181:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4156:3:13"},"nodeType":"YulFunctionCall","src":"4156:30:13"},{"kind":"number","nodeType":"YulLiteral","src":"4188:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4149:6:13"},"nodeType":"YulFunctionCall","src":"4149:41:13"},"nodeType":"YulExpressionStatement","src":"4149:41:13"}]},"name":"abi_decode_available_length_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3771:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"3776:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"3784:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3792:5:13","type":""}],"src":"3728:468:13"},{"body":{"nodeType":"YulBlock","src":"4253:168:13","statements":[{"body":{"nodeType":"YulBlock","src":"4302:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4311:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4314:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4304:6:13"},"nodeType":"YulFunctionCall","src":"4304:12:13"},"nodeType":"YulExpressionStatement","src":"4304:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4281:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4289:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4277:3:13"},"nodeType":"YulFunctionCall","src":"4277:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"4296:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4273:3:13"},"nodeType":"YulFunctionCall","src":"4273:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4266:6:13"},"nodeType":"YulFunctionCall","src":"4266:35:13"},"nodeType":"YulIf","src":"4263:55:13"},{"nodeType":"YulAssignment","src":"4327:88:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4374:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4382:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4370:3:13"},"nodeType":"YulFunctionCall","src":"4370:17:13"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4402:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4389:12:13"},"nodeType":"YulFunctionCall","src":"4389:20:13"},{"name":"end","nodeType":"YulIdentifier","src":"4411:3:13"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"4336:33:13"},"nodeType":"YulFunctionCall","src":"4336:79:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4327:5:13"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4227:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"4235:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4243:5:13","type":""}],"src":"4201:220:13"},{"body":{"nodeType":"YulBlock","src":"4623:874:13","statements":[{"body":{"nodeType":"YulBlock","src":"4670:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4679:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4682:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4672:6:13"},"nodeType":"YulFunctionCall","src":"4672:12:13"},"nodeType":"YulExpressionStatement","src":"4672:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4644:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"4653:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4640:3:13"},"nodeType":"YulFunctionCall","src":"4640:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"4665:3:13","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4636:3:13"},"nodeType":"YulFunctionCall","src":"4636:33:13"},"nodeType":"YulIf","src":"4633:53:13"},{"nodeType":"YulVariableDeclaration","src":"4695:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4721:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4708:12:13"},"nodeType":"YulFunctionCall","src":"4708:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4699:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4765:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4740:24:13"},"nodeType":"YulFunctionCall","src":"4740:31:13"},"nodeType":"YulExpressionStatement","src":"4740:31:13"},{"nodeType":"YulAssignment","src":"4780:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"4790:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4780:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"4804:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4836:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4847:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4832:3:13"},"nodeType":"YulFunctionCall","src":"4832:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4819:12:13"},"nodeType":"YulFunctionCall","src":"4819:32:13"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4808:7:13","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4885:7:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4860:24:13"},"nodeType":"YulFunctionCall","src":"4860:33:13"},"nodeType":"YulExpressionStatement","src":"4860:33:13"},{"nodeType":"YulAssignment","src":"4902:17:13","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4912:7:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4902:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"4928:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4959:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4970:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4955:3:13"},"nodeType":"YulFunctionCall","src":"4955:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4942:12:13"},"nodeType":"YulFunctionCall","src":"4942:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4932:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4983:28:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4993:18:13","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4987:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5038:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5047:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5050:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5040:6:13"},"nodeType":"YulFunctionCall","src":"5040:12:13"},"nodeType":"YulExpressionStatement","src":"5040:12:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5026:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"5034:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5023:2:13"},"nodeType":"YulFunctionCall","src":"5023:14:13"},"nodeType":"YulIf","src":"5020:34:13"},{"nodeType":"YulAssignment","src":"5063:71:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5106:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5117:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5102:3:13"},"nodeType":"YulFunctionCall","src":"5102:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5126:7:13"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"5073:28:13"},"nodeType":"YulFunctionCall","src":"5073:61:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5063:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"5143:48:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5176:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5172:3:13"},"nodeType":"YulFunctionCall","src":"5172:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5159:12:13"},"nodeType":"YulFunctionCall","src":"5159:32:13"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5147:8:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5220:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5229:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5232:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5222:6:13"},"nodeType":"YulFunctionCall","src":"5222:12:13"},"nodeType":"YulExpressionStatement","src":"5222:12:13"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5206:8:13"},{"name":"_1","nodeType":"YulIdentifier","src":"5216:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5203:2:13"},"nodeType":"YulFunctionCall","src":"5203:16:13"},"nodeType":"YulIf","src":"5200:36:13"},{"nodeType":"YulAssignment","src":"5245:73:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5288:9:13"},{"name":"offset_1","nodeType":"YulIdentifier","src":"5299:8:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5284:3:13"},"nodeType":"YulFunctionCall","src":"5284:24:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5310:7:13"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"5255:28:13"},"nodeType":"YulFunctionCall","src":"5255:63:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5245:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"5327:49:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5360:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5371:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5356:3:13"},"nodeType":"YulFunctionCall","src":"5356:19:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5343:12:13"},"nodeType":"YulFunctionCall","src":"5343:33:13"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"5331:8:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5405:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5414:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5417:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5407:6:13"},"nodeType":"YulFunctionCall","src":"5407:12:13"},"nodeType":"YulExpressionStatement","src":"5407:12:13"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"5391:8:13"},{"name":"_1","nodeType":"YulIdentifier","src":"5401:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5388:2:13"},"nodeType":"YulFunctionCall","src":"5388:16:13"},"nodeType":"YulIf","src":"5385:36:13"},{"nodeType":"YulAssignment","src":"5430:61:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5461:9:13"},{"name":"offset_2","nodeType":"YulIdentifier","src":"5472:8:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5457:3:13"},"nodeType":"YulFunctionCall","src":"5457:24:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5483:7:13"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"5440:16:13"},"nodeType":"YulFunctionCall","src":"5440:51:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5430:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4557:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4568:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4580:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4588:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4596:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4604:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4612:6:13","type":""}],"src":"4426:1071:13"},{"body":{"nodeType":"YulBlock","src":"5599:425:13","statements":[{"body":{"nodeType":"YulBlock","src":"5645:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5654:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5657:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5647:6:13"},"nodeType":"YulFunctionCall","src":"5647:12:13"},"nodeType":"YulExpressionStatement","src":"5647:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5620:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"5629:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5616:3:13"},"nodeType":"YulFunctionCall","src":"5616:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"5641:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5612:3:13"},"nodeType":"YulFunctionCall","src":"5612:32:13"},"nodeType":"YulIf","src":"5609:52:13"},{"nodeType":"YulVariableDeclaration","src":"5670:37:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5697:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5684:12:13"},"nodeType":"YulFunctionCall","src":"5684:23:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5674:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5750:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5759:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5762:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5752:6:13"},"nodeType":"YulFunctionCall","src":"5752:12:13"},"nodeType":"YulExpressionStatement","src":"5752:12:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5722:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"5730:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5719:2:13"},"nodeType":"YulFunctionCall","src":"5719:30:13"},"nodeType":"YulIf","src":"5716:50:13"},{"nodeType":"YulVariableDeclaration","src":"5775:32:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5789:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5800:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5785:3:13"},"nodeType":"YulFunctionCall","src":"5785:22:13"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5779:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5855:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5864:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5867:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5857:6:13"},"nodeType":"YulFunctionCall","src":"5857:12:13"},"nodeType":"YulExpressionStatement","src":"5857:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5834:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"5838:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5830:3:13"},"nodeType":"YulFunctionCall","src":"5830:13:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5845:7:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5826:3:13"},"nodeType":"YulFunctionCall","src":"5826:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5819:6:13"},"nodeType":"YulFunctionCall","src":"5819:35:13"},"nodeType":"YulIf","src":"5816:55:13"},{"nodeType":"YulAssignment","src":"5880:85:13","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5928:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"5932:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5924:3:13"},"nodeType":"YulFunctionCall","src":"5924:13:13"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5952:2:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5939:12:13"},"nodeType":"YulFunctionCall","src":"5939:16:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5957:7:13"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"5890:33:13"},"nodeType":"YulFunctionCall","src":"5890:75:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5880:6:13"}]},{"nodeType":"YulAssignment","src":"5974:44:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6001:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6012:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5997:3:13"},"nodeType":"YulFunctionCall","src":"5997:20:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5984:12:13"},"nodeType":"YulFunctionCall","src":"5984:34:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5974:6:13"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5557:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5568:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5580:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5588:6:13","type":""}],"src":"5502:522:13"},{"body":{"nodeType":"YulBlock","src":"6166:1140:13","statements":[{"body":{"nodeType":"YulBlock","src":"6212:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6221:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6224:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6214:6:13"},"nodeType":"YulFunctionCall","src":"6214:12:13"},"nodeType":"YulExpressionStatement","src":"6214:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6187:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"6196:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6183:3:13"},"nodeType":"YulFunctionCall","src":"6183:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"6208:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6179:3:13"},"nodeType":"YulFunctionCall","src":"6179:32:13"},"nodeType":"YulIf","src":"6176:52:13"},{"nodeType":"YulVariableDeclaration","src":"6237:37:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6264:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6251:12:13"},"nodeType":"YulFunctionCall","src":"6251:23:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6241:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6283:28:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6293:18:13","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6287:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6338:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6347:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6350:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6340:6:13"},"nodeType":"YulFunctionCall","src":"6340:12:13"},"nodeType":"YulExpressionStatement","src":"6340:12:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6326:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"6334:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6323:2:13"},"nodeType":"YulFunctionCall","src":"6323:14:13"},"nodeType":"YulIf","src":"6320:34:13"},{"nodeType":"YulVariableDeclaration","src":"6363:32:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6377:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"6388:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6373:3:13"},"nodeType":"YulFunctionCall","src":"6373:22:13"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6367:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6443:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6452:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6455:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6445:6:13"},"nodeType":"YulFunctionCall","src":"6445:12:13"},"nodeType":"YulExpressionStatement","src":"6445:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6422:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"6426:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6418:3:13"},"nodeType":"YulFunctionCall","src":"6418:13:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6433:7:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6414:3:13"},"nodeType":"YulFunctionCall","src":"6414:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6407:6:13"},"nodeType":"YulFunctionCall","src":"6407:35:13"},"nodeType":"YulIf","src":"6404:55:13"},{"nodeType":"YulVariableDeclaration","src":"6468:26:13","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6491:2:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6478:12:13"},"nodeType":"YulFunctionCall","src":"6478:16:13"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"6472:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6503:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6513:4:13","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"6507:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6526:53:13","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"6576:2:13"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"6536:39:13"},"nodeType":"YulFunctionCall","src":"6536:43:13"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"6530:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6588:23:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6608:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6602:5:13"},"nodeType":"YulFunctionCall","src":"6602:9:13"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6592:6:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6640:6:13"},{"name":"_5","nodeType":"YulIdentifier","src":"6648:2:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6620:19:13"},"nodeType":"YulFunctionCall","src":"6620:31:13"},"nodeType":"YulExpressionStatement","src":"6620:31:13"},{"nodeType":"YulVariableDeclaration","src":"6660:17:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"6671:6:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6664:3:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6693:6:13"},{"name":"_3","nodeType":"YulIdentifier","src":"6701:2:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6686:6:13"},"nodeType":"YulFunctionCall","src":"6686:18:13"},"nodeType":"YulExpressionStatement","src":"6686:18:13"},{"nodeType":"YulAssignment","src":"6713:22:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6724:6:13"},{"name":"_4","nodeType":"YulIdentifier","src":"6732:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6720:3:13"},"nodeType":"YulFunctionCall","src":"6720:15:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6713:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"6744:42:13","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6766:2:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6774:1:13","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"6777:2:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6770:3:13"},"nodeType":"YulFunctionCall","src":"6770:10:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6762:3:13"},"nodeType":"YulFunctionCall","src":"6762:19:13"},{"name":"_4","nodeType":"YulIdentifier","src":"6783:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6758:3:13"},"nodeType":"YulFunctionCall","src":"6758:28:13"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6748:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6818:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6830:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6820:6:13"},"nodeType":"YulFunctionCall","src":"6820:12:13"},"nodeType":"YulExpressionStatement","src":"6820:12:13"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6801:6:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6809:7:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6798:2:13"},"nodeType":"YulFunctionCall","src":"6798:19:13"},"nodeType":"YulIf","src":"6795:39:13"},{"nodeType":"YulVariableDeclaration","src":"6843:22:13","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6858:2:13"},{"name":"_4","nodeType":"YulIdentifier","src":"6862:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6854:3:13"},"nodeType":"YulFunctionCall","src":"6854:11:13"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6847:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6930:161:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6944:30:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6970:3:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6957:12:13"},"nodeType":"YulFunctionCall","src":"6957:17:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6948:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7012:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6987:24:13"},"nodeType":"YulFunctionCall","src":"6987:31:13"},"nodeType":"YulExpressionStatement","src":"6987:31:13"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7038:3:13"},{"name":"value","nodeType":"YulIdentifier","src":"7043:5:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7031:6:13"},"nodeType":"YulFunctionCall","src":"7031:18:13"},"nodeType":"YulExpressionStatement","src":"7031:18:13"},{"nodeType":"YulAssignment","src":"7062:19:13","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7073:3:13"},{"name":"_4","nodeType":"YulIdentifier","src":"7078:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7069:3:13"},"nodeType":"YulFunctionCall","src":"7069:12:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7062:3:13"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6885:3:13"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6890:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6882:2:13"},"nodeType":"YulFunctionCall","src":"6882:15:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6898:23:13","statements":[{"nodeType":"YulAssignment","src":"6900:19:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6911:3:13"},{"name":"_4","nodeType":"YulIdentifier","src":"6916:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6907:3:13"},"nodeType":"YulFunctionCall","src":"6907:12:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6900:3:13"}]}]},"pre":{"nodeType":"YulBlock","src":"6878:3:13","statements":[]},"src":"6874:217:13"},{"nodeType":"YulAssignment","src":"7100:16:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"7110:6:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7100:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"7125:48:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7158:9:13"},{"name":"_4","nodeType":"YulIdentifier","src":"7169:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7154:3:13"},"nodeType":"YulFunctionCall","src":"7154:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7141:12:13"},"nodeType":"YulFunctionCall","src":"7141:32:13"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"7129:8:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"7202:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7211:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7214:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7204:6:13"},"nodeType":"YulFunctionCall","src":"7204:12:13"},"nodeType":"YulExpressionStatement","src":"7204:12:13"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"7188:8:13"},{"name":"_1","nodeType":"YulIdentifier","src":"7198:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7185:2:13"},"nodeType":"YulFunctionCall","src":"7185:16:13"},"nodeType":"YulIf","src":"7182:36:13"},{"nodeType":"YulAssignment","src":"7227:73:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7270:9:13"},{"name":"offset_1","nodeType":"YulIdentifier","src":"7281:8:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7266:3:13"},"nodeType":"YulFunctionCall","src":"7266:24:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7292:7:13"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"7237:28:13"},"nodeType":"YulFunctionCall","src":"7237:63:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7227:6:13"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6124:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6135:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6147:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6155:6:13","type":""}],"src":"6029:1277:13"},{"body":{"nodeType":"YulBlock","src":"7372:374:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7382:26:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7402:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7396:5:13"},"nodeType":"YulFunctionCall","src":"7396:12:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7386:6:13","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7424:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"7429:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7417:6:13"},"nodeType":"YulFunctionCall","src":"7417:19:13"},"nodeType":"YulExpressionStatement","src":"7417:19:13"},{"nodeType":"YulVariableDeclaration","src":"7445:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"7455:4:13","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7449:2:13","type":""}]},{"nodeType":"YulAssignment","src":"7468:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7479:3:13"},{"name":"_1","nodeType":"YulIdentifier","src":"7484:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7475:3:13"},"nodeType":"YulFunctionCall","src":"7475:12:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7468:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"7496:28:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7514:5:13"},{"name":"_1","nodeType":"YulIdentifier","src":"7521:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7510:3:13"},"nodeType":"YulFunctionCall","src":"7510:14:13"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7500:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7533:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"7542:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7537:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"7601:120:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7622:3:13"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7633:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7627:5:13"},"nodeType":"YulFunctionCall","src":"7627:13:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7615:6:13"},"nodeType":"YulFunctionCall","src":"7615:26:13"},"nodeType":"YulExpressionStatement","src":"7615:26:13"},{"nodeType":"YulAssignment","src":"7654:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7665:3:13"},{"name":"_1","nodeType":"YulIdentifier","src":"7670:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7661:3:13"},"nodeType":"YulFunctionCall","src":"7661:12:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7654:3:13"}]},{"nodeType":"YulAssignment","src":"7686:25:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7700:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"7708:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7696:3:13"},"nodeType":"YulFunctionCall","src":"7696:15:13"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7686:6:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7563:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"7566:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7560:2:13"},"nodeType":"YulFunctionCall","src":"7560:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7574:18:13","statements":[{"nodeType":"YulAssignment","src":"7576:14:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7585:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"7588:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7581:3:13"},"nodeType":"YulFunctionCall","src":"7581:9:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7576:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"7556:3:13","statements":[]},"src":"7552:169:13"},{"nodeType":"YulAssignment","src":"7730:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"7737:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7730:3:13"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7349:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7356:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7364:3:13","type":""}],"src":"7311:435:13"},{"body":{"nodeType":"YulBlock","src":"7902:110:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7919:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7930:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7912:6:13"},"nodeType":"YulFunctionCall","src":"7912:21:13"},"nodeType":"YulExpressionStatement","src":"7912:21:13"},{"nodeType":"YulAssignment","src":"7942:64:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7979:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7991:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8002:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7987:3:13"},"nodeType":"YulFunctionCall","src":"7987:18:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"7950:28:13"},"nodeType":"YulFunctionCall","src":"7950:56:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7942:4:13"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7871:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7882:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7893:4:13","type":""}],"src":"7751:261:13"},{"body":{"nodeType":"YulBlock","src":"8112:228:13","statements":[{"body":{"nodeType":"YulBlock","src":"8158:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8167:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8170:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8160:6:13"},"nodeType":"YulFunctionCall","src":"8160:12:13"},"nodeType":"YulExpressionStatement","src":"8160:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8133:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"8142:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8129:3:13"},"nodeType":"YulFunctionCall","src":"8129:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"8154:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8125:3:13"},"nodeType":"YulFunctionCall","src":"8125:32:13"},"nodeType":"YulIf","src":"8122:52:13"},{"nodeType":"YulAssignment","src":"8183:33:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8206:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8193:12:13"},"nodeType":"YulFunctionCall","src":"8193:23:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8183:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"8225:45:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8255:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8266:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8251:3:13"},"nodeType":"YulFunctionCall","src":"8251:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8238:12:13"},"nodeType":"YulFunctionCall","src":"8238:32:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8229:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8304:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"8279:24:13"},"nodeType":"YulFunctionCall","src":"8279:31:13"},"nodeType":"YulExpressionStatement","src":"8279:31:13"},{"nodeType":"YulAssignment","src":"8319:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"8329:5:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8319:6:13"}]}]},"name":"abi_decode_tuple_t_uint256t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8070:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8081:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8093:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8101:6:13","type":""}],"src":"8017:323:13"},{"body":{"nodeType":"YulBlock","src":"8429:332:13","statements":[{"body":{"nodeType":"YulBlock","src":"8475:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8484:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8487:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8477:6:13"},"nodeType":"YulFunctionCall","src":"8477:12:13"},"nodeType":"YulExpressionStatement","src":"8477:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8450:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"8459:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8446:3:13"},"nodeType":"YulFunctionCall","src":"8446:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"8471:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8442:3:13"},"nodeType":"YulFunctionCall","src":"8442:32:13"},"nodeType":"YulIf","src":"8439:52:13"},{"nodeType":"YulVariableDeclaration","src":"8500:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8526:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8513:12:13"},"nodeType":"YulFunctionCall","src":"8513:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8504:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8570:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"8545:24:13"},"nodeType":"YulFunctionCall","src":"8545:31:13"},"nodeType":"YulExpressionStatement","src":"8545:31:13"},{"nodeType":"YulAssignment","src":"8585:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"8595:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8585:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"8609:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8641:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8652:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8637:3:13"},"nodeType":"YulFunctionCall","src":"8637:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8624:12:13"},"nodeType":"YulFunctionCall","src":"8624:32:13"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"8613:7:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"8713:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8722:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8725:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8715:6:13"},"nodeType":"YulFunctionCall","src":"8715:12:13"},"nodeType":"YulExpressionStatement","src":"8715:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"8678:7:13"},{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"8701:7:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8694:6:13"},"nodeType":"YulFunctionCall","src":"8694:15:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8687:6:13"},"nodeType":"YulFunctionCall","src":"8687:23:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8675:2:13"},"nodeType":"YulFunctionCall","src":"8675:36:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8668:6:13"},"nodeType":"YulFunctionCall","src":"8668:44:13"},"nodeType":"YulIf","src":"8665:64:13"},{"nodeType":"YulAssignment","src":"8738:17:13","value":{"name":"value_1","nodeType":"YulIdentifier","src":"8748:7:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8738:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8387:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8398:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8410:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8418:6:13","type":""}],"src":"8345:416:13"},{"body":{"nodeType":"YulBlock","src":"8865:103:13","statements":[{"nodeType":"YulAssignment","src":"8875:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8887:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8898:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8883:3:13"},"nodeType":"YulFunctionCall","src":"8883:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8875:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8917:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8932:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8944:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8949:10:13","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8940:3:13"},"nodeType":"YulFunctionCall","src":"8940:20:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8928:3:13"},"nodeType":"YulFunctionCall","src":"8928:33:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8910:6:13"},"nodeType":"YulFunctionCall","src":"8910:52:13"},"nodeType":"YulExpressionStatement","src":"8910:52:13"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8834:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8845:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8856:4:13","type":""}],"src":"8766:202:13"},{"body":{"nodeType":"YulBlock","src":"9122:600:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9139:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9150:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9132:6:13"},"nodeType":"YulFunctionCall","src":"9132:21:13"},"nodeType":"YulExpressionStatement","src":"9132:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9173:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9184:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9169:3:13"},"nodeType":"YulFunctionCall","src":"9169:18:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9195:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9189:5:13"},"nodeType":"YulFunctionCall","src":"9189:13:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9162:6:13"},"nodeType":"YulFunctionCall","src":"9162:41:13"},"nodeType":"YulExpressionStatement","src":"9162:41:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9223:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9234:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9219:3:13"},"nodeType":"YulFunctionCall","src":"9219:18:13"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9253:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9261:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9249:3:13"},"nodeType":"YulFunctionCall","src":"9249:15:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9243:5:13"},"nodeType":"YulFunctionCall","src":"9243:22:13"},{"kind":"number","nodeType":"YulLiteral","src":"9267:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9239:3:13"},"nodeType":"YulFunctionCall","src":"9239:71:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9212:6:13"},"nodeType":"YulFunctionCall","src":"9212:99:13"},"nodeType":"YulExpressionStatement","src":"9212:99:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9331:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9342:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9327:3:13"},"nodeType":"YulFunctionCall","src":"9327:18:13"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9357:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9365:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9353:3:13"},"nodeType":"YulFunctionCall","src":"9353:15:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9347:5:13"},"nodeType":"YulFunctionCall","src":"9347:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9320:6:13"},"nodeType":"YulFunctionCall","src":"9320:50:13"},"nodeType":"YulExpressionStatement","src":"9320:50:13"},{"nodeType":"YulVariableDeclaration","src":"9379:42:13","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9409:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9417:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9405:3:13"},"nodeType":"YulFunctionCall","src":"9405:15:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9399:5:13"},"nodeType":"YulFunctionCall","src":"9399:22:13"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9383:12:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9441:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9452:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9437:3:13"},"nodeType":"YulFunctionCall","src":"9437:19:13"},{"kind":"number","nodeType":"YulLiteral","src":"9458:4:13","type":"","value":"0xc0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9430:6:13"},"nodeType":"YulFunctionCall","src":"9430:33:13"},"nodeType":"YulExpressionStatement","src":"9430:33:13"},{"nodeType":"YulVariableDeclaration","src":"9472:66:13","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9504:12:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9522:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9533:3:13","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9518:3:13"},"nodeType":"YulFunctionCall","src":"9518:19:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"9486:17:13"},"nodeType":"YulFunctionCall","src":"9486:52:13"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"9476:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9558:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9569:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9554:3:13"},"nodeType":"YulFunctionCall","src":"9554:19:13"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9599:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9607:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9595:3:13"},"nodeType":"YulFunctionCall","src":"9595:16:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9589:5:13"},"nodeType":"YulFunctionCall","src":"9589:23:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9582:6:13"},"nodeType":"YulFunctionCall","src":"9582:31:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9575:6:13"},"nodeType":"YulFunctionCall","src":"9575:39:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9547:6:13"},"nodeType":"YulFunctionCall","src":"9547:68:13"},"nodeType":"YulExpressionStatement","src":"9547:68:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9635:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9646:4:13","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9631:3:13"},"nodeType":"YulFunctionCall","src":"9631:20:13"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9677:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9685:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9673:3:13"},"nodeType":"YulFunctionCall","src":"9673:16:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9667:5:13"},"nodeType":"YulFunctionCall","src":"9667:23:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9660:6:13"},"nodeType":"YulFunctionCall","src":"9660:31:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9653:6:13"},"nodeType":"YulFunctionCall","src":"9653:39:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9624:6:13"},"nodeType":"YulFunctionCall","src":"9624:69:13"},"nodeType":"YulExpressionStatement","src":"9624:69:13"},{"nodeType":"YulAssignment","src":"9702:14:13","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"9710:6:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9702:4:13"}]}]},"name":"abi_encode_tuple_t_struct$_Estate_$2324_memory_ptr__to_t_struct$_Estate_$2324_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9091:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9102:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9113:4:13","type":""}],"src":"8973:749:13"},{"body":{"nodeType":"YulBlock","src":"9814:301:13","statements":[{"body":{"nodeType":"YulBlock","src":"9860:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9869:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9872:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9862:6:13"},"nodeType":"YulFunctionCall","src":"9862:12:13"},"nodeType":"YulExpressionStatement","src":"9862:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9835:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"9844:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9831:3:13"},"nodeType":"YulFunctionCall","src":"9831:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"9856:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9827:3:13"},"nodeType":"YulFunctionCall","src":"9827:32:13"},"nodeType":"YulIf","src":"9824:52:13"},{"nodeType":"YulVariableDeclaration","src":"9885:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9911:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9898:12:13"},"nodeType":"YulFunctionCall","src":"9898:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9889:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9955:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9930:24:13"},"nodeType":"YulFunctionCall","src":"9930:31:13"},"nodeType":"YulExpressionStatement","src":"9930:31:13"},{"nodeType":"YulAssignment","src":"9970:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"9980:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9970:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"9994:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10026:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10037:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10022:3:13"},"nodeType":"YulFunctionCall","src":"10022:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10009:12:13"},"nodeType":"YulFunctionCall","src":"10009:32:13"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"9998:7:13","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"10075:7:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10050:24:13"},"nodeType":"YulFunctionCall","src":"10050:33:13"},"nodeType":"YulExpressionStatement","src":"10050:33:13"},{"nodeType":"YulAssignment","src":"10092:17:13","value":{"name":"value_1","nodeType":"YulIdentifier","src":"10102:7:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10092:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9772:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9783:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9795:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9803:6:13","type":""}],"src":"9727:388:13"},{"body":{"nodeType":"YulBlock","src":"10267:587:13","statements":[{"body":{"nodeType":"YulBlock","src":"10314:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10323:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10326:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10316:6:13"},"nodeType":"YulFunctionCall","src":"10316:12:13"},"nodeType":"YulExpressionStatement","src":"10316:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10288:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"10297:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10284:3:13"},"nodeType":"YulFunctionCall","src":"10284:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"10309:3:13","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10280:3:13"},"nodeType":"YulFunctionCall","src":"10280:33:13"},"nodeType":"YulIf","src":"10277:53:13"},{"nodeType":"YulVariableDeclaration","src":"10339:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10365:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10352:12:13"},"nodeType":"YulFunctionCall","src":"10352:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10343:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10409:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10384:24:13"},"nodeType":"YulFunctionCall","src":"10384:31:13"},"nodeType":"YulExpressionStatement","src":"10384:31:13"},{"nodeType":"YulAssignment","src":"10424:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"10434:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10424:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"10448:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10480:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10491:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10476:3:13"},"nodeType":"YulFunctionCall","src":"10476:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10463:12:13"},"nodeType":"YulFunctionCall","src":"10463:32:13"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"10452:7:13","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"10529:7:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10504:24:13"},"nodeType":"YulFunctionCall","src":"10504:33:13"},"nodeType":"YulExpressionStatement","src":"10504:33:13"},{"nodeType":"YulAssignment","src":"10546:17:13","value":{"name":"value_1","nodeType":"YulIdentifier","src":"10556:7:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10546:6:13"}]},{"nodeType":"YulAssignment","src":"10572:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10599:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10610:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10595:3:13"},"nodeType":"YulFunctionCall","src":"10595:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10582:12:13"},"nodeType":"YulFunctionCall","src":"10582:32:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10572:6:13"}]},{"nodeType":"YulAssignment","src":"10623:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10650:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10661:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10646:3:13"},"nodeType":"YulFunctionCall","src":"10646:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10633:12:13"},"nodeType":"YulFunctionCall","src":"10633:32:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10623:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"10674:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10705:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10716:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10701:3:13"},"nodeType":"YulFunctionCall","src":"10701:19:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10688:12:13"},"nodeType":"YulFunctionCall","src":"10688:33:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10678:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"10764:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10773:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10776:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10766:6:13"},"nodeType":"YulFunctionCall","src":"10766:12:13"},"nodeType":"YulExpressionStatement","src":"10766:12:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10736:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10744:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10733:2:13"},"nodeType":"YulFunctionCall","src":"10733:30:13"},"nodeType":"YulIf","src":"10730:50:13"},{"nodeType":"YulAssignment","src":"10789:59:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10820:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"10831:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10816:3:13"},"nodeType":"YulFunctionCall","src":"10816:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10840:7:13"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"10799:16:13"},"nodeType":"YulFunctionCall","src":"10799:49:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10789:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10201:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10212:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10224:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10232:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10240:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10248:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10256:6:13","type":""}],"src":"10120:734:13"},{"body":{"nodeType":"YulBlock","src":"11033:232:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11050:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11061:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11043:6:13"},"nodeType":"YulFunctionCall","src":"11043:21:13"},"nodeType":"YulExpressionStatement","src":"11043:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11084:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11095:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11080:3:13"},"nodeType":"YulFunctionCall","src":"11080:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"11100:2:13","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11073:6:13"},"nodeType":"YulFunctionCall","src":"11073:30:13"},"nodeType":"YulExpressionStatement","src":"11073:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11123:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11134:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11119:3:13"},"nodeType":"YulFunctionCall","src":"11119:18:13"},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076","kind":"string","nodeType":"YulLiteral","src":"11139:34:13","type":"","value":"ERC1155: address zero is not a v"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11112:6:13"},"nodeType":"YulFunctionCall","src":"11112:62:13"},"nodeType":"YulExpressionStatement","src":"11112:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11194:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11205:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11190:3:13"},"nodeType":"YulFunctionCall","src":"11190:18:13"},{"hexValue":"616c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"11210:12:13","type":"","value":"alid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11183:6:13"},"nodeType":"YulFunctionCall","src":"11183:40:13"},"nodeType":"YulExpressionStatement","src":"11183:40:13"},{"nodeType":"YulAssignment","src":"11232:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11244:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11255:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11240:3:13"},"nodeType":"YulFunctionCall","src":"11240:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11232:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11010:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11024:4:13","type":""}],"src":"10859:406:13"},{"body":{"nodeType":"YulBlock","src":"11325:325:13","statements":[{"nodeType":"YulAssignment","src":"11335:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11349:1:13","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"11352:4:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11345:3:13"},"nodeType":"YulFunctionCall","src":"11345:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11335:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"11366:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11396:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"11402:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11392:3:13"},"nodeType":"YulFunctionCall","src":"11392:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11370:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"11443:31:13","statements":[{"nodeType":"YulAssignment","src":"11445:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11459:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"11467:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11455:3:13"},"nodeType":"YulFunctionCall","src":"11455:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11445:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11423:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11416:6:13"},"nodeType":"YulFunctionCall","src":"11416:26:13"},"nodeType":"YulIf","src":"11413:61:13"},{"body":{"nodeType":"YulBlock","src":"11533:111:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11554:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11561:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11566:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11557:3:13"},"nodeType":"YulFunctionCall","src":"11557:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11547:6:13"},"nodeType":"YulFunctionCall","src":"11547:31:13"},"nodeType":"YulExpressionStatement","src":"11547:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11598:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11601:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11591:6:13"},"nodeType":"YulFunctionCall","src":"11591:15:13"},"nodeType":"YulExpressionStatement","src":"11591:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11626:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11629:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11619:6:13"},"nodeType":"YulFunctionCall","src":"11619:15:13"},"nodeType":"YulExpressionStatement","src":"11619:15:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11489:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11512:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"11520:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11509:2:13"},"nodeType":"YulFunctionCall","src":"11509:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11486:2:13"},"nodeType":"YulFunctionCall","src":"11486:38:13"},"nodeType":"YulIf","src":"11483:161:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11305:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11314:6:13","type":""}],"src":"11270:380:13"},{"body":{"nodeType":"YulBlock","src":"11829:236:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11846:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11857:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11839:6:13"},"nodeType":"YulFunctionCall","src":"11839:21:13"},"nodeType":"YulExpressionStatement","src":"11839:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11880:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11891:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11876:3:13"},"nodeType":"YulFunctionCall","src":"11876:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"11896:2:13","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11869:6:13"},"nodeType":"YulFunctionCall","src":"11869:30:13"},"nodeType":"YulExpressionStatement","src":"11869:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11919:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11930:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11915:3:13"},"nodeType":"YulFunctionCall","src":"11915:18:13"},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e","kind":"string","nodeType":"YulLiteral","src":"11935:34:13","type":"","value":"ERC1155: caller is not token own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11908:6:13"},"nodeType":"YulFunctionCall","src":"11908:62:13"},"nodeType":"YulExpressionStatement","src":"11908:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11990:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12001:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11986:3:13"},"nodeType":"YulFunctionCall","src":"11986:18:13"},{"hexValue":"6572206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"12006:16:13","type":"","value":"er or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11979:6:13"},"nodeType":"YulFunctionCall","src":"11979:44:13"},"nodeType":"YulExpressionStatement","src":"11979:44:13"},{"nodeType":"YulAssignment","src":"12032:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12044:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12055:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12040:3:13"},"nodeType":"YulFunctionCall","src":"12040:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12032:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11806:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11820:4:13","type":""}],"src":"11655:410:13"},{"body":{"nodeType":"YulBlock","src":"12244:238:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12261:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12272:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12254:6:13"},"nodeType":"YulFunctionCall","src":"12254:21:13"},"nodeType":"YulExpressionStatement","src":"12254:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12295:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12306:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12291:3:13"},"nodeType":"YulFunctionCall","src":"12291:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"12311:2:13","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12284:6:13"},"nodeType":"YulFunctionCall","src":"12284:30:13"},"nodeType":"YulExpressionStatement","src":"12284:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12334:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12345:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12330:3:13"},"nodeType":"YulFunctionCall","src":"12330:18:13"},{"hexValue":"4576616c756174696f6e206f662074686520457374617465206d757374206265","kind":"string","nodeType":"YulLiteral","src":"12350:34:13","type":"","value":"Evaluation of the Estate must be"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12323:6:13"},"nodeType":"YulFunctionCall","src":"12323:62:13"},"nodeType":"YulExpressionStatement","src":"12323:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12405:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12416:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12401:3:13"},"nodeType":"YulFunctionCall","src":"12401:18:13"},{"hexValue":"206d6f7265207468616e207a65726f21","kind":"string","nodeType":"YulLiteral","src":"12421:18:13","type":"","value":" more than zero!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12394:6:13"},"nodeType":"YulFunctionCall","src":"12394:46:13"},"nodeType":"YulExpressionStatement","src":"12394:46:13"},{"nodeType":"YulAssignment","src":"12449:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12461:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12472:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12457:3:13"},"nodeType":"YulFunctionCall","src":"12457:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12449:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_75d492dc39fdce738c198d69e2dd08182d4530e4507782c31fe8fbb961c66e8d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12221:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12235:4:13","type":""}],"src":"12070:412:13"},{"body":{"nodeType":"YulBlock","src":"12519:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12536:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12543:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12548:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12539:3:13"},"nodeType":"YulFunctionCall","src":"12539:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12529:6:13"},"nodeType":"YulFunctionCall","src":"12529:31:13"},"nodeType":"YulExpressionStatement","src":"12529:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12576:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12579:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12569:6:13"},"nodeType":"YulFunctionCall","src":"12569:15:13"},"nodeType":"YulExpressionStatement","src":"12569:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12600:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12603:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12593:6:13"},"nodeType":"YulFunctionCall","src":"12593:15:13"},"nodeType":"YulExpressionStatement","src":"12593:15:13"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12487:127:13"},{"body":{"nodeType":"YulBlock","src":"12666:88:13","statements":[{"body":{"nodeType":"YulBlock","src":"12697:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12699:16:13"},"nodeType":"YulFunctionCall","src":"12699:18:13"},"nodeType":"YulExpressionStatement","src":"12699:18:13"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12682:5:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12693:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12689:3:13"},"nodeType":"YulFunctionCall","src":"12689:6:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12679:2:13"},"nodeType":"YulFunctionCall","src":"12679:17:13"},"nodeType":"YulIf","src":"12676:43:13"},{"nodeType":"YulAssignment","src":"12728:20:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12739:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"12746:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12735:3:13"},"nodeType":"YulFunctionCall","src":"12735:13:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12728:3:13"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12648:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12658:3:13","type":""}],"src":"12619:135:13"},{"body":{"nodeType":"YulBlock","src":"12815:65:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12832:1:13","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"12835:3:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12825:6:13"},"nodeType":"YulFunctionCall","src":"12825:14:13"},"nodeType":"YulExpressionStatement","src":"12825:14:13"},{"nodeType":"YulAssignment","src":"12848:26:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12866:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12869:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"12856:9:13"},"nodeType":"YulFunctionCall","src":"12856:18:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12848:4:13"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12798:3:13","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12806:4:13","type":""}],"src":"12759:121:13"},{"body":{"nodeType":"YulBlock","src":"12966:464:13","statements":[{"body":{"nodeType":"YulBlock","src":"12999:425:13","statements":[{"nodeType":"YulVariableDeclaration","src":"13013:11:13","value":{"kind":"number","nodeType":"YulLiteral","src":"13023:1:13","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13017:2:13","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"13044:2:13"},{"name":"array","nodeType":"YulIdentifier","src":"13048:5:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13037:6:13"},"nodeType":"YulFunctionCall","src":"13037:17:13"},"nodeType":"YulExpressionStatement","src":"13037:17:13"},{"nodeType":"YulVariableDeclaration","src":"13067:31:13","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"13089:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"13093:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"13079:9:13"},"nodeType":"YulFunctionCall","src":"13079:19:13"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"13071:4:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13111:57:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13134:4:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13144:1:13","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"13151:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"13163:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13147:3:13"},"nodeType":"YulFunctionCall","src":"13147:19:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13140:3:13"},"nodeType":"YulFunctionCall","src":"13140:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13130:3:13"},"nodeType":"YulFunctionCall","src":"13130:38:13"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"13115:11:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"13205:23:13","statements":[{"nodeType":"YulAssignment","src":"13207:19:13","value":{"name":"data","nodeType":"YulIdentifier","src":"13222:4:13"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"13207:11:13"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"13187:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"13199:4:13","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13184:2:13"},"nodeType":"YulFunctionCall","src":"13184:20:13"},"nodeType":"YulIf","src":"13181:47:13"},{"nodeType":"YulVariableDeclaration","src":"13241:41:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13255:4:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13265:1:13","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"13272:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"13277:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13268:3:13"},"nodeType":"YulFunctionCall","src":"13268:12:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13261:3:13"},"nodeType":"YulFunctionCall","src":"13261:20:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13251:3:13"},"nodeType":"YulFunctionCall","src":"13251:31:13"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"13245:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13295:24:13","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"13308:11:13"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"13299:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"13393:21:13","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13402:5:13"},{"name":"_1","nodeType":"YulIdentifier","src":"13409:2:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13395:6:13"},"nodeType":"YulFunctionCall","src":"13395:17:13"},"nodeType":"YulExpressionStatement","src":"13395:17:13"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13343:5:13"},{"name":"_2","nodeType":"YulIdentifier","src":"13350:2:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13340:2:13"},"nodeType":"YulFunctionCall","src":"13340:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13354:26:13","statements":[{"nodeType":"YulAssignment","src":"13356:22:13","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13369:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"13376:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13365:3:13"},"nodeType":"YulFunctionCall","src":"13365:13:13"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"13356:5:13"}]}]},"pre":{"nodeType":"YulBlock","src":"13336:3:13","statements":[]},"src":"13332:82:13"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"12982:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"12987:2:13","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12979:2:13"},"nodeType":"YulFunctionCall","src":"12979:11:13"},"nodeType":"YulIf","src":"12976:448:13"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"12938:5:13","type":""},{"name":"len","nodeType":"YulTypedName","src":"12945:3:13","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"12950:10:13","type":""}],"src":"12885:545:13"},{"body":{"nodeType":"YulBlock","src":"13520:81:13","statements":[{"nodeType":"YulAssignment","src":"13530:65:13","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13545:4:13"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13563:1:13","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"13566:3:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13559:3:13"},"nodeType":"YulFunctionCall","src":"13559:11:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13576:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13572:3:13"},"nodeType":"YulFunctionCall","src":"13572:6:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13555:3:13"},"nodeType":"YulFunctionCall","src":"13555:24:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13551:3:13"},"nodeType":"YulFunctionCall","src":"13551:29:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13541:3:13"},"nodeType":"YulFunctionCall","src":"13541:40:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13587:1:13","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"13590:3:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13583:3:13"},"nodeType":"YulFunctionCall","src":"13583:11:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"13538:2:13"},"nodeType":"YulFunctionCall","src":"13538:57:13"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"13530:4:13"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13497:4:13","type":""},{"name":"len","nodeType":"YulTypedName","src":"13503:3:13","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"13511:4:13","type":""}],"src":"13435:166:13"},{"body":{"nodeType":"YulBlock","src":"13702:1256:13","statements":[{"nodeType":"YulVariableDeclaration","src":"13712:24:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13732:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13726:5:13"},"nodeType":"YulFunctionCall","src":"13726:10:13"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"13716:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"13779:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13781:16:13"},"nodeType":"YulFunctionCall","src":"13781:18:13"},"nodeType":"YulExpressionStatement","src":"13781:18:13"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13751:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"13759:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13748:2:13"},"nodeType":"YulFunctionCall","src":"13748:30:13"},"nodeType":"YulIf","src":"13745:56:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13854:4:13"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13892:4:13"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"13886:5:13"},"nodeType":"YulFunctionCall","src":"13886:11:13"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"13860:25:13"},"nodeType":"YulFunctionCall","src":"13860:38:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"13900:6:13"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"13810:43:13"},"nodeType":"YulFunctionCall","src":"13810:97:13"},"nodeType":"YulExpressionStatement","src":"13810:97:13"},{"nodeType":"YulVariableDeclaration","src":"13916:18:13","value":{"kind":"number","nodeType":"YulLiteral","src":"13933:1:13","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"13920:9:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13943:23:13","value":{"kind":"number","nodeType":"YulLiteral","src":"13962:4:13","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"13947:11:13","type":""}]},{"nodeType":"YulAssignment","src":"13975:24:13","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"13988:11:13"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13975:9:13"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"14045:656:13","statements":[{"nodeType":"YulVariableDeclaration","src":"14059:35:13","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14078:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14090:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14086:3:13"},"nodeType":"YulFunctionCall","src":"14086:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14074:3:13"},"nodeType":"YulFunctionCall","src":"14074:20:13"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"14063:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14107:49:13","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14151:4:13"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"14121:29:13"},"nodeType":"YulFunctionCall","src":"14121:35:13"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"14111:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14169:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"14178:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14173:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"14256:172:13","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14281:6:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14299:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14304:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14295:3:13"},"nodeType":"YulFunctionCall","src":"14295:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14289:5:13"},"nodeType":"YulFunctionCall","src":"14289:26:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14274:6:13"},"nodeType":"YulFunctionCall","src":"14274:42:13"},"nodeType":"YulExpressionStatement","src":"14274:42:13"},{"nodeType":"YulAssignment","src":"14333:24:13","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14347:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"14355:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14343:3:13"},"nodeType":"YulFunctionCall","src":"14343:14:13"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14333:6:13"}]},{"nodeType":"YulAssignment","src":"14374:40:13","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14391:9:13"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"14402:11:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14387:3:13"},"nodeType":"YulFunctionCall","src":"14387:27:13"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14374:9:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14203:1:13"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"14206:7:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14200:2:13"},"nodeType":"YulFunctionCall","src":"14200:14:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14215:28:13","statements":[{"nodeType":"YulAssignment","src":"14217:24:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14226:1:13"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"14229:11:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14222:3:13"},"nodeType":"YulFunctionCall","src":"14222:19:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14217:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"14196:3:13","statements":[]},"src":"14192:236:13"},{"body":{"nodeType":"YulBlock","src":"14476:166:13","statements":[{"nodeType":"YulVariableDeclaration","src":"14494:43:13","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14521:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14526:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14517:3:13"},"nodeType":"YulFunctionCall","src":"14517:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14511:5:13"},"nodeType":"YulFunctionCall","src":"14511:26:13"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"14498:9:13","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14561:6:13"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"14573:9:13"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14600:1:13","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"14603:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14596:3:13"},"nodeType":"YulFunctionCall","src":"14596:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"14612:3:13","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14592:3:13"},"nodeType":"YulFunctionCall","src":"14592:24:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14622:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14618:3:13"},"nodeType":"YulFunctionCall","src":"14618:6:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14588:3:13"},"nodeType":"YulFunctionCall","src":"14588:37:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14584:3:13"},"nodeType":"YulFunctionCall","src":"14584:42:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14569:3:13"},"nodeType":"YulFunctionCall","src":"14569:58:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14554:6:13"},"nodeType":"YulFunctionCall","src":"14554:74:13"},"nodeType":"YulExpressionStatement","src":"14554:74:13"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"14447:7:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"14456:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14444:2:13"},"nodeType":"YulFunctionCall","src":"14444:19:13"},"nodeType":"YulIf","src":"14441:201:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14662:4:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14676:1:13","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"14679:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14672:3:13"},"nodeType":"YulFunctionCall","src":"14672:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"14688:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14668:3:13"},"nodeType":"YulFunctionCall","src":"14668:22:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14655:6:13"},"nodeType":"YulFunctionCall","src":"14655:36:13"},"nodeType":"YulExpressionStatement","src":"14655:36:13"}]},"nodeType":"YulCase","src":"14038:663:13","value":{"kind":"number","nodeType":"YulLiteral","src":"14043:1:13","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"14718:234:13","statements":[{"nodeType":"YulVariableDeclaration","src":"14732:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"14745:1:13","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14736:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"14781:67:13","statements":[{"nodeType":"YulAssignment","src":"14799:35:13","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14818:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14823:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14814:3:13"},"nodeType":"YulFunctionCall","src":"14814:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14808:5:13"},"nodeType":"YulFunctionCall","src":"14808:26:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14799:5:13"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"14762:6:13"},"nodeType":"YulIf","src":"14759:89:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14868:4:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14927:5:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"14934:6:13"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"14874:52:13"},"nodeType":"YulFunctionCall","src":"14874:67:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14861:6:13"},"nodeType":"YulFunctionCall","src":"14861:81:13"},"nodeType":"YulExpressionStatement","src":"14861:81:13"}]},"nodeType":"YulCase","src":"14710:242:13","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14018:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"14026:2:13","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14015:2:13"},"nodeType":"YulFunctionCall","src":"14015:14:13"},"nodeType":"YulSwitch","src":"14008:944:13"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"13687:4:13","type":""},{"name":"src","nodeType":"YulTypedName","src":"13693:3:13","type":""}],"src":"13606:1352:13"},{"body":{"nodeType":"YulBlock","src":"15137:231:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15154:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15165:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15147:6:13"},"nodeType":"YulFunctionCall","src":"15147:21:13"},"nodeType":"YulExpressionStatement","src":"15147:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15188:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15199:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15184:3:13"},"nodeType":"YulFunctionCall","src":"15184:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"15204:2:13","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15177:6:13"},"nodeType":"YulFunctionCall","src":"15177:30:13"},"nodeType":"YulExpressionStatement","src":"15177:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15227:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15238:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15223:3:13"},"nodeType":"YulFunctionCall","src":"15223:18:13"},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468","kind":"string","nodeType":"YulLiteral","src":"15243:34:13","type":"","value":"ERC1155: accounts and ids length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15216:6:13"},"nodeType":"YulFunctionCall","src":"15216:62:13"},"nodeType":"YulExpressionStatement","src":"15216:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15298:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15309:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15294:3:13"},"nodeType":"YulFunctionCall","src":"15294:18:13"},{"hexValue":"206d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"15314:11:13","type":"","value":" mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15287:6:13"},"nodeType":"YulFunctionCall","src":"15287:39:13"},"nodeType":"YulExpressionStatement","src":"15287:39:13"},{"nodeType":"YulAssignment","src":"15335:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15347:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15358:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15343:3:13"},"nodeType":"YulFunctionCall","src":"15343:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15335:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15114:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15128:4:13","type":""}],"src":"14963:405:13"},{"body":{"nodeType":"YulBlock","src":"15405:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15422:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15429:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"15434:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15425:3:13"},"nodeType":"YulFunctionCall","src":"15425:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15415:6:13"},"nodeType":"YulFunctionCall","src":"15415:31:13"},"nodeType":"YulExpressionStatement","src":"15415:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15462:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15465:4:13","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15455:6:13"},"nodeType":"YulFunctionCall","src":"15455:15:13"},"nodeType":"YulExpressionStatement","src":"15455:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15486:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15489:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15479:6:13"},"nodeType":"YulFunctionCall","src":"15479:15:13"},"nodeType":"YulExpressionStatement","src":"15479:15:13"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"15373:127:13"},{"body":{"nodeType":"YulBlock","src":"15634:119:13","statements":[{"nodeType":"YulAssignment","src":"15644:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15656:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15667:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15652:3:13"},"nodeType":"YulFunctionCall","src":"15652:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15644:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15686:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"15697:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15679:6:13"},"nodeType":"YulFunctionCall","src":"15679:25:13"},"nodeType":"YulExpressionStatement","src":"15679:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15724:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15735:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:13"},"nodeType":"YulFunctionCall","src":"15720:18:13"},{"name":"value1","nodeType":"YulIdentifier","src":"15740:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:13"},"nodeType":"YulFunctionCall","src":"15713:34:13"},"nodeType":"YulExpressionStatement","src":"15713:34:13"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15595:9:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15606:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15614:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15625:4:13","type":""}],"src":"15505:248:13"},{"body":{"nodeType":"YulBlock","src":"15905:147:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15922:3:13"},{"name":"value0","nodeType":"YulIdentifier","src":"15927:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15915:6:13"},"nodeType":"YulFunctionCall","src":"15915:19:13"},"nodeType":"YulExpressionStatement","src":"15915:19:13"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15954:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"15959:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15950:3:13"},"nodeType":"YulFunctionCall","src":"15950:12:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15972:2:13","type":"","value":"96"},{"name":"value1","nodeType":"YulIdentifier","src":"15976:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15968:3:13"},"nodeType":"YulFunctionCall","src":"15968:15:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15989:26:13","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15985:3:13"},"nodeType":"YulFunctionCall","src":"15985:31:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15964:3:13"},"nodeType":"YulFunctionCall","src":"15964:53:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15943:6:13"},"nodeType":"YulFunctionCall","src":"15943:75:13"},"nodeType":"YulExpressionStatement","src":"15943:75:13"},{"nodeType":"YulAssignment","src":"16027:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16038:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"16043:2:13","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16034:3:13"},"nodeType":"YulFunctionCall","src":"16034:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16027:3:13"}]}]},"name":"abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15873:3:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15878:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15886:6:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15897:3:13","type":""}],"src":"15758:294:13"},{"body":{"nodeType":"YulBlock","src":"16258:255:13","statements":[{"nodeType":"YulAssignment","src":"16268:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16280:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16291:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16276:3:13"},"nodeType":"YulFunctionCall","src":"16276:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16268:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16311:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"16322:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16304:6:13"},"nodeType":"YulFunctionCall","src":"16304:25:13"},"nodeType":"YulExpressionStatement","src":"16304:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16349:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16360:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16345:3:13"},"nodeType":"YulFunctionCall","src":"16345:18:13"},{"name":"value1","nodeType":"YulIdentifier","src":"16365:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16338:6:13"},"nodeType":"YulFunctionCall","src":"16338:34:13"},"nodeType":"YulExpressionStatement","src":"16338:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16392:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16403:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16388:3:13"},"nodeType":"YulFunctionCall","src":"16388:18:13"},{"name":"value2","nodeType":"YulIdentifier","src":"16408:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16381:6:13"},"nodeType":"YulFunctionCall","src":"16381:34:13"},"nodeType":"YulExpressionStatement","src":"16381:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16435:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16446:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16431:3:13"},"nodeType":"YulFunctionCall","src":"16431:18:13"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16455:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"16463:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16451:3:13"},"nodeType":"YulFunctionCall","src":"16451:55:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16424:6:13"},"nodeType":"YulFunctionCall","src":"16424:83:13"},"nodeType":"YulExpressionStatement","src":"16424:83:13"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address_payable__to_t_uint256_t_uint256_t_uint256_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16203:9:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16214:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16222:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16230:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16238:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16249:4:13","type":""}],"src":"16057:456:13"},{"body":{"nodeType":"YulBlock","src":"16701:309:13","statements":[{"nodeType":"YulVariableDeclaration","src":"16711:27:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16731:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16725:5:13"},"nodeType":"YulFunctionCall","src":"16725:13:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16715:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16786:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"16794:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16782:3:13"},"nodeType":"YulFunctionCall","src":"16782:17:13"},{"name":"pos","nodeType":"YulIdentifier","src":"16801:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"16806:6:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16747:34:13"},"nodeType":"YulFunctionCall","src":"16747:66:13"},"nodeType":"YulExpressionStatement","src":"16747:66:13"},{"nodeType":"YulVariableDeclaration","src":"16822:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16839:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"16844:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16835:3:13"},"nodeType":"YulFunctionCall","src":"16835:16:13"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"16826:5:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16860:29:13","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16882:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16876:5:13"},"nodeType":"YulFunctionCall","src":"16876:13:13"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"16864:8:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16937:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"16945:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16933:3:13"},"nodeType":"YulFunctionCall","src":"16933:17:13"},{"name":"end_1","nodeType":"YulIdentifier","src":"16952:5:13"},{"name":"length_1","nodeType":"YulIdentifier","src":"16959:8:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16898:34:13"},"nodeType":"YulFunctionCall","src":"16898:70:13"},"nodeType":"YulExpressionStatement","src":"16898:70:13"},{"nodeType":"YulAssignment","src":"16977:27:13","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"16988:5:13"},{"name":"length_1","nodeType":"YulIdentifier","src":"16995:8:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16984:3:13"},"nodeType":"YulFunctionCall","src":"16984:20:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16977:3:13"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16669:3:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16674:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16682:6:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16693:3:13","type":""}],"src":"16518:492:13"},{"body":{"nodeType":"YulBlock","src":"17189:230:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17206:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17217:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17199:6:13"},"nodeType":"YulFunctionCall","src":"17199:21:13"},"nodeType":"YulExpressionStatement","src":"17199:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17240:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17251:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17236:3:13"},"nodeType":"YulFunctionCall","src":"17236:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"17256:2:13","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17229:6:13"},"nodeType":"YulFunctionCall","src":"17229:30:13"},"nodeType":"YulExpressionStatement","src":"17229:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17279:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17290:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17275:3:13"},"nodeType":"YulFunctionCall","src":"17275:18:13"},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e67746820","kind":"string","nodeType":"YulLiteral","src":"17295:34:13","type":"","value":"ERC1155: ids and amounts length "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17268:6:13"},"nodeType":"YulFunctionCall","src":"17268:62:13"},"nodeType":"YulExpressionStatement","src":"17268:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17350:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17361:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17346:3:13"},"nodeType":"YulFunctionCall","src":"17346:18:13"},{"hexValue":"6d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"17366:10:13","type":"","value":"mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17339:6:13"},"nodeType":"YulFunctionCall","src":"17339:38:13"},"nodeType":"YulExpressionStatement","src":"17339:38:13"},{"nodeType":"YulAssignment","src":"17386:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17398:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17409:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17394:3:13"},"nodeType":"YulFunctionCall","src":"17394:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17386:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17166:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17180:4:13","type":""}],"src":"17015:404:13"},{"body":{"nodeType":"YulBlock","src":"17598:227:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17615:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17626:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17608:6:13"},"nodeType":"YulFunctionCall","src":"17608:21:13"},"nodeType":"YulExpressionStatement","src":"17608:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17649:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17660:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17645:3:13"},"nodeType":"YulFunctionCall","src":"17645:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"17665:2:13","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17638:6:13"},"nodeType":"YulFunctionCall","src":"17638:30:13"},"nodeType":"YulExpressionStatement","src":"17638:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17688:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17699:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17684:3:13"},"nodeType":"YulFunctionCall","src":"17684:18:13"},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"17704:34:13","type":"","value":"ERC1155: transfer to the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17677:6:13"},"nodeType":"YulFunctionCall","src":"17677:62:13"},"nodeType":"YulExpressionStatement","src":"17677:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17759:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17770:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17755:3:13"},"nodeType":"YulFunctionCall","src":"17755:18:13"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"17775:7:13","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17748:6:13"},"nodeType":"YulFunctionCall","src":"17748:35:13"},"nodeType":"YulExpressionStatement","src":"17748:35:13"},{"nodeType":"YulAssignment","src":"17792:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17804:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17815:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17800:3:13"},"nodeType":"YulFunctionCall","src":"17800:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17792:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17575:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17589:4:13","type":""}],"src":"17424:401:13"},{"body":{"nodeType":"YulBlock","src":"18004:232:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18021:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18032:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18014:6:13"},"nodeType":"YulFunctionCall","src":"18014:21:13"},"nodeType":"YulExpressionStatement","src":"18014:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18055:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18066:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18051:3:13"},"nodeType":"YulFunctionCall","src":"18051:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"18071:2:13","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18044:6:13"},"nodeType":"YulFunctionCall","src":"18044:30:13"},"nodeType":"YulExpressionStatement","src":"18044:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18094:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18105:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18090:3:13"},"nodeType":"YulFunctionCall","src":"18090:18:13"},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"18110:34:13","type":"","value":"ERC1155: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18083:6:13"},"nodeType":"YulFunctionCall","src":"18083:62:13"},"nodeType":"YulExpressionStatement","src":"18083:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18165:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18176:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18161:3:13"},"nodeType":"YulFunctionCall","src":"18161:18:13"},{"hexValue":"72207472616e73666572","kind":"string","nodeType":"YulLiteral","src":"18181:12:13","type":"","value":"r transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18154:6:13"},"nodeType":"YulFunctionCall","src":"18154:40:13"},"nodeType":"YulExpressionStatement","src":"18154:40:13"},{"nodeType":"YulAssignment","src":"18203:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18215:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18226:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18211:3:13"},"nodeType":"YulFunctionCall","src":"18211:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18203:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17981:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17995:4:13","type":""}],"src":"17830:406:13"},{"body":{"nodeType":"YulBlock","src":"18289:77:13","statements":[{"nodeType":"YulAssignment","src":"18299:16:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18310:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"18313:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18306:3:13"},"nodeType":"YulFunctionCall","src":"18306:9:13"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18299:3:13"}]},{"body":{"nodeType":"YulBlock","src":"18338:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18340:16:13"},"nodeType":"YulFunctionCall","src":"18340:18:13"},"nodeType":"YulExpressionStatement","src":"18340:18:13"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18330:1:13"},{"name":"sum","nodeType":"YulIdentifier","src":"18333:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18327:2:13"},"nodeType":"YulFunctionCall","src":"18327:10:13"},"nodeType":"YulIf","src":"18324:36:13"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18272:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"18275:1:13","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"18281:3:13","type":""}],"src":"18241:125:13"},{"body":{"nodeType":"YulBlock","src":"18600:236:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18617:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18628:2:13","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18610:6:13"},"nodeType":"YulFunctionCall","src":"18610:21:13"},"nodeType":"YulExpressionStatement","src":"18610:21:13"},{"nodeType":"YulVariableDeclaration","src":"18640:70:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18683:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18695:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18706:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18691:3:13"},"nodeType":"YulFunctionCall","src":"18691:18:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"18654:28:13"},"nodeType":"YulFunctionCall","src":"18654:56:13"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"18644:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18730:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18741:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18726:3:13"},"nodeType":"YulFunctionCall","src":"18726:18:13"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"18750:6:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"18758:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18746:3:13"},"nodeType":"YulFunctionCall","src":"18746:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18719:6:13"},"nodeType":"YulFunctionCall","src":"18719:50:13"},"nodeType":"YulExpressionStatement","src":"18719:50:13"},{"nodeType":"YulAssignment","src":"18778:52:13","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18815:6:13"},{"name":"tail_1","nodeType":"YulIdentifier","src":"18823:6:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"18786:28:13"},"nodeType":"YulFunctionCall","src":"18786:44:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18778:4:13"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18561:9:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18572:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18580:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18591:4:13","type":""}],"src":"18371:465:13"},{"body":{"nodeType":"YulBlock","src":"19015:231:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19032:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19043:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19025:6:13"},"nodeType":"YulFunctionCall","src":"19025:21:13"},"nodeType":"YulExpressionStatement","src":"19025:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19066:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19077:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19062:3:13"},"nodeType":"YulFunctionCall","src":"19062:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"19082:2:13","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19055:6:13"},"nodeType":"YulFunctionCall","src":"19055:30:13"},"nodeType":"YulExpressionStatement","src":"19055:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19105:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19116:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19101:3:13"},"nodeType":"YulFunctionCall","src":"19101:18:13"},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c20737461747573","kind":"string","nodeType":"YulLiteral","src":"19121:34:13","type":"","value":"ERC1155: setting approval status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19094:6:13"},"nodeType":"YulFunctionCall","src":"19094:62:13"},"nodeType":"YulExpressionStatement","src":"19094:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19176:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19187:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19172:3:13"},"nodeType":"YulFunctionCall","src":"19172:18:13"},{"hexValue":"20666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"19192:11:13","type":"","value":" for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19165:6:13"},"nodeType":"YulFunctionCall","src":"19165:39:13"},"nodeType":"YulExpressionStatement","src":"19165:39:13"},{"nodeType":"YulAssignment","src":"19213:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19225:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19236:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19221:3:13"},"nodeType":"YulFunctionCall","src":"19221:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19213:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18992:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19006:4:13","type":""}],"src":"18841:405:13"},{"body":{"nodeType":"YulBlock","src":"19425:223:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19442:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19453:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19435:6:13"},"nodeType":"YulFunctionCall","src":"19435:21:13"},"nodeType":"YulExpressionStatement","src":"19435:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19476:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19487:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19472:3:13"},"nodeType":"YulFunctionCall","src":"19472:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"19492:2:13","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19465:6:13"},"nodeType":"YulFunctionCall","src":"19465:30:13"},"nodeType":"YulExpressionStatement","src":"19465:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19515:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19526:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19511:3:13"},"nodeType":"YulFunctionCall","src":"19511:18:13"},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"19531:34:13","type":"","value":"ERC1155: mint to the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19504:6:13"},"nodeType":"YulFunctionCall","src":"19504:62:13"},"nodeType":"YulExpressionStatement","src":"19504:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19586:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19597:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19582:3:13"},"nodeType":"YulFunctionCall","src":"19582:18:13"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"19602:3:13","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19575:6:13"},"nodeType":"YulFunctionCall","src":"19575:31:13"},"nodeType":"YulExpressionStatement","src":"19575:31:13"},{"nodeType":"YulAssignment","src":"19615:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19627:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19638:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19623:3:13"},"nodeType":"YulFunctionCall","src":"19623:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19615:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19402:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19416:4:13","type":""}],"src":"19251:397:13"},{"body":{"nodeType":"YulBlock","src":"19827:179:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19844:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19855:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19837:6:13"},"nodeType":"YulFunctionCall","src":"19837:21:13"},"nodeType":"YulExpressionStatement","src":"19837:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19878:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19889:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19874:3:13"},"nodeType":"YulFunctionCall","src":"19874:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"19894:2:13","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19867:6:13"},"nodeType":"YulFunctionCall","src":"19867:30:13"},"nodeType":"YulExpressionStatement","src":"19867:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19917:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19928:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19913:3:13"},"nodeType":"YulFunctionCall","src":"19913:18:13"},{"hexValue":"437265617465323a20696e73756666696369656e742062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"19933:31:13","type":"","value":"Create2: insufficient balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19906:6:13"},"nodeType":"YulFunctionCall","src":"19906:59:13"},"nodeType":"YulExpressionStatement","src":"19906:59:13"},{"nodeType":"YulAssignment","src":"19974:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19986:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19997:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19982:3:13"},"nodeType":"YulFunctionCall","src":"19982:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19974:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19804:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19818:4:13","type":""}],"src":"19653:353:13"},{"body":{"nodeType":"YulBlock","src":"20185:182:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20202:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20213:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20195:6:13"},"nodeType":"YulFunctionCall","src":"20195:21:13"},"nodeType":"YulExpressionStatement","src":"20195:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20236:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20247:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20232:3:13"},"nodeType":"YulFunctionCall","src":"20232:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"20252:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20225:6:13"},"nodeType":"YulFunctionCall","src":"20225:30:13"},"nodeType":"YulExpressionStatement","src":"20225:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20275:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20286:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20271:3:13"},"nodeType":"YulFunctionCall","src":"20271:18:13"},{"hexValue":"437265617465323a2062797465636f6465206c656e677468206973207a65726f","kind":"string","nodeType":"YulLiteral","src":"20291:34:13","type":"","value":"Create2: bytecode length is zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20264:6:13"},"nodeType":"YulFunctionCall","src":"20264:62:13"},"nodeType":"YulExpressionStatement","src":"20264:62:13"},{"nodeType":"YulAssignment","src":"20335:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20347:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20358:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20343:3:13"},"nodeType":"YulFunctionCall","src":"20343:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20335:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20162:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20176:4:13","type":""}],"src":"20011:356:13"},{"body":{"nodeType":"YulBlock","src":"20546:175:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20563:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20574:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20556:6:13"},"nodeType":"YulFunctionCall","src":"20556:21:13"},"nodeType":"YulExpressionStatement","src":"20556:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20597:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20608:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20593:3:13"},"nodeType":"YulFunctionCall","src":"20593:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"20613:2:13","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20586:6:13"},"nodeType":"YulFunctionCall","src":"20586:30:13"},"nodeType":"YulExpressionStatement","src":"20586:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20636:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20647:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20632:3:13"},"nodeType":"YulFunctionCall","src":"20632:18:13"},{"hexValue":"437265617465323a204661696c6564206f6e206465706c6f79","kind":"string","nodeType":"YulLiteral","src":"20652:27:13","type":"","value":"Create2: Failed on deploy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20625:6:13"},"nodeType":"YulFunctionCall","src":"20625:55:13"},"nodeType":"YulExpressionStatement","src":"20625:55:13"},{"nodeType":"YulAssignment","src":"20689:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20701:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20712:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20697:3:13"},"nodeType":"YulFunctionCall","src":"20697:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20689:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20523:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20537:4:13","type":""}],"src":"20372:349:13"},{"body":{"nodeType":"YulBlock","src":"21057:519:13","statements":[{"nodeType":"YulVariableDeclaration","src":"21067:52:13","value":{"kind":"number","nodeType":"YulLiteral","src":"21077:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21071:2:13","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21135:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21150:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"21158:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21146:3:13"},"nodeType":"YulFunctionCall","src":"21146:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21128:6:13"},"nodeType":"YulFunctionCall","src":"21128:34:13"},"nodeType":"YulExpressionStatement","src":"21128:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21182:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"21193:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21178:3:13"},"nodeType":"YulFunctionCall","src":"21178:18:13"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21202:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"21210:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21198:3:13"},"nodeType":"YulFunctionCall","src":"21198:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21171:6:13"},"nodeType":"YulFunctionCall","src":"21171:43:13"},"nodeType":"YulExpressionStatement","src":"21171:43:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21234:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"21245:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21230:3:13"},"nodeType":"YulFunctionCall","src":"21230:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"21250:3:13","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21223:6:13"},"nodeType":"YulFunctionCall","src":"21223:31:13"},"nodeType":"YulExpressionStatement","src":"21223:31:13"},{"nodeType":"YulVariableDeclaration","src":"21263:71:13","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21306:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21318:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"21329:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21314:3:13"},"nodeType":"YulFunctionCall","src":"21314:19:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"21277:28:13"},"nodeType":"YulFunctionCall","src":"21277:57:13"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"21267:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21354:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"21365:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21350:3:13"},"nodeType":"YulFunctionCall","src":"21350:18:13"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"21374:6:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"21382:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21370:3:13"},"nodeType":"YulFunctionCall","src":"21370:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21343:6:13"},"nodeType":"YulFunctionCall","src":"21343:50:13"},"nodeType":"YulExpressionStatement","src":"21343:50:13"},{"nodeType":"YulVariableDeclaration","src":"21402:58:13","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21445:6:13"},{"name":"tail_1","nodeType":"YulIdentifier","src":"21453:6:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"21416:28:13"},"nodeType":"YulFunctionCall","src":"21416:44:13"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"21406:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21480:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"21491:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21476:3:13"},"nodeType":"YulFunctionCall","src":"21476:19:13"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"21501:6:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"21509:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21497:3:13"},"nodeType":"YulFunctionCall","src":"21497:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21469:6:13"},"nodeType":"YulFunctionCall","src":"21469:51:13"},"nodeType":"YulExpressionStatement","src":"21469:51:13"},{"nodeType":"YulAssignment","src":"21529:41:13","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"21555:6:13"},{"name":"tail_2","nodeType":"YulIdentifier","src":"21563:6:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"21537:17:13"},"nodeType":"YulFunctionCall","src":"21537:33:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21529:4:13"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20994:9:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"21005:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21013:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21021:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21029:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21037:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21048:4:13","type":""}],"src":"20726:850:13"},{"body":{"nodeType":"YulBlock","src":"21661:169:13","statements":[{"body":{"nodeType":"YulBlock","src":"21707:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21716:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21719:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21709:6:13"},"nodeType":"YulFunctionCall","src":"21709:12:13"},"nodeType":"YulExpressionStatement","src":"21709:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21682:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"21691:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21678:3:13"},"nodeType":"YulFunctionCall","src":"21678:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"21703:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21674:3:13"},"nodeType":"YulFunctionCall","src":"21674:32:13"},"nodeType":"YulIf","src":"21671:52:13"},{"nodeType":"YulVariableDeclaration","src":"21732:29:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21751:9:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21745:5:13"},"nodeType":"YulFunctionCall","src":"21745:16:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"21736:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21794:5:13"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"21770:23:13"},"nodeType":"YulFunctionCall","src":"21770:30:13"},"nodeType":"YulExpressionStatement","src":"21770:30:13"},{"nodeType":"YulAssignment","src":"21809:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"21819:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21809:6:13"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21627:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21638:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21650:6:13","type":""}],"src":"21581:249:13"},{"body":{"nodeType":"YulBlock","src":"21878:136:13","statements":[{"body":{"nodeType":"YulBlock","src":"21923:85:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21952:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21955:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21958:1:13","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"21937:14:13"},"nodeType":"YulFunctionCall","src":"21937:23:13"},"nodeType":"YulExpressionStatement","src":"21937:23:13"},{"nodeType":"YulAssignment","src":"21973:25:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21984:3:13","type":"","value":"224"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21995:1:13","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21989:5:13"},"nodeType":"YulFunctionCall","src":"21989:8:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"21980:3:13"},"nodeType":"YulFunctionCall","src":"21980:18:13"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"21973:3:13"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"21894:14:13"},"nodeType":"YulFunctionCall","src":"21894:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"21912:1:13","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21891:2:13"},"nodeType":"YulFunctionCall","src":"21891:23:13"},"nodeType":"YulIf","src":"21888:120:13"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"21870:3:13","type":""}],"src":"21835:179:13"},{"body":{"nodeType":"YulBlock","src":"22066:624:13","statements":[{"body":{"nodeType":"YulBlock","src":"22106:9:13","statements":[{"nodeType":"YulLeave","src":"22108:5:13"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"22082:14:13"},"nodeType":"YulFunctionCall","src":"22082:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"22100:4:13","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22079:2:13"},"nodeType":"YulFunctionCall","src":"22079:26:13"},"nodeType":"YulIf","src":"22076:39:13"},{"nodeType":"YulVariableDeclaration","src":"22124:21:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22142:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22136:5:13"},"nodeType":"YulFunctionCall","src":"22136:9:13"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"22128:4:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22154:16:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22168:1:13","type":"","value":"3"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22164:3:13"},"nodeType":"YulFunctionCall","src":"22164:6:13"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22158:2:13","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22194:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"22200:1:13","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"22207:14:13"},"nodeType":"YulFunctionCall","src":"22207:16:13"},{"name":"_1","nodeType":"YulIdentifier","src":"22225:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22203:3:13"},"nodeType":"YulFunctionCall","src":"22203:25:13"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"22179:14:13"},"nodeType":"YulFunctionCall","src":"22179:50:13"},"nodeType":"YulExpressionStatement","src":"22179:50:13"},{"nodeType":"YulVariableDeclaration","src":"22238:25:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22258:4:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22252:5:13"},"nodeType":"YulFunctionCall","src":"22252:11:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22242:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22272:26:13","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"22282:14:13"},"nodeType":"YulFunctionCall","src":"22282:16:13"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"22276:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22307:28:13","value":{"kind":"number","nodeType":"YulLiteral","src":"22317:18:13","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"22311:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"22393:9:13","statements":[{"nodeType":"YulLeave","src":"22395:5:13"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22353:6:13"},{"name":"_3","nodeType":"YulIdentifier","src":"22361:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22350:2:13"},"nodeType":"YulFunctionCall","src":"22350:14:13"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22373:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"22381:4:13","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22369:3:13"},"nodeType":"YulFunctionCall","src":"22369:17:13"},{"name":"_2","nodeType":"YulIdentifier","src":"22388:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22366:2:13"},"nodeType":"YulFunctionCall","src":"22366:25:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"22347:2:13"},"nodeType":"YulFunctionCall","src":"22347:45:13"},"nodeType":"YulIf","src":"22344:58:13"},{"nodeType":"YulVariableDeclaration","src":"22411:28:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22426:4:13"},{"name":"offset","nodeType":"YulIdentifier","src":"22432:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22422:3:13"},"nodeType":"YulFunctionCall","src":"22422:17:13"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"22415:3:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22448:24:13","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"22468:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22462:5:13"},"nodeType":"YulFunctionCall","src":"22462:10:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22452:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"22499:9:13","statements":[{"nodeType":"YulLeave","src":"22501:5:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22487:6:13"},{"name":"_3","nodeType":"YulIdentifier","src":"22495:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22484:2:13"},"nodeType":"YulFunctionCall","src":"22484:14:13"},"nodeType":"YulIf","src":"22481:27:13"},{"body":{"nodeType":"YulBlock","src":"22590:9:13","statements":[{"nodeType":"YulLeave","src":"22592:5:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"22531:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"22536:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22527:3:13"},"nodeType":"YulFunctionCall","src":"22527:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"22545:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22523:3:13"},"nodeType":"YulFunctionCall","src":"22523:27:13"},{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22560:4:13"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"22566:14:13"},"nodeType":"YulFunctionCall","src":"22566:16:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22556:3:13"},"nodeType":"YulFunctionCall","src":"22556:27:13"},{"name":"_1","nodeType":"YulIdentifier","src":"22585:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22552:3:13"},"nodeType":"YulFunctionCall","src":"22552:36:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22520:2:13"},"nodeType":"YulFunctionCall","src":"22520:69:13"},"nodeType":"YulIf","src":"22517:82:13"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22628:4:13"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22642:6:13"},{"name":"length","nodeType":"YulIdentifier","src":"22650:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22638:3:13"},"nodeType":"YulFunctionCall","src":"22638:19:13"},{"kind":"number","nodeType":"YulLiteral","src":"22659:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22634:3:13"},"nodeType":"YulFunctionCall","src":"22634:30:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"22608:19:13"},"nodeType":"YulFunctionCall","src":"22608:57:13"},"nodeType":"YulExpressionStatement","src":"22608:57:13"},{"nodeType":"YulAssignment","src":"22674:10:13","value":{"name":"msg","nodeType":"YulIdentifier","src":"22681:3:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"22674:3:13"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"22058:3:13","type":""}],"src":"22019:671:13"},{"body":{"nodeType":"YulBlock","src":"22869:242:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22886:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"22897:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22879:6:13"},"nodeType":"YulFunctionCall","src":"22879:21:13"},"nodeType":"YulExpressionStatement","src":"22879:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22920:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"22931:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22916:3:13"},"nodeType":"YulFunctionCall","src":"22916:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"22936:2:13","type":"","value":"52"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22909:6:13"},"nodeType":"YulFunctionCall","src":"22909:30:13"},"nodeType":"YulExpressionStatement","src":"22909:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22959:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"22970:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22955:3:13"},"nodeType":"YulFunctionCall","src":"22955:18:13"},{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535","kind":"string","nodeType":"YulLiteral","src":"22975:34:13","type":"","value":"ERC1155: transfer to non-ERC1155"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22948:6:13"},"nodeType":"YulFunctionCall","src":"22948:62:13"},"nodeType":"YulExpressionStatement","src":"22948:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23030:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"23041:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23026:3:13"},"nodeType":"YulFunctionCall","src":"23026:18:13"},{"hexValue":"526563656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"23046:22:13","type":"","value":"Receiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23019:6:13"},"nodeType":"YulFunctionCall","src":"23019:50:13"},"nodeType":"YulExpressionStatement","src":"23019:50:13"},{"nodeType":"YulAssignment","src":"23078:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23090:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"23101:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23086:3:13"},"nodeType":"YulFunctionCall","src":"23086:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23078:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22846:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22860:4:13","type":""}],"src":"22695:416:13"},{"body":{"nodeType":"YulBlock","src":"23290:230:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23307:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"23318:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23300:6:13"},"nodeType":"YulFunctionCall","src":"23300:21:13"},"nodeType":"YulExpressionStatement","src":"23300:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23341:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"23352:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23337:3:13"},"nodeType":"YulFunctionCall","src":"23337:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"23357:2:13","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23330:6:13"},"nodeType":"YulFunctionCall","src":"23330:30:13"},"nodeType":"YulExpressionStatement","src":"23330:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23380:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"23391:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23376:3:13"},"nodeType":"YulFunctionCall","src":"23376:18:13"},{"hexValue":"455243313135353a204552433131353552656365697665722072656a65637465","kind":"string","nodeType":"YulLiteral","src":"23396:34:13","type":"","value":"ERC1155: ERC1155Receiver rejecte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23369:6:13"},"nodeType":"YulFunctionCall","src":"23369:62:13"},"nodeType":"YulExpressionStatement","src":"23369:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23451:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"23462:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23447:3:13"},"nodeType":"YulFunctionCall","src":"23447:18:13"},{"hexValue":"6420746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"23467:10:13","type":"","value":"d tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23440:6:13"},"nodeType":"YulFunctionCall","src":"23440:38:13"},"nodeType":"YulExpressionStatement","src":"23440:38:13"},{"nodeType":"YulAssignment","src":"23487:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23499:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"23510:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23495:3:13"},"nodeType":"YulFunctionCall","src":"23495:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23487:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23267:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23281:4:13","type":""}],"src":"23116:404:13"},{"body":{"nodeType":"YulBlock","src":"23756:353:13","statements":[{"nodeType":"YulVariableDeclaration","src":"23766:52:13","value":{"kind":"number","nodeType":"YulLiteral","src":"23776:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"23770:2:13","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23834:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23849:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"23857:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23845:3:13"},"nodeType":"YulFunctionCall","src":"23845:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23827:6:13"},"nodeType":"YulFunctionCall","src":"23827:34:13"},"nodeType":"YulExpressionStatement","src":"23827:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23881:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"23892:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23877:3:13"},"nodeType":"YulFunctionCall","src":"23877:18:13"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23901:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"23909:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23897:3:13"},"nodeType":"YulFunctionCall","src":"23897:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23870:6:13"},"nodeType":"YulFunctionCall","src":"23870:43:13"},"nodeType":"YulExpressionStatement","src":"23870:43:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23933:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"23944:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23929:3:13"},"nodeType":"YulFunctionCall","src":"23929:18:13"},{"name":"value2","nodeType":"YulIdentifier","src":"23949:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23922:6:13"},"nodeType":"YulFunctionCall","src":"23922:34:13"},"nodeType":"YulExpressionStatement","src":"23922:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23976:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"23987:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23972:3:13"},"nodeType":"YulFunctionCall","src":"23972:18:13"},{"name":"value3","nodeType":"YulIdentifier","src":"23992:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23965:6:13"},"nodeType":"YulFunctionCall","src":"23965:34:13"},"nodeType":"YulExpressionStatement","src":"23965:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24019:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"24030:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24015:3:13"},"nodeType":"YulFunctionCall","src":"24015:19:13"},{"kind":"number","nodeType":"YulLiteral","src":"24036:3:13","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24008:6:13"},"nodeType":"YulFunctionCall","src":"24008:32:13"},"nodeType":"YulExpressionStatement","src":"24008:32:13"},{"nodeType":"YulAssignment","src":"24049:54:13","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"24075:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24087:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"24098:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24083:3:13"},"nodeType":"YulFunctionCall","src":"24083:19:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"24057:17:13"},"nodeType":"YulFunctionCall","src":"24057:46:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24049:4:13"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23693:9:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23704:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23712:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23720:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23728:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23736:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23747:4:13","type":""}],"src":"23525:584:13"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(length, 31), not(31)), 0x20))\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes(add(_1, 0x20), calldataload(_1), dataEnd)\n        value1 := calldataload(add(headStart, 0x20))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_address_payable(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_struct$_Estate_$2324_memory_ptr__to_t_struct$_Estate_$2324_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), mload(value0))\n        mstore(add(headStart, 64), and(mload(add(value0, 32)), 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), mload(add(value0, 64)))\n        let memberValue0 := mload(add(value0, 96))\n        mstore(add(headStart, 128), 0xc0)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 224))\n        mstore(add(headStart, 160), iszero(iszero(mload(add(value0, 128)))))\n        mstore(add(headStart, 0xc0), iszero(iszero(mload(add(value0, 160)))))\n        tail := tail_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_75d492dc39fdce738c198d69e2dd08182d4530e4507782c31fe8fbb961c66e8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Evaluation of the Estate must be\")\n        mstore(add(headStart, 96), \" more than zero!\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address_payable__to_t_uint256_t_uint256_t_uint256_t_address_payable__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Create2: insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Create2: bytecode length is zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Create2: Failed on deploy\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7192711F GT PUSH3 0xAF JUMPI DUP1 PUSH4 0xD18FF5F8 GT PUSH3 0x7A JUMPI DUP1 PUSH4 0xD18FF5F8 EQ PUSH3 0x334 JUMPI DUP1 PUSH4 0xE6EFD4D0 EQ PUSH3 0x35A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH3 0x371 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH3 0x3B0 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH3 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7192711F EQ PUSH3 0x279 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH3 0x2CA JUMPI DUP1 PUSH4 0xBA1B60FC EQ PUSH3 0x2E1 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH3 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH3 0xFC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH3 0x1EE JUMPI DUP1 PUSH4 0x3BA44BE6 EQ PUSH3 0x207 JUMPI DUP1 PUSH4 0x3D55DAF8 EQ PUSH3 0x21E JUMPI DUP1 PUSH4 0x4A2454BE EQ PUSH3 0x227 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH3 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH3 0x131 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH3 0x15B JUMPI DUP1 PUSH4 0xE89341C EQ PUSH3 0x183 JUMPI DUP1 PUSH4 0x1A05B063 EQ PUSH3 0x1A9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x148 PUSH3 0x142 CALLDATASIZE PUSH1 0x4 PUSH3 0x17A9 JUMP JUMPDEST PUSH3 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x172 PUSH3 0x16C CALLDATASIZE PUSH1 0x4 PUSH3 0x17EF JUMP JUMPDEST PUSH3 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x152 JUMP JUMPDEST PUSH3 0x19A PUSH3 0x194 CALLDATASIZE PUSH1 0x4 PUSH3 0x180F JUMP JUMPDEST PUSH3 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x152 SWAP2 SWAP1 PUSH3 0x187D JUMP JUMPDEST PUSH3 0x1D5 PUSH3 0x1BA CALLDATASIZE PUSH1 0x4 PUSH3 0x180F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x152 JUMP JUMPDEST PUSH3 0x205 PUSH3 0x1FF CALLDATASIZE PUSH1 0x4 PUSH3 0x19FF JUMP JUMPDEST PUSH3 0x547 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x205 PUSH3 0x218 CALLDATASIZE PUSH1 0x4 PUSH3 0x1ABB JUMP JUMPDEST PUSH3 0x5E1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH3 0x148 JUMP JUMPDEST PUSH3 0x1D5 PUSH3 0x238 CALLDATASIZE PUSH1 0x4 PUSH3 0x180F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0x26A PUSH3 0x264 CALLDATASIZE PUSH1 0x4 PUSH3 0x1B19 JUMP JUMPDEST PUSH3 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x152 SWAP2 SWAP1 PUSH3 0x1C32 JUMP JUMPDEST PUSH3 0x205 PUSH3 0x28A CALLDATASIZE PUSH1 0x4 PUSH3 0x1C47 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x205 PUSH3 0x2DB CALLDATASIZE PUSH1 0x4 PUSH3 0x1C7A JUMP JUMPDEST PUSH3 0x888 JUMP JUMPDEST PUSH3 0x205 PUSH3 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH3 0x180F JUMP JUMPDEST PUSH3 0x899 JUMP JUMPDEST PUSH3 0x31A PUSH3 0x309 CALLDATASIZE PUSH1 0x4 PUSH3 0x19FF JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x152 JUMP JUMPDEST PUSH3 0x34B PUSH3 0x345 CALLDATASIZE PUSH1 0x4 PUSH3 0x180F JUMP JUMPDEST PUSH3 0x98E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x152 SWAP2 SWAP1 PUSH3 0x1CB1 JUMP JUMPDEST PUSH3 0x205 PUSH3 0x36B CALLDATASIZE PUSH1 0x4 PUSH3 0x180F JUMP JUMPDEST PUSH3 0xAC1 JUMP JUMPDEST PUSH3 0x172 PUSH3 0x382 CALLDATASIZE PUSH1 0x4 PUSH3 0x1D1A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH3 0x31A PUSH3 0x3C1 CALLDATASIZE PUSH1 0x4 PUSH3 0x1D4D JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH3 0x205 PUSH3 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH3 0x1D4D JUMP JUMPDEST PUSH3 0xC18 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x45A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH3 0x47D JUMPI POP PUSH3 0x47D DUP3 PUSH3 0xCAB JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH3 0x4BC SWAP1 PUSH3 0x1DBE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x4EA SWAP1 PUSH3 0x1DBE JUMP JUMPDEST DUP1 ISZERO PUSH3 0x53B JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x50F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x53B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x51D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH3 0x566 JUMPI POP PUSH3 0x566 DUP6 CALLER PUSH3 0x382 JUMP JUMPDEST PUSH3 0x5CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH3 0x5DA DUP6 DUP6 DUP6 DUP6 DUP6 PUSH3 0xCFE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH3 0x64C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576616C756174696F6E206F662074686520457374617465206D757374206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x206D6F7265207468616E207A65726F21 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD CALLER SWAP2 DUP2 SWAP1 PUSH1 0x0 PUSH3 0x661 DUP4 PUSH3 0x1E10 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH3 0x684 DUP3 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0xF72 JUMP JUMPDEST PUSH3 0x68F DUP5 PUSH3 0xF86 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE CALLER PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP3 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP10 DUP2 MSTORE PUSH1 0x0 PUSH1 0x80 DUP7 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP7 ADD DUP2 SWAP1 MSTORE DUP8 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP4 MSTORE SWAP5 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x3 DUP3 ADD SWAP1 PUSH3 0x711 SWAP1 DUP3 PUSH3 0x1E7B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xA0 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH3 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x7CF JUMPI PUSH3 0x7CF PUSH3 0x1892 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x7F9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH3 0x880 JUMPI PUSH3 0x84D DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x822 JUMPI PUSH3 0x822 PUSH3 0x1F48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH3 0x83F JUMPI PUSH3 0x83F PUSH3 0x1F48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH3 0x3E9 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x862 JUMPI PUSH3 0x862 PUSH3 0x1F48 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH3 0x878 DUP2 PUSH3 0x1E10 JUMP JUMPDEST SWAP1 POP PUSH3 0x7FF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0x895 CALLER DUP4 DUP4 PUSH3 0xF94 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD DUP4 SWAP2 SWAP1 PUSH3 0x8BC SWAP1 PUSH3 0x1777 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x8E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH3 0x906 CALLER DUP3 DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0xC18 JUMP JUMPDEST PUSH3 0x925 CALLER PUSH1 0x0 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x1076 JUMP JUMPDEST PUSH3 0x945 CALLER DUP3 PUSH1 0x0 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0xC18 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 SWAP1 DUP2 SWAP1 MSTORE SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP6 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD DUP4 SWAP1 MSTORE DUP7 DUP4 MSTORE PUSH1 0x4 DUP3 MSTORE SWAP2 DUP6 SWAP1 KECCAK256 DUP6 MLOAD SWAP4 DUP5 ADD DUP7 MSTORE DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 DUP5 ADD SWAP2 PUSH3 0xA12 SWAP1 PUSH3 0x1DBE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xA40 SWAP1 PUSH3 0x1DBE JUMP JUMPDEST DUP1 ISZERO PUSH3 0xA91 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xA65 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xA91 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xA73 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xAF2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH3 0xBAE PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH3 0xB25 SWAP1 PUSH3 0x1785 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP5 ADD DUP12 SWAP1 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0xB99 SWAP3 SWAP2 PUSH1 0x20 ADD PUSH3 0x1F5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH3 0x1194 JUMP JUMPDEST SWAP1 POP PUSH3 0xBCF CALLER DUP3 DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0xC18 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 SWAP1 DUP2 SWAP1 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH3 0xC37 JUMPI POP PUSH3 0xC37 DUP6 CALLER PUSH3 0x382 JUMP JUMPDEST PUSH3 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH3 0x5DA DUP6 DUP6 DUP6 DUP6 DUP6 PUSH3 0x12A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH3 0xCDD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH3 0x47D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH3 0x47D JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH3 0xD62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0xDC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH3 0xF00 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0xDED JUMPI PUSH3 0xDED PUSH3 0x1F48 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH3 0xE0E JUMPI PUSH3 0xE0E PUSH3 0x1F48 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH3 0xEA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH3 0xEE2 SWAP1 DUP5 SWAP1 PUSH3 0x1F91 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH3 0xEF8 SWAP1 PUSH3 0x1E10 JUMP JUMPDEST SWAP1 POP PUSH3 0xDCC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH3 0xF52 SWAP3 SWAP2 SWAP1 PUSH3 0x1FA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH3 0xF6A DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH3 0x145C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xF80 DUP5 DUP5 DUP5 DUP5 PUSH3 0x1076 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH3 0xF91 DUP2 PUSH3 0x1614 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH3 0x1009 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x10D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH3 0x10E6 DUP6 PUSH3 0x1622 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x10F5 DUP6 PUSH3 0x1622 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH3 0x1129 SWAP1 DUP5 SWAP1 PUSH3 0x1F91 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH3 0x118B DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH3 0x1670 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 SELFBALANCE LT ISZERO PUSH3 0x11E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x451 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SUB PUSH3 0x123B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A2062797465636F6465206C656E677468206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x451 JUMP JUMPDEST DUP3 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP7 CREATE2 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x129E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A204661696C6564206F6E206465706C6F7900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x451 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x130B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH3 0x1319 DUP6 PUSH3 0x1622 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x1328 DUP6 PUSH3 0x1622 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH3 0x13B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH3 0x13EF SWAP1 DUP5 SWAP1 PUSH3 0x1F91 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH3 0x1451 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH3 0x1670 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH3 0xF6A JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH3 0x14A3 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH3 0x1FD9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x14E1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH3 0x14DE SWAP2 DUP2 ADD SWAP1 PUSH3 0x203D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x15A1 JUMPI PUSH3 0x14F0 PUSH3 0x205D JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH3 0x1530 JUMPI POP PUSH3 0x1507 PUSH3 0x207A JUMP JUMPDEST DUP1 PUSH3 0x1514 JUMPI POP PUSH3 0x1532 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x451 SWAP2 SWAP1 PUSH3 0x187D JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH3 0x118B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x895 DUP3 DUP3 PUSH3 0x1E7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x165F JUMPI PUSH3 0x165F PUSH3 0x1F48 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH3 0xF6A JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH3 0x16B7 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH3 0x210A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x16F5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH3 0x16F2 SWAP2 DUP2 ADD SWAP1 PUSH3 0x203D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x1704 JUMPI PUSH3 0x14F0 PUSH3 0x205D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH3 0x118B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x451 JUMP JUMPDEST PUSH2 0x1DCB DUP1 PUSH3 0x2150 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x1C3C DUP1 PUSH3 0x3F1B DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xF91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x17BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH3 0x17CA DUP2 PUSH3 0x1793 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH3 0xF91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH3 0x129E DUP2 PUSH3 0x17D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1846 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x182C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH3 0x1869 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH3 0x1829 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH3 0x129E PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x184F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x18D1 JUMPI PUSH3 0x18D1 PUSH3 0x1892 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x18F5 JUMPI PUSH3 0x18F5 PUSH3 0x1892 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1911 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH3 0x1920 DUP3 PUSH3 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x192F DUP3 DUP3 PUSH3 0x18A8 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH3 0x1950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH3 0x196D JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH3 0x1954 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH3 0x1995 JUMPI PUSH3 0x1995 PUSH3 0x1892 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x19AE PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH3 0x18A8 JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x19C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x19EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x129E DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH3 0x1978 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x1A18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH3 0x1A25 DUP2 PUSH3 0x1793 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH3 0x1A37 DUP2 PUSH3 0x1793 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x1A55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1A63 DUP10 DUP4 DUP11 ADD PUSH3 0x18FF JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x1A7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1A88 DUP10 DUP4 DUP11 ADD PUSH3 0x18FF JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x1A9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1AAE DUP9 DUP3 DUP10 ADD PUSH3 0x19DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1ACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1AE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH3 0x1AF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1B0A DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH3 0x1978 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1B2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x1B46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1B5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH3 0x1B6A DUP3 PUSH3 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1B79 DUP3 DUP3 PUSH3 0x18A8 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH3 0x1B9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH3 0x1BC5 JUMPI DUP6 CALLDATALOAD PUSH3 0x1BB5 DUP2 PUSH3 0x1793 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH3 0x1B9F JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH3 0x1BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1BEB DUP6 DUP3 DUP7 ADD PUSH3 0x18FF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1C27 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH3 0x1C09 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH3 0x129E PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1BF5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1C5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH3 0x1C6F DUP2 PUSH3 0x1793 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1C8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH3 0x1C9B DUP2 PUSH3 0x1793 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x1C6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0xC0 PUSH1 0x80 DUP5 ADD MSTORE PUSH3 0x1CF6 PUSH1 0xE0 DUP5 ADD DUP3 PUSH3 0x184F JUMP JUMPDEST SWAP1 POP PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH3 0x1D3B DUP2 PUSH3 0x1793 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH3 0x1C6F DUP2 PUSH3 0x1793 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x1D66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH3 0x1D73 DUP2 PUSH3 0x1793 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH3 0x1D85 DUP2 PUSH3 0x1793 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1DB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1AAE DUP9 DUP3 DUP10 ADD PUSH3 0x19DC JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1DD3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1DF4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0x1E25 JUMPI PUSH3 0x1E25 PUSH3 0x1DFA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1E76 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1E55 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xF6A JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1E61 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1E98 JUMPI PUSH3 0x1E98 PUSH3 0x1892 JUMP JUMPDEST PUSH3 0x1EB0 DUP2 PUSH3 0x1EA9 DUP5 SLOAD PUSH3 0x1DBE JUMP JUMPDEST DUP5 PUSH3 0x1E2C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1EE8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x1ECF JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0xF6A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1F19 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x1EF8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x1F38 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH3 0x1F72 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH3 0x1829 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH3 0x1F88 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH3 0x1829 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x47D JUMPI PUSH3 0x47D PUSH3 0x1DFA JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH3 0x1FBC PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x1BF5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x1FD0 DUP2 DUP6 PUSH3 0x1BF5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0x2007 PUSH1 0xA0 DUP4 ADD DUP7 PUSH3 0x1BF5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH3 0x201B DUP2 DUP7 PUSH3 0x1BF5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH3 0x2031 DUP2 DUP6 PUSH3 0x184F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2050 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x129E DUP2 PUSH3 0x17D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH3 0x2077 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH3 0x2089 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH3 0x20BA JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x20D3 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH3 0x20EE JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH3 0x20FF PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH3 0x18A8 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH3 0x2144 PUSH1 0xA0 DUP4 ADD DUP5 PUSH3 0x184F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1DCB CODESIZE SUB DUP1 PUSH3 0x1DCB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x82 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH3 0x4E DUP2 PUSH3 0x70 JUMP JUMPDEST POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x4 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH3 0x218 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x7E DUP3 DUP3 PUSH3 0x14C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0xD2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xF3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x147 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x122 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x143 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x12E JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0xA7 JUMP JUMPDEST PUSH3 0x180 DUP2 PUSH3 0x179 DUP5 SLOAD PUSH3 0xBD JUMP JUMPDEST DUP5 PUSH3 0xF9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1B8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x19F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x143 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1E9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x1C8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x208 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1BA3 DUP1 PUSH3 0x228 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91A62523 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDF48981A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xDF48981A EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91A62523 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xD0A2F2C4 EQ PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4BA8AE81 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x4BA8AE81 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x80BB4EF4 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x8FCB4E5B EQ PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x441 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A7 PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x121 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x8D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F5 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1819 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x1866 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x1894 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x418 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x472 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x43B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x43B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x4A0 SWAP1 PUSH2 0x18FD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4CC SWAP1 PUSH2 0x18FD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x519 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x519 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4FC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x541 JUMPI POP PUSH2 0x541 DUP6 CALLER PUSH2 0x32E JUMP JUMPDEST PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0x5B1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xBDB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742073686172657320746F20626520736F6C640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0x634 CALLER ADDRESS PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x64 PUSH1 0x4 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH2 0x659 SWAP2 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH2 0x663 SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x693 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B3 SWAP1 DUP5 SWAP1 PUSH2 0x1986 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x73D JUMPI PUSH2 0x73D PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x766 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x7DE JUMPI PUSH2 0x7B1 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x78A JUMPI PUSH2 0x78A PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7A4 JUMPI PUSH2 0x7A4 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3A8 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7C3 JUMPI PUSH2 0x7C3 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x7D7 DUP2 PUSH2 0x19AF JUMP JUMPDEST SWAP1 POP PUSH2 0x76C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742073686172657320746F206265207472616E7366 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x657272656420746F20726563657069656E740000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0x888 CALLER DUP4 PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB4F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x8A7 SWAP1 DUP5 SWAP1 PUSH2 0x1986 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6B3 SWAP1 DUP5 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST PUSH2 0x8DF CALLER DUP4 DUP4 PUSH2 0xE39 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x93B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x91D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D206E756D626572206F66207368617265732074686174206361 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E20626520707572636861736564206973203130300000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F6620736861726573207075726368617365642063616E6E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74206265207A65726F206F72206C657373000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0xA3D ADDRESS PUSH1 0x0 PUSH2 0x3A8 JUMP JUMPDEST DUP2 LT PUSH2 0xAA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206172656E27742073756666696369656E74207368617265732074 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x1BC81899481C1D5C98DA185CD959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD ADDRESS SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xACE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xAEC ADDRESS CALLER PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB4F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0xB6B JUMPI POP PUSH2 0xB6B DUP6 CALLER PUSH2 0x32E JUMP JUMPDEST PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0x5B1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF19 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCC2 JUMPI PUSH2 0xCC2 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCE0 JUMPI PUSH2 0xCE0 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xDB0 SWAP1 DUP5 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xDC4 SWAP1 PUSH2 0x19AF JUMP JUMPDEST SWAP1 POP PUSH2 0xCA5 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xE1B SWAP3 SWAP2 SWAP1 PUSH2 0x19DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE31 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x10C4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xEAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xF7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xF89 DUP6 PUSH2 0x1272 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF96 DUP6 PUSH2 0x1272 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1059 SWAP1 DUP5 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10B9 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x12BD JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1108 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A09 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1143 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1140 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11F8 JUMPI PUSH2 0x114F PUSH2 0x1A84 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1188 JUMPI POP PUSH2 0x1163 PUSH2 0x1AA0 JUMP JUMPDEST DUP1 PUSH2 0x116E JUMPI POP PUSH2 0x118A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x12AC JUMPI PUSH2 0x12AC PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1301 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x133C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1339 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1348 JUMPI PUSH2 0x114F PUSH2 0x1A84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x13EF DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x13CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1430 DUP2 PUSH2 0x13FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1476 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x145A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1430 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1450 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x14E5 JUMPI PUSH2 0x14E5 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1506 JUMPI PUSH2 0x1506 PUSH2 0x14A9 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x152E DUP3 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153B DUP3 DUP3 PUSH2 0x14BF JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x155B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1576 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x155F JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15AC JUMPI PUSH2 0x15AC PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C3 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x14BF JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x15D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x160D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1618 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1628 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1651 DUP10 DUP4 DUP11 ADD PUSH2 0x1510 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1673 DUP10 DUP4 DUP11 ADD PUSH2 0x1510 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1696 DUP9 DUP3 DUP10 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x16EF DUP3 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16FC DUP3 DUP3 PUSH2 0x14BF JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x171C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1743 JUMPI DUP6 CALLDATALOAD PUSH2 0x1734 DUP2 PUSH2 0x13B9 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1721 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1766 DUP6 DUP3 DUP7 ADD PUSH2 0x1510 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17A0 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1784 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1430 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1430 DUP2 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x17F9 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x180E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x185A JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1835 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1884 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x180E DUP2 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x18AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x18B7 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x18C7 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1696 DUP9 DUP3 DUP10 ADD PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1911 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1931 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x43B JUMPI PUSH2 0x43B PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1981 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x43B JUMPI PUSH2 0x43B PUSH2 0x1937 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x19C1 JUMPI PUSH2 0x19C1 PUSH2 0x1937 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x43B JUMPI PUSH2 0x43B PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x19EE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1770 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1A00 DUP2 DUP6 PUSH2 0x1770 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1A35 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1770 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1A47 DUP2 DUP7 PUSH2 0x1770 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1A5B DUP2 DUP6 PUSH2 0x1450 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1430 DUP2 PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1A9D JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1AAE JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1ADE JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1AF6 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1B10 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1B1F PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x14BF JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B62 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1450 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 PUSH1 0xC5 0xFC 0x1F SWAP12 0xE 0xB2 PUSH31 0xE89AE9B7A82B89AC5EA9793FAFDCF8DF724B8067F24EE64736F6C63430008 EQ STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1C3C CODESIZE SUB DUP1 PUSH3 0x1C3C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x9A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH3 0x4E DUP2 PUSH3 0x88 JUMP JUMPDEST POP PUSH1 0x3 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x25C JUMP JUMPDEST PUSH1 0x2 PUSH3 0x96 DUP3 DUP3 PUSH3 0x190 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD SWAP3 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x116 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x137 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x18B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x166 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x187 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x172 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AC PUSH3 0xEB JUMP JUMPDEST PUSH3 0x1C4 DUP2 PUSH3 0x1BD DUP5 SLOAD PUSH3 0x101 JUMP JUMPDEST DUP5 PUSH3 0x13D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1FC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x1E3 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x187 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x22D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x20C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x24C JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x19D0 DUP1 PUSH3 0x26C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x70740AC9 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x8D07AE9F EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x9979EF45 EQ PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x3A6DCEA2 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x3A79D2E5 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x4935E740 EQ PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x14034BD2 EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x124A JUMP JUMPDEST PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x128C JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x146E JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x648 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x83A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x8CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A1 JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x146E JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x35C CALLDATASIZE PUSH1 0x4 PUSH2 0x16DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x170D JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x446 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x4A0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x469 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x469 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x4CE SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FA SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x547 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x547 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x56F JUMPI POP PUSH2 0x56F DUP6 CALLER PUSH2 0x35C JUMP JUMPDEST PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH2 0x5DF DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA57 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x63E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x620 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x70E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F7420706C6163656420616E792062657420696E2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3434B99030BAB1BA34B7B7 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x791 JUMPI PUSH2 0x791 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7BA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x832 JUMPI PUSH2 0x805 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7DE JUMPI PUSH2 0x7DE PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7F8 JUMPI PUSH2 0x7F8 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3D6 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x817 JUMPI PUSH2 0x817 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x82B DUP2 PUSH2 0x17DC JUMP JUMPDEST SWAP1 POP PUSH2 0x7C0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x70E JUMPI PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x888 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x8BD ADDRESS PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 SLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9CB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 GT PUSH2 0x946 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42696420706C61636564206D75737420626520686967686572207468616E2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6865206576616C756174696F6E206F66207468652074696D657374616D700000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 SLOAD DUP2 GT ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH2 0x9C7 CALLER DUP4 DUP4 PUSH2 0xCB5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x9E7 JUMPI POP PUSH2 0x9E7 DUP6 CALLER PUSH2 0x35C JUMP JUMPDEST PUSH2 0xA4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH2 0x5DF DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD95 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xC47 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB3E JUMPI PUSH2 0xB3E PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB5C JUMPI PUSH2 0xB5C PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xC2C SWAP1 DUP5 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xC40 SWAP1 PUSH2 0x17DC JUMP JUMPDEST SWAP1 POP PUSH2 0xB21 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xC97 SWAP3 SWAP2 SWAP1 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xCAD DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF40 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xD28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xE05 DUP6 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE12 DUP6 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0xE98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xED5 SWAP1 DUP5 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF35 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1139 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xF84 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1836 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFBF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xFBC SWAP2 DUP2 ADD SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1074 JUMPI PUSH2 0xFCB PUSH2 0x18B1 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1004 JUMPI POP PUSH2 0xFDF PUSH2 0x18CD JUMP JUMPDEST DUP1 PUSH2 0xFEA JUMPI POP PUSH2 0x1006 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x10E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1128 JUMPI PUSH2 0x1128 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x117D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11B8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11B5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11C4 JUMPI PUSH2 0xFCB PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x10E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x125D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1268 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12A9 DUP2 PUSH2 0x1276 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12EF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x12D3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12C9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x135E JUMPI PUSH2 0x135E PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x137F JUMPI PUSH2 0x137F PUSH2 0x1322 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x139A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x13A7 DUP3 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B4 DUP3 DUP3 PUSH2 0x1338 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x13D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x13EF JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x13D8 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x140B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1425 JUMPI PUSH2 0x1425 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143C PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1338 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1491 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x14A1 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x14BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14CA DUP10 DUP4 DUP11 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x14E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14EC DUP10 DUP4 DUP11 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150F DUP9 DUP3 DUP10 ADD PUSH2 0x13FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x155D JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1538 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x157C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x15B5 DUP3 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C2 DUP3 DUP3 PUSH2 0x1338 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x15E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1609 JUMPI DUP6 CALLDATALOAD PUSH2 0x15FA DUP2 PUSH2 0x1235 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x161F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162C DUP6 DUP3 DUP7 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1666 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x164A JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12A9 DUP2 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x16BF DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x16D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x16FD DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x16D4 DUP2 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1730 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1740 DUP2 PUSH2 0x1235 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x176A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x150F DUP9 DUP3 DUP10 ADD PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x178A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x17EE JUMPI PUSH2 0x17EE PUSH2 0x17C6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x469 JUMPI PUSH2 0x469 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x181B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1636 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x182D DUP2 DUP6 PUSH2 0x1636 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1862 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1636 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1874 DUP2 DUP7 PUSH2 0x1636 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1888 DUP2 DUP6 PUSH2 0x12C9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x12A9 DUP2 PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x18CA JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x18DB JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x190B JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1923 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x193D JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x194C PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1338 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x198F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x12C9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0xDC 0xF8 0xDA PUSH2 0x9A40 0x24 PUSH30 0x35B57C20562F5CDCCA4D1D031E533B6D35E929B0AA3B5564736F6C634300 ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xEB AND PUSH3 0x57A82C 0x22 0xEF CHAINID 0x26 0xF6 PREVRANDAO 0x21 0xD7 ADDRESS EQ PUSH14 0x72C1E85B510EC4F771CB9DF01102 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"348:4278:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227:1;;;;;;:::i;:::-;;:::i;:::-;;;639:25:13;;;627:2;612:18;2185:227:1;;;;;;;;4397:222:11;;;;;;:::i;:::-;;:::i;:::-;;;1226:14:13;;1219:22;1201:41;;1189:2;1174:18;4397:222:11;1061:187:13;1940:103:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2959:144:11:-;;;;;;:::i;:::-;3036:7;3062:34;;;:24;:34;;;;;;-1:-1:-1;;;;;3062:34:11;;2959:144;;;;-1:-1:-1;;;;;2358:55:13;;;2340:74;;2328:2;2313:18;2959:144:11;2194:226:13;4042:426:1;;;;;;:::i;:::-;;:::i;:::-;;993:745:11;;;;;;:::i;:::-;;:::i;3500:93::-;3574:12;;3500:93;;3356:138;;;;;;:::i;:::-;3430:7;3456:31;;;:21;:31;;;;;;-1:-1:-1;;;;;3456:31:11;;3356:138;2569:486:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3109:241:11:-;;;;;;:::i;:::-;3192:17;;;;:7;:17;;;;;;;;:29;;;:40;;-1:-1:-1;;;;;;3192:40:11;-1:-1:-1;;;;;3192:40:11;;;;;;;;;;;3242:36;:44;;-1:-1:-1;;3296:47:11;;;3109:241;3123:153:1;;;;;;:::i;:::-;;:::i;2318:506:11:-;;;;;;:::i;:::-;;:::i;4190:201::-;;;;;;:::i;:::-;-1:-1:-1;;;4190:201:11;;;;;;;;;;;-1:-1:-1;;;;;;8928:33:13;;;8910:52;;8898:2;8883:18;4190:201:11;8766:202:13;2830:123:11;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1744:567::-;;;;;;:::i;:::-;;:::i;3343:166:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3465:27:1;;;3442:4;3465:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3343:166;4011:173:11;;;;;;:::i;:::-;-1:-1:-1;;;4011:173:11;;;;;;;;3576:394:1;;;;;;:::i;:::-;;:::i;2185:227::-;2271:7;-1:-1:-1;;;;;2298:21:1;;2290:76;;;;-1:-1:-1;;;2290:76:1;;11061:2:13;2290:76:1;;;11043:21:13;11100:2;11080:18;;;11073:30;11139:34;11119:18;;;11112:62;-1:-1:-1;;;11190:18:13;;;11183:40;11240:19;;2290:76:1;;;;;;;;;-1:-1:-1;2383:9:1;:13;;;;;;;;;;;-1:-1:-1;;;;;2383:22:1;;;;;;;;;;2185:227;;;;;:::o;4397:222:11:-;4500:4;-1:-1:-1;;;;;;4523:49:11;;-1:-1:-1;;;4523:49:11;;:89;;;4576:36;4600:11;4576:23;:36::i;1940:103:1:-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4042:426::-;-1:-1:-1;;;;;4267:20:1;;719:10:6;4267:20:1;;:60;;-1:-1:-1;4291:36:1;4308:4;719:10:6;3343:166:1;:::i;4291:36::-;4246:153;;;;-1:-1:-1;;;4246:153:1;;11857:2:13;4246:153:1;;;11839:21:13;11896:2;11876:18;;;11869:30;11935:34;11915:18;;;11908:62;-1:-1:-1;;;11986:18:13;;;11979:44;12040:19;;4246:153:1;11655:410:13;4246:153:1;4409:52;4432:4;4438:2;4442:3;4447:7;4456:4;4409:22;:52::i;:::-;4042:426;;;;;:::o;993:745:11:-;1102:1;1090:11;:13;1082:74;;;;-1:-1:-1;;;1082:74:11;;12272:2:13;1082:74:11;;;12254:21:13;12311:2;12291:18;;;12284:30;12350:34;12330:18;;;12323:62;-1:-1:-1;;;12401:18:13;;;12394:46;12457:19;;1082:74:11;12070:412:13;1082:74:11;1301:12;;;1205:10;;1301:12;;1166:20;1323:14;1301:12;1323:14;:::i;:::-;;;;;;1347:23;1352:4;1357:7;1365:1;1347:23;;;;;;;;;;;;:4;:23::i;:::-;1380:17;1387:9;1380:6;:17::i;:::-;1459:263;;;;;;;;;;;1539:10;1459:263;;;;;;;;;;;;;;;;;;;-1:-1:-1;1459:263:11;;;;;;;;;;;;1440:16;;;:7;:16;;;;;;;:282;;;;;;1459:263;1440:282;;;;-1:-1:-1;;;;;;1440:282:11;-1:-1:-1;;;;;1440:282:11;;;;;;;;;;;;;;;;1459:263;;1440:16;:282;;;;;;;;:::i;:::-;-1:-1:-1;1440:282:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1440:282:11;;;;;;;-1:-1:-1;;1440:282:11;;;;;;;;;;-1:-1:-1;;;;993:745:11:o;2569:486:1:-;2702:16;2757:3;:10;2738:8;:15;:29;2730:83;;;;-1:-1:-1;;;2730:83:1;;15165:2:13;2730:83:1;;;15147:21:13;15204:2;15184:18;;;15177:30;15243:34;15223:18;;;15216:62;-1:-1:-1;;;15294:18:13;;;15287:39;15343:19;;2730:83:1;14963:405:13;2730:83:1;2824:30;2871:8;:15;2857:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2857:30:1;;2824:63;;2903:9;2898:120;2922:8;:15;2918:1;:19;2898:120;;;2977:30;2987:8;2996:1;2987:11;;;;;;;;:::i;:::-;;;;;;;3000:3;3004:1;3000:6;;;;;;;;:::i;:::-;;;;;;;2977:9;:30::i;:::-;2958:13;2972:1;2958:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2939:3;;;:::i;:::-;;;2898:120;;;-1:-1:-1;3035:13:1;2569:486;-1:-1:-1;;;2569:486:1:o;3123:153::-;3217:52;719:10:6;3250:8:1;3260;3217:18;:52::i;:::-;3123:153;;:::o;2318:506:11:-;2396:28;2453:17;;;:7;:17;;;;;;:34;;;2427:61;;2444:8;;2453:34;2427:61;;;:::i;:::-;15679:25:13;;;15735:2;15720:18;;15713:34;15667:2;15652:18;2427:61:11;;;;;;;;;;;;;;;;;;;;;;;2396:92;;2498:66;2515:10;2534:11;2548:8;2558:1;2498:66;;;;;;;;;;;;:16;:66::i;:::-;2574:38;2588:10;2601:1;2604:3;2574:38;;;;;;;;;;;;:5;:38::i;:::-;2623:61;2640:10;2659:11;2673:1;2676:3;2623:61;;;;;;;;;;;;:16;:61::i;:::-;2695:34;;;;:24;:34;;;;;;;;:57;;-1:-1:-1;;;;;2695:57:11;;;-1:-1:-1;;;;;;2695:57:11;;;;;;;;;;2762:7;:17;;;;;;:39;:46;;-1:-1:-1;;2762:46:11;2695:57;2762:46;;;2318:506::o;2830:123::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2929:17:11;;;:7;:17;;;;;;2922:24;;;;;;;;;;;;;;;-1:-1:-1;;;;;2922:24:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2922:24:11;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2922:24:11;;;-1:-1:-1;;2922:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2830:123;-1:-1:-1;;2830:123:11:o;1744:567::-;1811:13;1854:15;1871:10;1837:45;;;;;;;;15915:19:13;;;15972:2;15968:15;-1:-1:-1;;15964:53:13;15959:2;15950:12;;15943:75;16043:2;16034:12;;15758:294;1837:45:11;;;;;;;;;;;;;1827:56;;;;;;1811:72;;1893:28;1924:187;1939:1;1941:5;1965:32;;;;;;;;:::i;:::-;-1:-1:-1;;1965:32:11;;;;;;;;;;;;;;;;2019:17;;;;:7;1965:32;2019:17;;;;;;;:34;;;;2070:29;;;;;1999:101;;;16304:25:13;;;16345:18;;;16338:34;;;;2054:15:11;16388:18:13;;;16381:34;-1:-1:-1;;;;;2070:29:11;16431:18:13;;;16424:83;16276:19;;1999:101:11;;;-1:-1:-1;;1999:101:11;;;;;;;;;;1948:153;;;1999:101;1948:153;;:::i;:::-;;;;;;;;;;;;;1924:14;:187::i;:::-;1893:218;;2121:66;2138:10;2149:20;2171:8;2181:1;2121:66;;;;;;;;;;;;:16;:66::i;:::-;2197:31;;;;:21;:31;;;;;;;;:54;;-1:-1:-1;;;;;;2197:54:11;-1:-1:-1;;;;;2197:54:11;;;;;;;;;;;2261:7;:17;;;;;;:36;;;:43;;-1:-1:-1;;2261:43:11;-1:-1:-1;2261:43:11;;;-1:-1:-1;1744:567:11:o;3576:394:1:-;-1:-1:-1;;;;;3776:20:1;;719:10:6;3776:20:1;;:60;;-1:-1:-1;3800:36:1;3817:4;719:10:6;3343:166:1;:::i;3800:36::-;3755:153;;;;-1:-1:-1;;;3755:153:1;;11857:2:13;3755:153:1;;;11839:21:13;11896:2;11876:18;;;11869:30;11935:34;11915:18;;;11908:62;-1:-1:-1;;;11986:18:13;;;11979:44;12040:19;;3755:153:1;11655:410:13;3755:153:1;3918:45;3936:4;3942:2;3946;3950:6;3958:4;3918:17;:45::i;1236:305::-;1338:4;-1:-1:-1;;;;;;1373:41:1;;-1:-1:-1;;;1373:41:1;;:109;;-1:-1:-1;;;;;;;1430:52:1;;-1:-1:-1;;;1430:52:1;1373:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:8;;;1498:36:1;829:155:8;6211:1115:1;6431:7;:14;6417:3;:10;:28;6409:81;;;;-1:-1:-1;;;6409:81:1;;17217:2:13;6409:81:1;;;17199:21:13;17256:2;17236:18;;;17229:30;17295:34;17275:18;;;17268:62;-1:-1:-1;;;17346:18:13;;;17339:38;17394:19;;6409:81:1;17015:404:13;6409:81:1;-1:-1:-1;;;;;6508:16:1;;6500:66;;;;-1:-1:-1;;;6500:66:1;;17626:2:13;6500:66:1;;;17608:21:13;17665:2;17645:18;;;17638:30;17704:34;17684:18;;;17677:62;-1:-1:-1;;;17755:18:13;;;17748:35;17800:19;;6500:66:1;17424:401:13;6500:66:1;719:10:6;6577:16:1;6690:411;6714:3;:10;6710:1;:14;6690:411;;;6745:10;6758:3;6762:1;6758:6;;;;;;;;:::i;:::-;;;;;;;6745:19;;6778:14;6795:7;6803:1;6795:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6820:19;6842:13;;;;;;;;;;-1:-1:-1;;;;;6842:19:1;;;;;;;;;;;;6795:10;;-1:-1:-1;6883:21:1;;;;6875:76;;;;-1:-1:-1;;;6875:76:1;;18032:2:13;6875:76:1;;;18014:21:13;18071:2;18051:18;;;18044:30;18110:34;18090:18;;;18083:62;-1:-1:-1;;;18161:18:13;;;18154:40;18211:19;;6875:76:1;17830:406:13;6875:76:1;6993:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6993:19:1;;;;;;;;;;7015:20;;;6993:42;;7063:17;;;;;;;:27;;7015:20;;6993:9;7063:27;;7015:20;;7063:27;:::i;:::-;;;;;;;;6731:370;;;6726:3;;;;:::i;:::-;;;6690:411;;;;7146:2;-1:-1:-1;;;;;7116:47:1;7140:4;-1:-1:-1;;;;;7116:47:1;7130:8;-1:-1:-1;;;;;7116:47:1;;7150:3;7155:7;7116:47;;;;;;;:::i;:::-;;;;;;;;7244:75;7280:8;7290:4;7296:2;7300:3;7305:7;7314:4;7244:35;:75::i;:::-;6399:927;6211:1115;;;;;:::o;3683:137:11:-;3782:31;3788:7;3797:2;3801:6;3808:4;3782:5;:31::i;:::-;3683:137;;;;:::o;3599:78::-;3655:15;3663:6;3655:7;:15::i;:::-;3599:78;:::o;12790:293:1:-;12910:8;-1:-1:-1;;;;;12901:17:1;:5;-1:-1:-1;;;;;12901:17:1;;12893:71;;;;-1:-1:-1;;;12893:71:1;;19043:2:13;12893:71:1;;;19025:21:13;19082:2;19062:18;;;19055:30;19121:34;19101:18;;;19094:62;-1:-1:-1;;;19172:18:13;;;19165:39;19221:19;;12893:71:1;18841:405:13;12893:71:1;-1:-1:-1;;;;;12974:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12974:46:1;;;;;;;;;;13035:41;;1201::13;;;13035::1;;1174:18:13;13035:41:1;;;;;;;12790:293;;;:::o;8608:671::-;-1:-1:-1;;;;;8717:16:1;;8709:62;;;;-1:-1:-1;;;8709:62:1;;19453:2:13;8709:62:1;;;19435:21:13;19492:2;19472:18;;;19465:30;19531:34;19511:18;;;19504:62;-1:-1:-1;;;19582:18:13;;;19575:31;19623:19;;8709:62:1;19251:397:13;8709:62:1;719:10:6;8782:16:1;8846:21;8864:2;8846:17;:21::i;:::-;8823:44;;8877:24;8904:25;8922:6;8904:17;:25::i;:::-;8877:52;;9017:9;:13;;;;;;;;;;;-1:-1:-1;;;;;9017:17:1;;;;;;;;;:27;;9038:6;;9017:9;:27;;9038:6;;9017:27;:::i;:::-;;;;-1:-1:-1;;9059:52:1;;;15679:25:13;;;15735:2;15720:18;;15713:34;;;-1:-1:-1;;;;;9059:52:1;;;;9092:1;;9059:52;;;;;;15652:18:13;9059:52:1;;;;;;;9198:74;9229:8;9247:1;9251:2;9255;9259:6;9267:4;9198:30;:74::i;:::-;8699:580;;;8608:671;;;;:::o;1081:484:7:-;1168:12;1225:6;1200:21;:31;;1192:73;;;;-1:-1:-1;;;1192:73:7;;19855:2:13;1192:73:7;;;19837:21:13;19894:2;19874:18;;;19867:30;19933:31;19913:18;;;19906:59;19982:18;;1192:73:7;19653:353:13;1192:73:7;1283:8;:15;1302:1;1283:20;1275:65;;;;-1:-1:-1;;;1275:65:7;;20213:2:13;1275:65:7;;;20195:21:13;;;20232:18;;;20225:30;20291:34;20271:18;;;20264:62;20343:18;;1275:65:7;20011:356:13;1275:65:7;1478:4;1467:8;1461:15;1454:4;1444:8;1440:19;1432:6;1424:59;1416:67;-1:-1:-1;;;;;;1510:18:7;;1502:56;;;;-1:-1:-1;;;1502:56:7;;20574:2:13;1502:56:7;;;20556:21:13;20613:2;20593:18;;;20586:30;20652:27;20632:18;;;20625:55;20697:18;;1502:56:7;20372:349:13;1502:56:7;1081:484;;;;;:::o;4918:947:1:-;-1:-1:-1;;;;;5099:16:1;;5091:66;;;;-1:-1:-1;;;5091:66:1;;17626:2:13;5091:66:1;;;17608:21:13;17665:2;17645:18;;;17638:30;17704:34;17684:18;;;17677:62;-1:-1:-1;;;17755:18:13;;;17748:35;17800:19;;5091:66:1;17424:401:13;5091:66:1;719:10:6;5168:16:1;5232:21;5250:2;5232:17;:21::i;:::-;5209:44;;5263:24;5290:25;5308:6;5290:17;:25::i;:::-;5263:52;;5397:19;5419:13;;;;;;;;;;;-1:-1:-1;;;;;5419:19:1;;;;;;;;;;5456:21;;;;5448:76;;;;-1:-1:-1;;;5448:76:1;;18032:2:13;5448:76:1;;;18014:21:13;18071:2;18051:18;;;18044:30;18110:34;18090:18;;;18083:62;-1:-1:-1;;;18161:18:13;;;18154:40;18211:19;;5448:76:1;17830:406:13;5448:76:1;5558:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5558:19:1;;;;;;;;;;5580:20;;;5558:42;;5620:17;;;;;;;:27;;5580:20;;5558:9;5620:27;;5580:20;;5620:27;:::i;:::-;;;;-1:-1:-1;;5663:46:1;;;15679:25:13;;;15735:2;15720:18;;15713:34;;;-1:-1:-1;;;;;5663:46:1;;;;;;;;;;;;;;15652:18:13;5663:46:1;;;;;;;5790:68;5821:8;5831:4;5837:2;5841;5845:6;5853:4;5790:30;:68::i;:::-;5081:784;;;;4918:947;;;;;:::o;16116:792::-;-1:-1:-1;;;;;16348:13:1;;1702:19:5;:23;16344:558:1;;16383:79;;-1:-1:-1;;;16383:79:1;;-1:-1:-1;;;;;16383:43:1;;;;;:79;;16427:8;;16437:4;;16443:3;;16448:7;;16457:4;;16383:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16383:79:1;;;;;;;;-1:-1:-1;;16383:79:1;;;;;;;;;;;;:::i;:::-;;;16379:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16768:6;16761:14;;-1:-1:-1;;;16761:14:1;;;;;;;;:::i;16379:513::-;;;16815:62;;-1:-1:-1;;;16815:62:1;;22897:2:13;16815:62:1;;;22879:21:13;22936:2;22916:18;;;22909:30;22975:34;22955:18;;;22948:62;23046:22;23026:18;;;23019:50;23086:19;;16815:62:1;22695:416:13;16379:513:1;-1:-1:-1;;;;;;16541:60:1;;-1:-1:-1;;;16541:60:1;16537:157;;16625:50;;-1:-1:-1;;;16625:50:1;;23318:2:13;16625:50:1;;;23300:21:13;23357:2;23337:18;;;23330:30;23396:34;23376:18;;;23369:62;-1:-1:-1;;;23447:18:13;;;23440:38;23495:19;;16625:50:1;23116:404:13;8149:86:1;8215:4;:13;8222:6;8215:4;:13;:::i;16914:193::-;17033:16;;;17047:1;17033:16;;;;;;;;;16980;;17008:22;;17033:16;;;;;;;;;;;;-1:-1:-1;17033:16:1;17008:41;;17070:7;17059:5;17065:1;17059:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17095:5;16914:193;-1:-1:-1;;16914:193:1:o;15385:725::-;-1:-1:-1;;;;;15592:13:1;;1702:19:5;:23;15588:516:1;;15627:72;;-1:-1:-1;;;15627:72:1;;-1:-1:-1;;;;;15627:38:1;;;;;:72;;15666:8;;15676:4;;15682:2;;15686:6;;15694:4;;15627:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15627:72:1;;;;;;;;-1:-1:-1;;15627:72:1;;;;;;;;;;;;:::i;:::-;;;15623:471;;;;:::i;:::-;-1:-1:-1;;;;;;15748:55:1;;-1:-1:-1;;;15748:55:1;15744:152;;15827:50;;-1:-1:-1;;;15827:50:1;;23318:2:13;15827:50:1;;;23300:21:13;23357:2;23337:18;;;23330:30;23396:34;23376:18;;;23369:62;-1:-1:-1;;;23447:18:13;;;23440:38;23495:19;;15827:50:1;23116:404:13;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;:::o;14:154:13:-;-1:-1:-1;;;;;93:5:13;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:315;241:6;249;302:2;290:9;281:7;277:23;273:32;270:52;;;318:1;315;308:12;270:52;357:9;344:23;376:31;401:5;376:31;:::i;:::-;426:5;478:2;463:18;;;;450:32;;-1:-1:-1;;;173:315:13:o;675:131::-;-1:-1:-1;;;;;;749:32:13;;739:43;;729:71;;796:1;793;786:12;811:245;869:6;922:2;910:9;901:7;897:23;893:32;890:52;;;938:1;935;928:12;890:52;977:9;964:23;996:30;1020:5;996:30;:::i;1253:180::-;1312:6;1365:2;1353:9;1344:7;1340:23;1336:32;1333:52;;;1381:1;1378;1371:12;1333:52;-1:-1:-1;1404:23:13;;1253:180;-1:-1:-1;1253:180:13:o;1438:250::-;1523:1;1533:113;1547:6;1544:1;1541:13;1533:113;;;1623:11;;;1617:18;1604:11;;;1597:39;1569:2;1562:10;1533:113;;;-1:-1:-1;;1680:1:13;1662:16;;1655:27;1438:250::o;1693:271::-;1735:3;1773:5;1767:12;1800:6;1795:3;1788:19;1816:76;1885:6;1878:4;1873:3;1869:14;1862:4;1855:5;1851:16;1816:76;:::i;:::-;1946:2;1925:15;-1:-1:-1;;1921:29:13;1912:39;;;;1953:4;1908:50;;1693:271;-1:-1:-1;;1693:271:13:o;1969:220::-;2118:2;2107:9;2100:21;2081:4;2138:45;2179:2;2168:9;2164:18;2156:6;2138:45;:::i;2425:127::-;2486:10;2481:3;2477:20;2474:1;2467:31;2517:4;2514:1;2507:15;2541:4;2538:1;2531:15;2557:249;2667:2;2648:13;;-1:-1:-1;;2644:27:13;2632:40;;2702:18;2687:34;;2723:22;;;2684:62;2681:88;;;2749:18;;:::i;:::-;2785:2;2778:22;-1:-1:-1;;2557:249:13:o;2811:183::-;2871:4;2904:18;2896:6;2893:30;2890:56;;;2926:18;;:::i;:::-;-1:-1:-1;2971:1:13;2967:14;2983:4;2963:25;;2811:183::o;2999:724::-;3053:5;3106:3;3099:4;3091:6;3087:17;3083:27;3073:55;;3124:1;3121;3114:12;3073:55;3160:6;3147:20;3186:4;3209:43;3249:2;3209:43;:::i;:::-;3281:2;3275:9;3293:31;3321:2;3313:6;3293:31;:::i;:::-;3359:18;;;3451:1;3447:10;;;;3435:23;;3431:32;;;3393:15;;;;-1:-1:-1;3475:15:13;;;3472:35;;;3503:1;3500;3493:12;3472:35;3539:2;3531:6;3527:15;3551:142;3567:6;3562:3;3559:15;3551:142;;;3633:17;;3621:30;;3671:12;;;;3584;;3551:142;;;-1:-1:-1;3711:6:13;2999:724;-1:-1:-1;;;;;;2999:724:13:o;3728:468::-;3792:5;3826:18;3818:6;3815:30;3812:56;;;3848:18;;:::i;:::-;3897:2;3891:9;3909:69;3966:2;3945:15;;-1:-1:-1;;3941:29:13;3972:4;3937:40;3891:9;3909:69;:::i;:::-;3996:6;3987:15;;4026:6;4018;4011:22;4066:3;4057:6;4052:3;4048:16;4045:25;4042:45;;;4083:1;4080;4073:12;4042:45;4133:6;4128:3;4121:4;4113:6;4109:17;4096:44;4188:1;4181:4;4172:6;4164;4160:19;4156:30;4149:41;;3728:468;;;;;:::o;4201:220::-;4243:5;4296:3;4289:4;4281:6;4277:17;4273:27;4263:55;;4314:1;4311;4304:12;4263:55;4336:79;4411:3;4402:6;4389:20;4382:4;4374:6;4370:17;4336:79;:::i;4426:1071::-;4580:6;4588;4596;4604;4612;4665:3;4653:9;4644:7;4640:23;4636:33;4633:53;;;4682:1;4679;4672:12;4633:53;4721:9;4708:23;4740:31;4765:5;4740:31;:::i;:::-;4790:5;-1:-1:-1;4847:2:13;4832:18;;4819:32;4860:33;4819:32;4860:33;:::i;:::-;4912:7;-1:-1:-1;4970:2:13;4955:18;;4942:32;4993:18;5023:14;;;5020:34;;;5050:1;5047;5040:12;5020:34;5073:61;5126:7;5117:6;5106:9;5102:22;5073:61;:::i;:::-;5063:71;;5187:2;5176:9;5172:18;5159:32;5143:48;;5216:2;5206:8;5203:16;5200:36;;;5232:1;5229;5222:12;5200:36;5255:63;5310:7;5299:8;5288:9;5284:24;5255:63;:::i;:::-;5245:73;;5371:3;5360:9;5356:19;5343:33;5327:49;;5401:2;5391:8;5388:16;5385:36;;;5417:1;5414;5407:12;5385:36;;5440:51;5483:7;5472:8;5461:9;5457:24;5440:51;:::i;:::-;5430:61;;;4426:1071;;;;;;;;:::o;5502:522::-;5580:6;5588;5641:2;5629:9;5620:7;5616:23;5612:32;5609:52;;;5657:1;5654;5647:12;5609:52;5697:9;5684:23;5730:18;5722:6;5719:30;5716:50;;;5762:1;5759;5752:12;5716:50;5785:22;;5838:4;5830:13;;5826:27;-1:-1:-1;5816:55:13;;5867:1;5864;5857:12;5816:55;5890:75;5957:7;5952:2;5939:16;5932:4;5928:2;5924:13;5890:75;:::i;:::-;5880:85;6012:4;5997:20;;;;5984:34;;-1:-1:-1;;;;5502:522:13:o;6029:1277::-;6147:6;6155;6208:2;6196:9;6187:7;6183:23;6179:32;6176:52;;;6224:1;6221;6214:12;6176:52;6264:9;6251:23;6293:18;6334:2;6326:6;6323:14;6320:34;;;6350:1;6347;6340:12;6320:34;6388:6;6377:9;6373:22;6363:32;;6433:7;6426:4;6422:2;6418:13;6414:27;6404:55;;6455:1;6452;6445:12;6404:55;6491:2;6478:16;6513:4;6536:43;6576:2;6536:43;:::i;:::-;6608:2;6602:9;6620:31;6648:2;6640:6;6620:31;:::i;:::-;6686:18;;;6774:1;6770:10;;;;6762:19;;6758:28;;;6720:15;;;;-1:-1:-1;6798:19:13;;;6795:39;;;6830:1;6827;6820:12;6795:39;6854:11;;;;6874:217;6890:6;6885:3;6882:15;6874:217;;;6970:3;6957:17;6987:31;7012:5;6987:31;:::i;:::-;7031:18;;6907:12;;;;7069;;;;6874:217;;;7110:6;-1:-1:-1;;7154:18:13;;7141:32;;-1:-1:-1;;7185:16:13;;;7182:36;;;7214:1;7211;7204:12;7182:36;;7237:63;7292:7;7281:8;7270:9;7266:24;7237:63;:::i;:::-;7227:73;;;6029:1277;;;;;:::o;7311:435::-;7364:3;7402:5;7396:12;7429:6;7424:3;7417:19;7455:4;7484:2;7479:3;7475:12;7468:19;;7521:2;7514:5;7510:14;7542:1;7552:169;7566:6;7563:1;7560:13;7552:169;;;7627:13;;7615:26;;7661:12;;;;7696:15;;;;7588:1;7581:9;7552:169;;;-1:-1:-1;7737:3:13;;7311:435;-1:-1:-1;;;;;7311:435:13:o;7751:261::-;7930:2;7919:9;7912:21;7893:4;7950:56;8002:2;7991:9;7987:18;7979:6;7950:56;:::i;8017:323::-;8093:6;8101;8154:2;8142:9;8133:7;8129:23;8125:32;8122:52;;;8170:1;8167;8160:12;8122:52;8206:9;8193:23;8183:33;;8266:2;8255:9;8251:18;8238:32;8279:31;8304:5;8279:31;:::i;:::-;8329:5;8319:15;;;8017:323;;;;;:::o;8345:416::-;8410:6;8418;8471:2;8459:9;8450:7;8446:23;8442:32;8439:52;;;8487:1;8484;8477:12;8439:52;8526:9;8513:23;8545:31;8570:5;8545:31;:::i;:::-;8595:5;-1:-1:-1;8652:2:13;8637:18;;8624:32;8694:15;;8687:23;8675:36;;8665:64;;8725:1;8722;8715:12;8973:749;9150:2;9139:9;9132:21;9195:6;9189:13;9184:2;9173:9;9169:18;9162:41;-1:-1:-1;;;;;9261:2:13;9253:6;9249:15;9243:22;9239:71;9234:2;9223:9;9219:18;9212:99;9365:2;9357:6;9353:15;9347:22;9342:2;9331:9;9327:18;9320:50;9113:4;9417:2;9409:6;9405:15;9399:22;9458:4;9452:3;9441:9;9437:19;9430:33;9486:52;9533:3;9522:9;9518:19;9504:12;9486:52;:::i;:::-;9472:66;;9607:3;9599:6;9595:16;9589:23;9582:31;9575:39;9569:3;9558:9;9554:19;9547:68;9685:3;9677:6;9673:16;9667:23;9660:31;9653:39;9646:4;9635:9;9631:20;9624:69;9710:6;9702:14;;;8973:749;;;;:::o;9727:388::-;9795:6;9803;9856:2;9844:9;9835:7;9831:23;9827:32;9824:52;;;9872:1;9869;9862:12;9824:52;9911:9;9898:23;9930:31;9955:5;9930:31;:::i;:::-;9980:5;-1:-1:-1;10037:2:13;10022:18;;10009:32;10050:33;10009:32;10050:33;:::i;10120:734::-;10224:6;10232;10240;10248;10256;10309:3;10297:9;10288:7;10284:23;10280:33;10277:53;;;10326:1;10323;10316:12;10277:53;10365:9;10352:23;10384:31;10409:5;10384:31;:::i;:::-;10434:5;-1:-1:-1;10491:2:13;10476:18;;10463:32;10504:33;10463:32;10504:33;:::i;:::-;10556:7;-1:-1:-1;10610:2:13;10595:18;;10582:32;;-1:-1:-1;10661:2:13;10646:18;;10633:32;;-1:-1:-1;10716:3:13;10701:19;;10688:33;10744:18;10733:30;;10730:50;;;10776:1;10773;10766:12;10730:50;10799:49;10840:7;10831:6;10820:9;10816:22;10799:49;:::i;11270:380::-;11349:1;11345:12;;;;11392;;;11413:61;;11467:4;11459:6;11455:17;11445:27;;11413:61;11520:2;11512:6;11509:14;11489:18;11486:38;11483:161;;11566:10;11561:3;11557:20;11554:1;11547:31;11601:4;11598:1;11591:15;11629:4;11626:1;11619:15;11483:161;;11270:380;;;:::o;12487:127::-;12548:10;12543:3;12539:20;12536:1;12529:31;12579:4;12576:1;12569:15;12603:4;12600:1;12593:15;12619:135;12658:3;12679:17;;;12676:43;;12699:18;;:::i;:::-;-1:-1:-1;12746:1:13;12735:13;;12619:135::o;12885:545::-;12987:2;12982:3;12979:11;12976:448;;;13023:1;13048:5;13044:2;13037:17;13093:4;13089:2;13079:19;13163:2;13151:10;13147:19;13144:1;13140:27;13134:4;13130:38;13199:4;13187:10;13184:20;13181:47;;;-1:-1:-1;13222:4:13;13181:47;13277:2;13272:3;13268:12;13265:1;13261:20;13255:4;13251:31;13241:41;;13332:82;13350:2;13343:5;13340:13;13332:82;;;13395:17;;;13376:1;13365:13;13332:82;;12976:448;12885:545;;;:::o;13606:1352::-;13732:3;13726:10;13759:18;13751:6;13748:30;13745:56;;;13781:18;;:::i;:::-;13810:97;13900:6;13860:38;13892:4;13886:11;13860:38;:::i;:::-;13854:4;13810:97;:::i;:::-;13962:4;;14026:2;14015:14;;14043:1;14038:663;;;;14745:1;14762:6;14759:89;;;-1:-1:-1;14814:19:13;;;14808:26;14759:89;-1:-1:-1;;13563:1:13;13559:11;;;13555:24;13551:29;13541:40;13587:1;13583:11;;;13538:57;14861:81;;14008:944;;14038:663;12832:1;12825:14;;;12869:4;12856:18;;-1:-1:-1;;14074:20:13;;;14192:236;14206:7;14203:1;14200:14;14192:236;;;14295:19;;;14289:26;14274:42;;14387:27;;;;14355:1;14343:14;;;;14222:19;;14192:236;;;14196:3;14456:6;14447:7;14444:19;14441:201;;;14517:19;;;14511:26;-1:-1:-1;;14600:1:13;14596:14;;;14612:3;14592:24;14588:37;14584:42;14569:58;14554:74;;14441:201;-1:-1:-1;;;;;14688:1:13;14672:14;;;14668:22;14655:36;;-1:-1:-1;13606:1352:13:o;15373:127::-;15434:10;15429:3;15425:20;15422:1;15415:31;15465:4;15462:1;15455:15;15489:4;15486:1;15479:15;16518:492;16693:3;16731:6;16725:13;16747:66;16806:6;16801:3;16794:4;16786:6;16782:17;16747:66;:::i;:::-;16876:13;;16835:16;;;;16898:70;16876:13;16835:16;16945:4;16933:17;;16898:70;:::i;:::-;16984:20;;16518:492;-1:-1:-1;;;;16518:492:13:o;18241:125::-;18306:9;;;18327:10;;;18324:36;;;18340:18;;:::i;18371:465::-;18628:2;18617:9;18610:21;18591:4;18654:56;18706:2;18695:9;18691:18;18683:6;18654:56;:::i;:::-;18758:9;18750:6;18746:22;18741:2;18730:9;18726:18;18719:50;18786:44;18823:6;18815;18786:44;:::i;:::-;18778:52;18371:465;-1:-1:-1;;;;;18371:465:13:o;20726:850::-;21048:4;-1:-1:-1;;;;;21158:2:13;21150:6;21146:15;21135:9;21128:34;21210:2;21202:6;21198:15;21193:2;21182:9;21178:18;21171:43;;21250:3;21245:2;21234:9;21230:18;21223:31;21277:57;21329:3;21318:9;21314:19;21306:6;21277:57;:::i;:::-;21382:9;21374:6;21370:22;21365:2;21354:9;21350:18;21343:50;21416:44;21453:6;21445;21416:44;:::i;:::-;21402:58;;21509:9;21501:6;21497:22;21491:3;21480:9;21476:19;21469:51;21537:33;21563:6;21555;21537:33;:::i;:::-;21529:41;20726:850;-1:-1:-1;;;;;;;;20726:850:13:o;21581:249::-;21650:6;21703:2;21691:9;21682:7;21678:23;21674:32;21671:52;;;21719:1;21716;21709:12;21671:52;21751:9;21745:16;21770:30;21794:5;21770:30;:::i;21835:179::-;21870:3;21912:1;21894:16;21891:23;21888:120;;;21958:1;21955;21952;21937:23;-1:-1:-1;21995:1:13;21989:8;21984:3;21980:18;21888:120;21835:179;:::o;22019:671::-;22058:3;22100:4;22082:16;22079:26;22076:39;;;22019:671;:::o;22076:39::-;22142:2;22136:9;-1:-1:-1;;22207:16:13;22203:25;;22200:1;22136:9;22179:50;22258:4;22252:11;22282:16;22317:18;22388:2;22381:4;22373:6;22369:17;22366:25;22361:2;22353:6;22350:14;22347:45;22344:58;;;22395:5;;;;;22019:671;:::o;22344:58::-;22432:6;22426:4;22422:17;22411:28;;22468:3;22462:10;22495:2;22487:6;22484:14;22481:27;;;22501:5;;;;;;22019:671;:::o;22481:27::-;22585:2;22566:16;22560:4;22556:27;22552:36;22545:4;22536:6;22531:3;22527:16;22523:27;22520:69;22517:82;;;22592:5;;;;;;22019:671;:::o;22517:82::-;22608:57;22659:4;22650:6;22642;22638:19;22634:30;22628:4;22608:57;:::i;:::-;-1:-1:-1;22681:3:13;;22019:671;-1:-1:-1;;;;;22019:671:13:o;23525:584::-;23747:4;-1:-1:-1;;;;;23857:2:13;23849:6;23845:15;23834:9;23827:34;23909:2;23901:6;23897:15;23892:2;23881:9;23877:18;23870:43;;23949:6;23944:2;23933:9;23929:18;23922:34;23992:6;23987:2;23976:9;23972:18;23965:34;24036:3;24030;24019:9;24015:19;24008:32;24057:46;24098:3;24087:9;24083:19;24075:6;24057:46;:::i;:::-;24049:54;23525:584;-1:-1:-1;;;;;;;23525:584:13:o"},"gasEstimates":{"creation":{"codeDepositCost":"4687200","executionCost":"infinite","totalCost":"infinite"},"external":{"balanceOf(address,uint256)":"2694","balanceOfBatch(address[],uint256[])":"infinite","getEstateAuctionListing(uint256)":"2566","getEstateInvestmentListing(uint256)":"2567","getEstateListing(uint256)":"infinite","getNumEstates()":"2348","isApprovedForAll(address,address)":"infinite","listEstateForAuction(uint256)":"infinite","listEstateForInvestment(uint256)":"infinite","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"infinite","onERC1155Received(address,address,uint256,uint256,bytes)":"infinite","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"infinite","safeTransferFrom(address,address,uint256,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26722","supportsInterface(bytes4)":"infinite","tokenizeEstate(string,uint256)":"infinite","updateOwner(uint256,address)":"48912","uri(uint256)":"infinite"},"internal":{"mint(address,uint256,uint256,bytes memory)":"infinite","mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","setURI(string memory)":"infinite"}},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","getEstateAuctionListing(uint256)":"4a2454be","getEstateInvestmentListing(uint256)":"1a05b063","getEstateListing(uint256)":"d18ff5f8","getNumEstates()":"3d55daf8","isApprovedForAll(address,address)":"e985e9c5","listEstateForAuction(uint256)":"e6efd4d0","listEstateForInvestment(uint256)":"ba1b60fc","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenizeEstate(string,uint256)":"3ba44be6","updateOwner(uint256,address)":"7192711f","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"estateId\",\"type\":\"uint256\"}],\"name\":\"getEstateAuctionListing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"estateId\",\"type\":\"uint256\"}],\"name\":\"getEstateInvestmentListing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"estateId\",\"type\":\"uint256\"}],\"name\":\"getEstateListing\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"estateID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"estateOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"estateEvaluation\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"estateMetadata\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isListedForAuction\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isListedForInvestment\",\"type\":\"bool\"}],\"internalType\":\"struct EstateFactory.Estate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumEstates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"estateId\",\"type\":\"uint256\"}],\"name\":\"listEstateForAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"estateId\",\"type\":\"uint256\"}],\"name\":\"listEstateForInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_metadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_evaluation\",\"type\":\"uint256\"}],\"name\":\"tokenizeEstate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"estateID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"updateOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FactoryEstate.sol\":\"EstateFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155.sol\\\";\\nimport \\\"./IERC1155Receiver.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURI.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\\n    using Address for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping(uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    constructor(string memory uri_) {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: address zero is not a valid owner\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] memory accounts,\\n        uint256[] memory ids\\n    ) public view virtual override returns (uint256[] memory) {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeTransferFrom(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _balances[id][to] += amount;\\n        emit TransferSingle(operator, address(0), to, id, amount);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(address from, uint256 id, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory amounts) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n        }\\n\\n        emit TransferBatch(operator, from, address(0), ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC1155: setting approval status for self\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n}\\n\",\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Create2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Create2.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\\n * `CREATE2` can be used to compute in advance the address where a smart\\n * contract will be deployed, which allows for interesting new mechanisms known\\n * as 'counterfactual interactions'.\\n *\\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\\n * information.\\n */\\nlibrary Create2 {\\n    /**\\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\\n     * will be deployed can be known in advance via {computeAddress}.\\n     *\\n     * The bytecode for a contract can be obtained from Solidity with\\n     * `type(contractName).creationCode`.\\n     *\\n     * Requirements:\\n     *\\n     * - `bytecode` must not be empty.\\n     * - `salt` must have not been used for `bytecode` already.\\n     * - the factory must have a balance of at least `amount`.\\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\\n     */\\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\\n        require(address(this).balance >= amount, \\\"Create2: insufficient balance\\\");\\n        require(bytecode.length != 0, \\\"Create2: bytecode length is zero\\\");\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\\n        }\\n        require(addr != address(0), \\\"Create2: Failed on deploy\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\\n     * `bytecodeHash` or `salt` will result in a new destination address.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\\n        return computeAddress(salt, bytecodeHash, address(this));\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40) // Get free memory pointer\\n\\n            // |                   | \\u2193 ptr ...  \\u2193 ptr + 0x0B (start) ...  \\u2193 ptr + 0x20 ...  \\u2193 ptr + 0x40 ...   |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\\n            // | 0xFF              |            FF                                                             |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\\n            // | keccak(start, 85) |            \\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191 |\\n\\n            mstore(add(ptr, 0x40), bytecodeHash)\\n            mstore(add(ptr, 0x20), salt)\\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\\n            mstore8(start, 0xff)\\n            addr := keccak256(start, 85)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/AuctionEstate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Compatible with OpenZeppelin Contracts ^5.0.0\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract AuctionEstate is ERC1155,IERC1155Receiver {\\r\\n\\r\\n    uint256 private estateId;\\r\\n    uint256 private estateEvaluation;\\r\\n    uint256 private highestBid;\\r\\n    address payable private auctionWinner;\\r\\n    uint256 private timestamp;\\r\\n    address payable private estateOwner;\\r\\n\\r\\n    address payable [] private bidders;\\r\\n    \\r\\n    mapping (address=>uint256) private BidsPlaced;\\r\\n\\r\\n\\r\\n    constructor(uint256 _id,uint256 _evaluation,uint256 _timestamp,address payable owner)\\r\\n        ERC1155(\\\"\\\")\\r\\n    {   estateId = _id;\\r\\n        estateEvaluation = _evaluation;\\r\\n        timestamp = _timestamp;\\r\\n        highestBid = 0;\\r\\n        estateOwner = owner;\\r\\n    }\\r\\n\\r\\n    function getAuctionDetails() external view returns(uint256,uint256,uint256,address payable,address payable,uint256){\\r\\n        return(estateId,estateEvaluation,highestBid,estateOwner,auctionWinner,timestamp);\\r\\n    }\\r\\n\\r\\n    function getAllBidders() external view returns(address payable [] memory){\\r\\n        return bidders;\\r\\n    }\\r\\n\\r\\n    function getBidDetails(address payable bidder) external view returns(uint256){\\r\\n        return (BidsPlaced[bidder]);\\r\\n    }\\r\\n\\r\\n    function placeBid(uint256 bid) external payable  {\\r\\n        //require(block.timestamp - timestamp <= 24 hours,\\\"This listing has expired\\\");\\r\\n        require(bid>estateEvaluation, \\\"Bid placed must be higher than the evaluation of the timestamp\\\");\\r\\n        BidsPlaced[msg.sender] = bid;\\r\\n        bidders.push(payable(address(msg.sender)));\\r\\n        if(highestBid<bid){\\r\\n            highestBid = bid;\\r\\n            auctionWinner = payable(address(msg.sender));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function declareWinner() public view returns(address payable) {\\r\\n        //require(block.timestamp-timestamp> 24 hours, \\\"Winner cannot be declared before 24 hours of the listing\\\");\\r\\n        return auctionWinner;\\r\\n    }\\r\\n\\r\\n    function withdrawMyFunds() external payable {\\r\\n        //require(block.timestamp-timestamp> 24 hours, \\\"Funds cannot be withdrawn before 24 hours of the listing\\\");\\r\\n        if(payable(address(msg.sender))!=auctionWinner){\\r\\n            uint256 bidPlaced = BidsPlaced[msg.sender];\\r\\n            require(bidPlaced!=0 , \\\"You have not placed any bet in this auction\\\");\\r\\n            payable(address(msg.sender)).transfer(bidPlaced);\\r\\n            BidsPlaced[address(msg.sender)] = 0;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function claimPrize() external payable {\\r\\n        //require(block.timestamp-timestamp> 24 hours, \\\"Estate cannnot be claimed before 24 hours of the listing\\\");\\r\\n        if(payable(address(msg.sender))==auctionWinner){\\r\\n            estateOwner.transfer(highestBid);\\r\\n            safeTransferFrom(address(this), auctionWinner, estateId, 0, \\\"\\\");\\r\\n            BidsPlaced[address(msg.sender)] = 0;\\r\\n        }  \\r\\n    }\\r\\n\\r\\n    function onERC1155Received(address, address, uint256, uint256, bytes memory) public virtual returns (bytes4) {\\r\\n        return this.onERC1155Received.selector;\\r\\n    }\\r\\n\\r\\n    function onERC1155BatchReceived(address, address, uint256[] memory, uint256[] memory, bytes memory) public virtual returns (bytes4) {\\r\\n        return this.onERC1155BatchReceived.selector;\\r\\n    }\\r\\n\\r\\n    // The following functions are overrides required by Solidity.\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0xd9fa09abb223589413ee4ffd809465af24db65b0627f223dd859dc21d42239cd\",\"license\":\"MIT\"},\"contracts/FactoryEstate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Compatible with OpenZeppelin Contracts ^5.0.0\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Create2.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\\\";\\nimport \\\"./AuctionEstate.sol\\\";\\nimport \\\"./WalletEstate.sol\\\";\\n\\ncontract EstateFactory is ERC1155,IERC1155Receiver{\\n\\n    uint256 private _nextTokenId=1;\\n\\n    constructor()\\n        ERC1155(\\\"\\\")        \\n    {}\\n\\n    struct Estate{\\n        uint256 estateID;\\n        address payable estateOwner;\\n        uint256 estateEvaluation;\\n        string estateMetadata;\\n        bool isListedForAuction;\\n        bool isListedForInvestment;\\n    }\\n\\n    mapping (uint256 => Estate) private Estates;\\n    mapping (uint256 => address) private EstateInvestmentListings; //estate id -> estate wallet contract address\\n    mapping (uint256 => address) private EstateAuctionListings; //estate id -> estate auction contract address\\n\\n    function tokenizeEstate(string memory _metadata,uint256 _evaluation) external  {\\n        require(_evaluation>0, \\\"Evaluation of the Estate must be more than zero!\\\");\\n        address payable addr = payable(address(msg.sender));\\n        //Mint Estate Token to Owner\\n                 \\n         uint256 tokenId = _nextTokenId;\\n        _nextTokenId++;\\n        mint(addr,tokenId,1,\\\"\\\");\\n        setURI(_metadata);\\n\\n        //Create Estate Listing\\n        Estates[tokenId] = Estate({\\n            estateID:tokenId,\\n            estateOwner: payable(address(msg.sender)),\\n            estateMetadata:_metadata,\\n            estateEvaluation: _evaluation,\\n            isListedForAuction:false,\\n            isListedForInvestment:false\\n        });\\n        \\n    }\\n\\n    function listEstateForAuction(uint256 estateId) external {\\n        bytes32 _salt = keccak256(abi.encodePacked(block.timestamp, msg.sender));\\n        address latestAuctionAddress = Create2.deploy(0,_salt, abi.encodePacked(type(AuctionEstate).creationCode, abi.encode(estateId,Estates[estateId].estateEvaluation,block.timestamp,Estates[estateId].estateOwner))\\n        );\\n        safeTransferFrom(msg.sender,latestAuctionAddress, estateId, 1, \\\"\\\");\\n        EstateAuctionListings[estateId] = latestAuctionAddress;\\n        Estates[estateId].isListedForAuction = true;\\n    }\\n\\n     function listEstateForInvestment(uint256 estateId) external  {\\n      \\n        IERC1155Receiver newContract = new WalletEstate(estateId,Estates[estateId].estateEvaluation);\\n        safeTransferFrom(msg.sender,address(newContract), estateId, 1, \\\"\\\");\\n        _mint(address(msg.sender), 0, 100, \\\"\\\");\\n         safeTransferFrom(msg.sender,address(newContract), 0, 100, \\\"\\\");\\n\\n        EstateInvestmentListings[estateId] = address(newContract);\\n        Estates[estateId].isListedForInvestment = true;\\n        \\n    }\\n\\n    function getEstateListing(uint256 estateId) external view returns (Estate memory) {\\n        return Estates[estateId];\\n    }\\n\\n    function getEstateInvestmentListing(uint256 estateId) external view returns (address) {\\n        return EstateInvestmentListings[estateId];\\n    }\\n\\n    function updateOwner(uint256 estateID,address payable newOwner) external {\\n        Estates[estateID].estateOwner = newOwner;\\n        Estates[estateID].isListedForAuction = false;\\n        Estates[estateID].isListedForInvestment = false;\\n    }\\n\\n    function getEstateAuctionListing(uint256 estateId) external view returns (address) {\\n        return EstateAuctionListings[estateId];\\n    }\\n\\n    function getNumEstates() external view returns (uint256) {\\n        return _nextTokenId;\\n    }\\n\\n    function setURI(string memory newuri) private {\\n        _setURI(newuri);\\n    }\\n\\n    function mint(address account, uint256 id, uint256 amount,bytes memory data) private\\n    {\\n        _mint(account, id, amount,data);\\n    }\\n\\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\\n        private\\n        \\n    {\\n        _mintBatch(to, ids, amounts, data);\\n    }\\n\\n     function onERC1155Received(address, address, uint256, uint256, bytes memory) public virtual override returns (bytes4) {\\n        return this.onERC1155Received.selector;\\n    }\\n\\n    function onERC1155BatchReceived(address, address, uint256[] memory, uint256[] memory, bytes memory) public virtual override returns (bytes4) {\\n        return this.onERC1155BatchReceived.selector;\\n    }\\n\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC1155, IERC165) returns (bool) {\\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n\\n\\n\\n\\n}\",\"keccak256\":\"0x108ea82b2b5f3bb9921931be9c422114316c2af4ed2da433446ce9576796d5d8\",\"license\":\"MIT\"},\"contracts/WalletEstate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Compatible with OpenZeppelin Contracts ^5.0.0\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\n\\r\\ncontract WalletEstate is ERC1155,IERC1155Receiver {\\r\\n\\r\\n    uint256 private constant WALLET_TOKEN = 0;\\r\\n    uint256 private estateId;\\r\\n    uint256 private estateEvaluation;\\r\\n    address payable private estateOwner;\\r\\n\\r\\n    mapping (address=>uint256) estateShareHolders;\\r\\n\\r\\n    address payable [] private investors;\\r\\n\\r\\n    constructor(uint256 _id,uint256 _evaluation)\\r\\n        ERC1155(\\\"\\\")\\r\\n    {   estateId = _id;\\r\\n        estateEvaluation = _evaluation;\\r\\n        estateOwner = payable(address(msg.sender));\\r\\n        \\r\\n    }\\r\\n\\r\\n     function getInvestmentDetails() external view returns(uint256,uint256,address payable){\\r\\n        return(estateId,estateEvaluation,estateOwner);\\r\\n    }\\r\\n\\r\\n    function getAllInvestors() external view returns(address payable [] memory){\\r\\n        return investors;\\r\\n    }\\r\\n\\r\\n    function getInvestmentDetails(address payable investor) external view returns(uint256){\\r\\n        return (estateShareHolders[investor]);\\r\\n    }\\r\\n\\r\\n    function purchaseShares(uint256 quantity) external payable  {\\r\\n        require(quantity<=100,\\\"Maximum number of shares that can be purchased is 100\\\");\\r\\n        require(quantity>0, \\\"Number of shares purchased cannot be zero or less\\\");\\r\\n        require(quantity<balanceOf(address(this), WALLET_TOKEN),\\\"There aren't sufficient shares to be purchased\\\");\\r\\n\\r\\n        //uint256 share_evaluation = ((estateEvaluation*10**18)/100)*quantity;\\r\\n        //require(share_evaluation==msg.value,\\\"Incorrect funds sent!\\\");\\r\\n        payable(address(this)).transfer(msg.value);\\r\\n\\r\\n       safeTransferFrom(address(this), address(msg.sender), WALLET_TOKEN, quantity, \\\"\\\");\\r\\n       estateShareHolders[address(msg.sender)] = quantity;\\r\\n       investors.push(payable(address(msg.sender)));\\r\\n    }\\r\\n\\r\\n    function transferShares(address receiver,uint256 quantity) external {\\r\\n        require(quantity <= estateShareHolders[address(msg.sender)], \\\"Insufficient shares to be transferred to recepient\\\");\\r\\n        safeTransferFrom(address(msg.sender), receiver, WALLET_TOKEN, quantity, \\\"\\\");\\r\\n        estateShareHolders[address(msg.sender)] -= quantity;\\r\\n        estateShareHolders[receiver] += quantity;\\r\\n    }\\r\\n\\r\\n    function sellShares(uint256 quantity) external payable {\\r\\n        require(quantity <= estateShareHolders[address(msg.sender)], \\\"Insufficient shares to be sold\\\");\\r\\n        safeTransferFrom(address(msg.sender), address(this), WALLET_TOKEN, quantity, \\\"\\\");\\r\\n\\r\\n        uint256 share_evaluation = ((estateEvaluation*10**18)/100)*quantity;\\r\\n        payable(address(msg.sender)).transfer(share_evaluation);\\r\\n        estateShareHolders[address(msg.sender)] -=quantity; \\r\\n    }\\r\\n\\r\\n    function onERC1155Received(address, address, uint256, uint256, bytes memory) external virtual returns (bytes4) {\\r\\n        return this.onERC1155Received.selector;\\r\\n    }\\r\\n\\r\\n    function onERC1155BatchReceived(address, address, uint256[] memory, uint256[] memory, bytes memory) external virtual returns (bytes4) {\\r\\n        return this.onERC1155BatchReceived.selector;\\r\\n    }\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0xf653340e56b8f28141b33c65806378bd61c4049d0b700654f6381726abdb0004\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"contracts/FactoryEstate.sol:EstateFactory","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":144,"contract":"contracts/FactoryEstate.sol:EstateFactory","label":"_operatorApprovals","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":146,"contract":"contracts/FactoryEstate.sol:EstateFactory","label":"_uri","offset":0,"slot":"2","type":"t_string_storage"},{"astId":2304,"contract":"contracts/FactoryEstate.sol:EstateFactory","label":"_nextTokenId","offset":0,"slot":"3","type":"t_uint256"},{"astId":2329,"contract":"contracts/FactoryEstate.sol:EstateFactory","label":"Estates","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_struct(Estate)2324_storage)"},{"astId":2333,"contract":"contracts/FactoryEstate.sol:EstateFactory","label":"EstateInvestmentListings","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_address)"},{"astId":2337,"contract":"contracts/FactoryEstate.sol:EstateFactory","label":"EstateAuctionListings","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_address)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_struct(Estate)2324_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct EstateFactory.Estate)","numberOfBytes":"32","value":"t_struct(Estate)2324_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Estate)2324_storage":{"encoding":"inplace","label":"struct EstateFactory.Estate","members":[{"astId":2313,"contract":"contracts/FactoryEstate.sol:EstateFactory","label":"estateID","offset":0,"slot":"0","type":"t_uint256"},{"astId":2315,"contract":"contracts/FactoryEstate.sol:EstateFactory","label":"estateOwner","offset":0,"slot":"1","type":"t_address_payable"},{"astId":2317,"contract":"contracts/FactoryEstate.sol:EstateFactory","label":"estateEvaluation","offset":0,"slot":"2","type":"t_uint256"},{"astId":2319,"contract":"contracts/FactoryEstate.sol:EstateFactory","label":"estateMetadata","offset":0,"slot":"3","type":"t_string_storage"},{"astId":2321,"contract":"contracts/FactoryEstate.sol:EstateFactory","label":"isListedForAuction","offset":0,"slot":"4","type":"t_bool"},{"astId":2323,"contract":"contracts/FactoryEstate.sol:EstateFactory","label":"isListedForInvestment","offset":1,"slot":"4","type":"t_bool"}],"numberOfBytes":"160"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/WalletEstate.sol":{"WalletEstate":{"abi":[{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"uint256","name":"_evaluation","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllInvestors","outputs":[{"internalType":"address payable[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getInvestmentDetails","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"investor","type":"address"}],"name":"getInvestmentDetails","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"purchaseShares","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"sellShares","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"transferShares","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_157":{"entryPoint":null,"id":157,"parameterSlots":1,"returnSlots":0},"@_2787":{"entryPoint":null,"id":2787,"parameterSlots":2,"returnSlots":0},"@_setURI_668":{"entryPoint":112,"id":668,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_uint256t_uint256_fromMemory":{"entryPoint":130,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":249,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":332,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":189,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":167,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2982:13","statements":[{"nodeType":"YulBlock","src":"6:3:13","statements":[]},{"body":{"nodeType":"YulBlock","src":"112:147:13","statements":[{"body":{"nodeType":"YulBlock","src":"158:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"167:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"170:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"160:6:13"},"nodeType":"YulFunctionCall","src":"160:12:13"},"nodeType":"YulExpressionStatement","src":"160:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"133:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"142:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"129:3:13"},"nodeType":"YulFunctionCall","src":"129:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"154:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"125:3:13"},"nodeType":"YulFunctionCall","src":"125:32:13"},"nodeType":"YulIf","src":"122:52:13"},{"nodeType":"YulAssignment","src":"183:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"199:9:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"193:5:13"},"nodeType":"YulFunctionCall","src":"193:16:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"183:6:13"}]},{"nodeType":"YulAssignment","src":"218:35:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"238:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"249:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:13"},"nodeType":"YulFunctionCall","src":"234:18:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"228:5:13"},"nodeType":"YulFunctionCall","src":"228:25:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"218:6:13"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"70:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"81:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"93:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"101:6:13","type":""}],"src":"14:245:13"},{"body":{"nodeType":"YulBlock","src":"296:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"313:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"320:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"325:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"316:3:13"},"nodeType":"YulFunctionCall","src":"316:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"306:6:13"},"nodeType":"YulFunctionCall","src":"306:31:13"},"nodeType":"YulExpressionStatement","src":"306:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"353:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"356:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"346:6:13"},"nodeType":"YulFunctionCall","src":"346:15:13"},"nodeType":"YulExpressionStatement","src":"346:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"377:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"380:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"370:6:13"},"nodeType":"YulFunctionCall","src":"370:15:13"},"nodeType":"YulExpressionStatement","src":"370:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"264:127:13"},{"body":{"nodeType":"YulBlock","src":"451:325:13","statements":[{"nodeType":"YulAssignment","src":"461:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"475:1:13","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"478:4:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"471:3:13"},"nodeType":"YulFunctionCall","src":"471:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"461:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"492:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"522:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"528:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"518:3:13"},"nodeType":"YulFunctionCall","src":"518:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"496:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"569:31:13","statements":[{"nodeType":"YulAssignment","src":"571:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"585:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"593:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"581:3:13"},"nodeType":"YulFunctionCall","src":"581:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"571:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"549:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"542:6:13"},"nodeType":"YulFunctionCall","src":"542:26:13"},"nodeType":"YulIf","src":"539:61:13"},{"body":{"nodeType":"YulBlock","src":"659:111:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"680:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"687:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"692:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"683:3:13"},"nodeType":"YulFunctionCall","src":"683:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"673:6:13"},"nodeType":"YulFunctionCall","src":"673:31:13"},"nodeType":"YulExpressionStatement","src":"673:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"724:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"727:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"717:6:13"},"nodeType":"YulFunctionCall","src":"717:15:13"},"nodeType":"YulExpressionStatement","src":"717:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:13"},"nodeType":"YulFunctionCall","src":"745:15:13"},"nodeType":"YulExpressionStatement","src":"745:15:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"615:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"638:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"646:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"635:2:13"},"nodeType":"YulFunctionCall","src":"635:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"612:2:13"},"nodeType":"YulFunctionCall","src":"612:38:13"},"nodeType":"YulIf","src":"609:161:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"431:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"440:6:13","type":""}],"src":"396:380:13"},{"body":{"nodeType":"YulBlock","src":"837:65:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:13","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"857:3:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"847:6:13"},"nodeType":"YulFunctionCall","src":"847:14:13"},"nodeType":"YulExpressionStatement","src":"847:14:13"},{"nodeType":"YulAssignment","src":"870:26:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"888:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"891:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"878:9:13"},"nodeType":"YulFunctionCall","src":"878:18:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"870:4:13"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"820:3:13","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"828:4:13","type":""}],"src":"781:121:13"},{"body":{"nodeType":"YulBlock","src":"988:464:13","statements":[{"body":{"nodeType":"YulBlock","src":"1021:425:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1035:11:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1045:1:13","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1039:2:13","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1066:2:13"},{"name":"array","nodeType":"YulIdentifier","src":"1070:5:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1059:6:13"},"nodeType":"YulFunctionCall","src":"1059:17:13"},"nodeType":"YulExpressionStatement","src":"1059:17:13"},{"nodeType":"YulVariableDeclaration","src":"1089:31:13","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1111:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"1115:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1101:9:13"},"nodeType":"YulFunctionCall","src":"1101:19:13"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"1093:4:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1133:57:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1156:4:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1166:1:13","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1173:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"1185:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1169:3:13"},"nodeType":"YulFunctionCall","src":"1169:19:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1162:3:13"},"nodeType":"YulFunctionCall","src":"1162:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1152:3:13"},"nodeType":"YulFunctionCall","src":"1152:38:13"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"1137:11:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1227:23:13","statements":[{"nodeType":"YulAssignment","src":"1229:19:13","value":{"name":"data","nodeType":"YulIdentifier","src":"1244:4:13"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"1229:11:13"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1209:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"1221:4:13","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1206:2:13"},"nodeType":"YulFunctionCall","src":"1206:20:13"},"nodeType":"YulIf","src":"1203:47:13"},{"nodeType":"YulVariableDeclaration","src":"1263:41:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1277:4:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1287:1:13","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1294:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1299:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1290:3:13"},"nodeType":"YulFunctionCall","src":"1290:12:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1283:3:13"},"nodeType":"YulFunctionCall","src":"1283:20:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1273:3:13"},"nodeType":"YulFunctionCall","src":"1273:31:13"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1267:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1317:24:13","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1330:11:13"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1321:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1415:21:13","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1424:5:13"},{"name":"_1","nodeType":"YulIdentifier","src":"1431:2:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1417:6:13"},"nodeType":"YulFunctionCall","src":"1417:17:13"},"nodeType":"YulExpressionStatement","src":"1417:17:13"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1365:5:13"},{"name":"_2","nodeType":"YulIdentifier","src":"1372:2:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1362:2:13"},"nodeType":"YulFunctionCall","src":"1362:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1376:26:13","statements":[{"nodeType":"YulAssignment","src":"1378:22:13","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1391:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1398:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1387:3:13"},"nodeType":"YulFunctionCall","src":"1387:13:13"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1378:5:13"}]}]},"pre":{"nodeType":"YulBlock","src":"1358:3:13","statements":[]},"src":"1354:82:13"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1004:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1009:2:13","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1001:2:13"},"nodeType":"YulFunctionCall","src":"1001:11:13"},"nodeType":"YulIf","src":"998:448:13"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"960:5:13","type":""},{"name":"len","nodeType":"YulTypedName","src":"967:3:13","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"972:10:13","type":""}],"src":"907:545:13"},{"body":{"nodeType":"YulBlock","src":"1542:81:13","statements":[{"nodeType":"YulAssignment","src":"1552:65:13","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1567:4:13"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1585:1:13","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1588:3:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1581:3:13"},"nodeType":"YulFunctionCall","src":"1581:11:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1598:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1594:3:13"},"nodeType":"YulFunctionCall","src":"1594:6:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1577:3:13"},"nodeType":"YulFunctionCall","src":"1577:24:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1573:3:13"},"nodeType":"YulFunctionCall","src":"1573:29:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1563:3:13"},"nodeType":"YulFunctionCall","src":"1563:40:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1609:1:13","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1612:3:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1605:3:13"},"nodeType":"YulFunctionCall","src":"1605:11:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1560:2:13"},"nodeType":"YulFunctionCall","src":"1560:57:13"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1552:4:13"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1519:4:13","type":""},{"name":"len","nodeType":"YulTypedName","src":"1525:3:13","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1533:4:13","type":""}],"src":"1457:166:13"},{"body":{"nodeType":"YulBlock","src":"1724:1256:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1734:24:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1754:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1748:5:13"},"nodeType":"YulFunctionCall","src":"1748:10:13"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1738:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1801:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1803:16:13"},"nodeType":"YulFunctionCall","src":"1803:18:13"},"nodeType":"YulExpressionStatement","src":"1803:18:13"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1773:6:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1789:2:13","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1793:1:13","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1785:3:13"},"nodeType":"YulFunctionCall","src":"1785:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"1797:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1781:3:13"},"nodeType":"YulFunctionCall","src":"1781:18:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1770:2:13"},"nodeType":"YulFunctionCall","src":"1770:30:13"},"nodeType":"YulIf","src":"1767:56:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1876:4:13"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1914:4:13"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1908:5:13"},"nodeType":"YulFunctionCall","src":"1908:11:13"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1882:25:13"},"nodeType":"YulFunctionCall","src":"1882:38:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"1922:6:13"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1832:43:13"},"nodeType":"YulFunctionCall","src":"1832:97:13"},"nodeType":"YulExpressionStatement","src":"1832:97:13"},{"nodeType":"YulVariableDeclaration","src":"1938:18:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1955:1:13","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1942:9:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1965:23:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1984:4:13","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1969:11:13","type":""}]},{"nodeType":"YulAssignment","src":"1997:24:13","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2010:11:13"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1997:9:13"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2067:656:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2081:35:13","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2100:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2112:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2108:3:13"},"nodeType":"YulFunctionCall","src":"2108:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2096:3:13"},"nodeType":"YulFunctionCall","src":"2096:20:13"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"2085:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2129:49:13","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2173:4:13"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"2143:29:13"},"nodeType":"YulFunctionCall","src":"2143:35:13"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"2133:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2191:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2200:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2195:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2278:172:13","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2303:6:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2326:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2317:3:13"},"nodeType":"YulFunctionCall","src":"2317:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2311:5:13"},"nodeType":"YulFunctionCall","src":"2311:26:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2296:6:13"},"nodeType":"YulFunctionCall","src":"2296:42:13"},"nodeType":"YulExpressionStatement","src":"2296:42:13"},{"nodeType":"YulAssignment","src":"2355:24:13","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2369:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2377:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2365:3:13"},"nodeType":"YulFunctionCall","src":"2365:14:13"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2355:6:13"}]},{"nodeType":"YulAssignment","src":"2396:40:13","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2413:9:13"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2424:11:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2409:3:13"},"nodeType":"YulFunctionCall","src":"2409:27:13"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2396:9:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2225:1:13"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"2228:7:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2222:2:13"},"nodeType":"YulFunctionCall","src":"2222:14:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2237:28:13","statements":[{"nodeType":"YulAssignment","src":"2239:24:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2248:1:13"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2251:11:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2244:3:13"},"nodeType":"YulFunctionCall","src":"2244:19:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2239:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"2218:3:13","statements":[]},"src":"2214:236:13"},{"body":{"nodeType":"YulBlock","src":"2498:166:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2516:43:13","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2543:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2548:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2539:3:13"},"nodeType":"YulFunctionCall","src":"2539:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2533:5:13"},"nodeType":"YulFunctionCall","src":"2533:26:13"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2520:9:13","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2583:6:13"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2595:9:13"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2622:1:13","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2625:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2618:3:13"},"nodeType":"YulFunctionCall","src":"2618:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"2634:3:13","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2614:3:13"},"nodeType":"YulFunctionCall","src":"2614:24:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2644:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2640:3:13"},"nodeType":"YulFunctionCall","src":"2640:6:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2610:3:13"},"nodeType":"YulFunctionCall","src":"2610:37:13"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2606:3:13"},"nodeType":"YulFunctionCall","src":"2606:42:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2591:3:13"},"nodeType":"YulFunctionCall","src":"2591:58:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2576:6:13"},"nodeType":"YulFunctionCall","src":"2576:74:13"},"nodeType":"YulExpressionStatement","src":"2576:74:13"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2469:7:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"2478:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2466:2:13"},"nodeType":"YulFunctionCall","src":"2466:19:13"},"nodeType":"YulIf","src":"2463:201:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2684:4:13"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2698:1:13","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2701:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2694:3:13"},"nodeType":"YulFunctionCall","src":"2694:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"2710:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:13"},"nodeType":"YulFunctionCall","src":"2690:22:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2677:6:13"},"nodeType":"YulFunctionCall","src":"2677:36:13"},"nodeType":"YulExpressionStatement","src":"2677:36:13"}]},"nodeType":"YulCase","src":"2060:663:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2065:1:13","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2740:234:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2754:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2767:1:13","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2758:5:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2803:67:13","statements":[{"nodeType":"YulAssignment","src":"2821:35:13","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2840:3:13"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2845:9:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:13"},"nodeType":"YulFunctionCall","src":"2836:19:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2830:5:13"},"nodeType":"YulFunctionCall","src":"2830:26:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2821:5:13"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2784:6:13"},"nodeType":"YulIf","src":"2781:89:13"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2890:4:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2949:5:13"},{"name":"newLen","nodeType":"YulIdentifier","src":"2956:6:13"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2896:52:13"},"nodeType":"YulFunctionCall","src":"2896:67:13"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2883:6:13"},"nodeType":"YulFunctionCall","src":"2883:81:13"},"nodeType":"YulExpressionStatement","src":"2883:81:13"}]},"nodeType":"YulCase","src":"2732:242:13","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2040:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2048:2:13","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2037:2:13"},"nodeType":"YulFunctionCall","src":"2037:14:13"},"nodeType":"YulSwitch","src":"2030:944:13"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1709:4:13","type":""},{"name":"src","nodeType":"YulTypedName","src":"1715:3:13","type":""}],"src":"1628:1352:13"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1DCB CODESIZE SUB DUP1 PUSH3 0x1DCB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x82 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH3 0x4E DUP2 PUSH3 0x70 JUMP JUMPDEST POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x4 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH3 0x218 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x7E DUP3 DUP3 PUSH3 0x14C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0xD2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xF3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x147 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x122 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x143 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x12E JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0xA7 JUMP JUMPDEST PUSH3 0x180 DUP2 PUSH3 0x179 DUP5 SLOAD PUSH3 0xBD JUMP JUMPDEST DUP5 PUSH3 0xF9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1B8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x19F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x143 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1E9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x1C8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x208 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1BA3 DUP1 PUSH3 0x228 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91A62523 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDF48981A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xDF48981A EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91A62523 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xD0A2F2C4 EQ PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4BA8AE81 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x4BA8AE81 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x80BB4EF4 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x8FCB4E5B EQ PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x441 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A7 PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x121 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x8D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F5 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1819 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x1866 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x1894 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x418 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x472 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x43B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x43B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x4A0 SWAP1 PUSH2 0x18FD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4CC SWAP1 PUSH2 0x18FD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x519 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x519 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4FC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x541 JUMPI POP PUSH2 0x541 DUP6 CALLER PUSH2 0x32E JUMP JUMPDEST PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0x5B1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xBDB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742073686172657320746F20626520736F6C640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0x634 CALLER ADDRESS PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x64 PUSH1 0x4 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH2 0x659 SWAP2 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH2 0x663 SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x693 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B3 SWAP1 DUP5 SWAP1 PUSH2 0x1986 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x73D JUMPI PUSH2 0x73D PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x766 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x7DE JUMPI PUSH2 0x7B1 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x78A JUMPI PUSH2 0x78A PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7A4 JUMPI PUSH2 0x7A4 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3A8 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7C3 JUMPI PUSH2 0x7C3 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x7D7 DUP2 PUSH2 0x19AF JUMP JUMPDEST SWAP1 POP PUSH2 0x76C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742073686172657320746F206265207472616E7366 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x657272656420746F20726563657069656E740000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0x888 CALLER DUP4 PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB4F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x8A7 SWAP1 DUP5 SWAP1 PUSH2 0x1986 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6B3 SWAP1 DUP5 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST PUSH2 0x8DF CALLER DUP4 DUP4 PUSH2 0xE39 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x93B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x91D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D206E756D626572206F66207368617265732074686174206361 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E20626520707572636861736564206973203130300000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F6620736861726573207075726368617365642063616E6E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74206265207A65726F206F72206C657373000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0xA3D ADDRESS PUSH1 0x0 PUSH2 0x3A8 JUMP JUMPDEST DUP2 LT PUSH2 0xAA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206172656E27742073756666696369656E74207368617265732074 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x1BC81899481C1D5C98DA185CD959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD ADDRESS SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xACE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xAEC ADDRESS CALLER PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB4F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0xB6B JUMPI POP PUSH2 0xB6B DUP6 CALLER PUSH2 0x32E JUMP JUMPDEST PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0x5B1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF19 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCC2 JUMPI PUSH2 0xCC2 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCE0 JUMPI PUSH2 0xCE0 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xDB0 SWAP1 DUP5 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xDC4 SWAP1 PUSH2 0x19AF JUMP JUMPDEST SWAP1 POP PUSH2 0xCA5 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xE1B SWAP3 SWAP2 SWAP1 PUSH2 0x19DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE31 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x10C4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xEAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xF7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xF89 DUP6 PUSH2 0x1272 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF96 DUP6 PUSH2 0x1272 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1059 SWAP1 DUP5 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10B9 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x12BD JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1108 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A09 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1143 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1140 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11F8 JUMPI PUSH2 0x114F PUSH2 0x1A84 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1188 JUMPI POP PUSH2 0x1163 PUSH2 0x1AA0 JUMP JUMPDEST DUP1 PUSH2 0x116E JUMPI POP PUSH2 0x118A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x12AC JUMPI PUSH2 0x12AC PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1301 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x133C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1339 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1348 JUMPI PUSH2 0x114F PUSH2 0x1A84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x13EF DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x13CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1430 DUP2 PUSH2 0x13FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1476 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x145A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1430 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1450 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x14E5 JUMPI PUSH2 0x14E5 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1506 JUMPI PUSH2 0x1506 PUSH2 0x14A9 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x152E DUP3 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153B DUP3 DUP3 PUSH2 0x14BF JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x155B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1576 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x155F JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15AC JUMPI PUSH2 0x15AC PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C3 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x14BF JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x15D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x160D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1618 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1628 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1651 DUP10 DUP4 DUP11 ADD PUSH2 0x1510 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1673 DUP10 DUP4 DUP11 ADD PUSH2 0x1510 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1696 DUP9 DUP3 DUP10 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x16EF DUP3 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16FC DUP3 DUP3 PUSH2 0x14BF JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x171C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1743 JUMPI DUP6 CALLDATALOAD PUSH2 0x1734 DUP2 PUSH2 0x13B9 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1721 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1766 DUP6 DUP3 DUP7 ADD PUSH2 0x1510 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17A0 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1784 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1430 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1430 DUP2 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x17F9 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x180E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x185A JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1835 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1884 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x180E DUP2 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x18AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x18B7 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x18C7 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1696 DUP9 DUP3 DUP10 ADD PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1911 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1931 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x43B JUMPI PUSH2 0x43B PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1981 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x43B JUMPI PUSH2 0x43B PUSH2 0x1937 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x19C1 JUMPI PUSH2 0x19C1 PUSH2 0x1937 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x43B JUMPI PUSH2 0x43B PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x19EE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1770 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1A00 DUP2 DUP6 PUSH2 0x1770 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1A35 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1770 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1A47 DUP2 DUP7 PUSH2 0x1770 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1A5B DUP2 DUP6 PUSH2 0x1450 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1430 DUP2 PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1A9D JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1AAE JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1ADE JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1AF6 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1B10 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1B1F PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x14BF JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B62 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1450 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 PUSH1 0xC5 0xFC 0x1F SWAP12 0xE 0xB2 PUSH31 0xE89AE9B7A82B89AC5EA9793FAFDCF8DF724B8067F24EE64736F6C63430008 EQ STOP CALLER ","sourceMap":"300:2994:12:-:0;;;620:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1107:62:1;;;;;;;;;-1:-1:-1;1107:62:1;;1149:13;1107:62;1149:7;:13::i;:::-;-1:-1:-1;695:8:12::1;:14:::0;;;;720:16:::1;:30:::0;761:11:::1;:42:::0;;-1:-1:-1;;;;;;761:42:12::1;791:10;761:42;::::0;;300:2994;;8149:86:1;8215:4;:13;8222:6;8215:4;:13;:::i;:::-;;8149:86;:::o;14:245:13:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;-1:-1:-1;;193:16:13;;249:2;234:18;;;228:25;193:16;;228:25;;-1:-1:-1;14:245:13:o;264:127::-;325:10;320:3;316:20;313:1;306:31;356:4;353:1;346:15;380:4;377:1;370:15;396:380;475:1;471:12;;;;518;;;539:61;;593:4;585:6;581:17;571:27;;539:61;646:2;638:6;635:14;615:18;612:38;609:161;;692:10;687:3;683:20;680:1;673:31;727:4;724:1;717:15;755:4;752:1;745:15;609:161;;396:380;;;:::o;907:545::-;1009:2;1004:3;1001:11;998:448;;;1045:1;1070:5;1066:2;1059:17;1115:4;1111:2;1101:19;1185:2;1173:10;1169:19;1166:1;1162:27;1156:4;1152:38;1221:4;1209:10;1206:20;1203:47;;;-1:-1:-1;1244:4:13;1203:47;1299:2;1294:3;1290:12;1287:1;1283:20;1277:4;1273:31;1263:41;;1354:82;1372:2;1365:5;1362:13;1354:82;;;1417:17;;;1398:1;1387:13;1354:82;;;1358:3;;;998:448;907:545;;;:::o;1628:1352::-;1748:10;;-1:-1:-1;;;;;1770:30:13;;1767:56;;;1803:18;;:::i;:::-;1832:97;1922:6;1882:38;1914:4;1908:11;1882:38;:::i;:::-;1876:4;1832:97;:::i;:::-;1984:4;;2048:2;2037:14;;2065:1;2060:663;;;;2767:1;2784:6;2781:89;;;-1:-1:-1;2836:19:13;;;2830:26;2781:89;-1:-1:-1;;1585:1:13;1581:11;;;1577:24;1573:29;1563:40;1609:1;1605:11;;;1560:57;2883:81;;2030:944;;2060:663;854:1;847:14;;;891:4;878:18;;-1:-1:-1;;2096:20:13;;;2214:236;2228:7;2225:1;2222:14;2214:236;;;2317:19;;;2311:26;2296:42;;2409:27;;;;2377:1;2365:14;;;;2244:19;;2214:236;;;2218:3;2478:6;2469:7;2466:19;2463:201;;;2539:19;;;2533:26;-1:-1:-1;;2622:1:13;2618:14;;;2634:3;2614:24;2610:37;2606:42;2591:58;2576:74;;2463:201;-1:-1:-1;;;;;2710:1:13;2694:14;;;2690:22;2677:36;;-1:-1:-1;1628:1352:13:o;:::-;300:2994:12;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1178":{"entryPoint":null,"id":1178,"parameterSlots":6,"returnSlots":0},"@_asSingletonArray_1334":{"entryPoint":4722,"id":1334,"parameterSlots":1,"returnSlots":1},"@_beforeTokenTransfer_1159":{"entryPoint":null,"id":1159,"parameterSlots":6,"returnSlots":0},"@_doSafeBatchTransferAcceptanceCheck_1306":{"entryPoint":4292,"id":1306,"parameterSlots":6,"returnSlots":0},"@_doSafeTransferAcceptanceCheck_1241":{"entryPoint":4797,"id":1241,"parameterSlots":6,"returnSlots":0},"@_msgSender_1855":{"entryPoint":null,"id":1855,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_657":{"entryPoint":3035,"id":657,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_522":{"entryPoint":3865,"id":522,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1140":{"entryPoint":3641,"id":1140,"parameterSlots":3,"returnSlots":0},"@balanceOfBatch_292":{"entryPoint":1724,"id":292,"parameterSlots":2,"returnSlots":1},"@balanceOf_228":{"entryPoint":936,"id":228,"parameterSlots":2,"returnSlots":1},"@getAllInvestors_2811":{"entryPoint":2275,"id":2811,"parameterSlots":0,"returnSlots":1},"@getInvestmentDetails_2802":{"entryPoint":null,"id":2802,"parameterSlots":0,"returnSlots":3},"@getInvestmentDetails_2824":{"entryPoint":null,"id":2824,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_327":{"entryPoint":null,"id":327,"parameterSlots":2,"returnSlots":1},"@isContract_1531":{"entryPoint":null,"id":1531,"parameterSlots":1,"returnSlots":1},"@onERC1155BatchReceived_3068":{"entryPoint":null,"id":3068,"parameterSlots":5,"returnSlots":1},"@onERC1155Received_3046":{"entryPoint":null,"id":3046,"parameterSlots":5,"returnSlots":1},"@purchaseShares_2907":{"entryPoint":2373,"id":2907,"parameterSlots":1,"returnSlots":0},"@safeBatchTransferFrom_405":{"entryPoint":1317,"id":405,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_365":{"entryPoint":2895,"id":365,"parameterSlots":5,"returnSlots":0},"@sellShares_3026":{"entryPoint":1464,"id":3026,"parameterSlots":1,"returnSlots":0},"@setApprovalForAll_309":{"entryPoint":2260,"id":309,"parameterSlots":2,"returnSlots":0},"@supportsInterface_188":{"entryPoint":1089,"id":188,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1969":{"entryPoint":null,"id":1969,"parameterSlots":1,"returnSlots":1},"@transferShares_2956":{"entryPoint":2022,"id":2956,"parameterSlots":2,"returnSlots":0},"@uri_200":{"entryPoint":1169,"id":200,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":5392,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":5505,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":6078,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6246,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":5621,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":6292,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6107,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5073,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5795,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5139,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":6759,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":6000,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":5200,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6665,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6954,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_payable_$dyn_memory_ptr__to_t_array$_t_address_payable_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6169,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6059,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6619,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5270,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1f6a885451413330205333b102dbb88440037fd5075a0982c9316f29ebbfc47b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3ae004e89fa8ffc258c665923ea1b97ab7a44ceac26f6e4dd4d520fe101daea5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b811e0bcaee688beca1c4c876410450d1a5dc16535505777aeaad61e55c5affa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_deec4200ccaf071840ccd9028f0968f70ac26a9f7072508882fe5e3ec5b74118__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f63f1041bf6cc97048e7a9290e8ee69e6ed6322826dfcdf5952d03a441818414__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_address_payable__to_t_uint256_t_uint256_t_address_payable__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":5356,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6600,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":6500,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6477,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6534,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6397,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5311,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":6575,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6455,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6553,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5289,"id":null,"parameterSlots":0,"returnSlots":0},"return_data_selector":{"entryPoint":6788,"id":null,"parameterSlots":0,"returnSlots":1},"try_decode_error_message":{"entryPoint":6816,"id":null,"parameterSlots":0,"returnSlots":1},"validator_revert_address":{"entryPoint":5049,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":5117,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:20589:13","statements":[{"nodeType":"YulBlock","src":"6:3:13","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:109:13","statements":[{"body":{"nodeType":"YulBlock","src":"146:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"155:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"158:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"148:6:13"},"nodeType":"YulFunctionCall","src":"148:12:13"},"nodeType":"YulExpressionStatement","src":"148:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"100:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:13"},"nodeType":"YulFunctionCall","src":"89:54:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:13"},"nodeType":"YulFunctionCall","src":"79:65:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:13"},"nodeType":"YulFunctionCall","src":"72:73:13"},"nodeType":"YulIf","src":"69:93:13"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:13","type":""}],"src":"14:154:13"},{"body":{"nodeType":"YulBlock","src":"260:228:13","statements":[{"body":{"nodeType":"YulBlock","src":"306:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"315:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"318:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"308:6:13"},"nodeType":"YulFunctionCall","src":"308:12:13"},"nodeType":"YulExpressionStatement","src":"308:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"281:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"290:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"277:3:13"},"nodeType":"YulFunctionCall","src":"277:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"302:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"273:3:13"},"nodeType":"YulFunctionCall","src":"273:32:13"},"nodeType":"YulIf","src":"270:52:13"},{"nodeType":"YulVariableDeclaration","src":"331:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"357:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"344:12:13"},"nodeType":"YulFunctionCall","src":"344:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"335:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"401:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"376:24:13"},"nodeType":"YulFunctionCall","src":"376:31:13"},"nodeType":"YulExpressionStatement","src":"376:31:13"},{"nodeType":"YulAssignment","src":"416:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"426:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"416:6:13"}]},{"nodeType":"YulAssignment","src":"440:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"467:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"463:3:13"},"nodeType":"YulFunctionCall","src":"463:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"450:12:13"},"nodeType":"YulFunctionCall","src":"450:32:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"440:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"218:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"229:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"241:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"249:6:13","type":""}],"src":"173:315:13"},{"body":{"nodeType":"YulBlock","src":"594:76:13","statements":[{"nodeType":"YulAssignment","src":"604:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"616:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"627:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"612:3:13"},"nodeType":"YulFunctionCall","src":"612:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"604:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"646:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"657:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"639:6:13"},"nodeType":"YulFunctionCall","src":"639:25:13"},"nodeType":"YulExpressionStatement","src":"639:25:13"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"563:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"574:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"585:4:13","type":""}],"src":"493:177:13"},{"body":{"nodeType":"YulBlock","src":"719:87:13","statements":[{"body":{"nodeType":"YulBlock","src":"784:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"793:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"796:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"786:6:13"},"nodeType":"YulFunctionCall","src":"786:12:13"},"nodeType":"YulExpressionStatement","src":"786:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"742:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"753:5:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"764:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"769:10:13","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"760:3:13"},"nodeType":"YulFunctionCall","src":"760:20:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"749:3:13"},"nodeType":"YulFunctionCall","src":"749:32:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"739:2:13"},"nodeType":"YulFunctionCall","src":"739:43:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"732:6:13"},"nodeType":"YulFunctionCall","src":"732:51:13"},"nodeType":"YulIf","src":"729:71:13"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"708:5:13","type":""}],"src":"675:131:13"},{"body":{"nodeType":"YulBlock","src":"880:176:13","statements":[{"body":{"nodeType":"YulBlock","src":"926:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"935:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"938:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"928:6:13"},"nodeType":"YulFunctionCall","src":"928:12:13"},"nodeType":"YulExpressionStatement","src":"928:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"901:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"910:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"897:3:13"},"nodeType":"YulFunctionCall","src":"897:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"922:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"893:3:13"},"nodeType":"YulFunctionCall","src":"893:32:13"},"nodeType":"YulIf","src":"890:52:13"},{"nodeType":"YulVariableDeclaration","src":"951:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"977:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"964:12:13"},"nodeType":"YulFunctionCall","src":"964:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"955:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1020:5:13"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"996:23:13"},"nodeType":"YulFunctionCall","src":"996:30:13"},"nodeType":"YulExpressionStatement","src":"996:30:13"},{"nodeType":"YulAssignment","src":"1035:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"1045:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1035:6:13"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"846:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"857:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"869:6:13","type":""}],"src":"811:245:13"},{"body":{"nodeType":"YulBlock","src":"1156:92:13","statements":[{"nodeType":"YulAssignment","src":"1166:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1178:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1189:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1174:3:13"},"nodeType":"YulFunctionCall","src":"1174:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1166:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1208:9:13"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1233:6:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1226:6:13"},"nodeType":"YulFunctionCall","src":"1226:14:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1219:6:13"},"nodeType":"YulFunctionCall","src":"1219:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1201:6:13"},"nodeType":"YulFunctionCall","src":"1201:41:13"},"nodeType":"YulExpressionStatement","src":"1201:41:13"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1125:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1136:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1147:4:13","type":""}],"src":"1061:187:13"},{"body":{"nodeType":"YulBlock","src":"1323:110:13","statements":[{"body":{"nodeType":"YulBlock","src":"1369:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1378:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1381:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1371:6:13"},"nodeType":"YulFunctionCall","src":"1371:12:13"},"nodeType":"YulExpressionStatement","src":"1371:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1344:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"1353:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1340:3:13"},"nodeType":"YulFunctionCall","src":"1340:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"1365:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1336:3:13"},"nodeType":"YulFunctionCall","src":"1336:32:13"},"nodeType":"YulIf","src":"1333:52:13"},{"nodeType":"YulAssignment","src":"1394:33:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1417:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1404:12:13"},"nodeType":"YulFunctionCall","src":"1404:23:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1394:6:13"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1289:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1300:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1312:6:13","type":""}],"src":"1253:180:13"},{"body":{"nodeType":"YulBlock","src":"1488:373:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1498:26:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1518:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1512:5:13"},"nodeType":"YulFunctionCall","src":"1512:12:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1502:6:13","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1540:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"1545:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1533:6:13"},"nodeType":"YulFunctionCall","src":"1533:19:13"},"nodeType":"YulExpressionStatement","src":"1533:19:13"},{"nodeType":"YulVariableDeclaration","src":"1561:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1570:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1565:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1632:110:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1646:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1656:4:13","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1650:2:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1688:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"1693:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1684:3:13"},"nodeType":"YulFunctionCall","src":"1684:11:13"},{"name":"_1","nodeType":"YulIdentifier","src":"1697:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1680:3:13"},"nodeType":"YulFunctionCall","src":"1680:20:13"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1716:5:13"},{"name":"i","nodeType":"YulIdentifier","src":"1723:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1712:3:13"},"nodeType":"YulFunctionCall","src":"1712:13:13"},{"name":"_1","nodeType":"YulIdentifier","src":"1727:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1708:3:13"},"nodeType":"YulFunctionCall","src":"1708:22:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1702:5:13"},"nodeType":"YulFunctionCall","src":"1702:29:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1673:6:13"},"nodeType":"YulFunctionCall","src":"1673:59:13"},"nodeType":"YulExpressionStatement","src":"1673:59:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1591:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"1594:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1588:2:13"},"nodeType":"YulFunctionCall","src":"1588:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1602:21:13","statements":[{"nodeType":"YulAssignment","src":"1604:17:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1613:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"1616:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1609:3:13"},"nodeType":"YulFunctionCall","src":"1609:12:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1604:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"1584:3:13","statements":[]},"src":"1580:162:13"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1766:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"1771:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1762:3:13"},"nodeType":"YulFunctionCall","src":"1762:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"1780:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1758:3:13"},"nodeType":"YulFunctionCall","src":"1758:27:13"},{"kind":"number","nodeType":"YulLiteral","src":"1787:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1751:6:13"},"nodeType":"YulFunctionCall","src":"1751:38:13"},"nodeType":"YulExpressionStatement","src":"1751:38:13"},{"nodeType":"YulAssignment","src":"1798:57:13","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1813:3:13"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1826:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1834:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1822:3:13"},"nodeType":"YulFunctionCall","src":"1822:15:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1843:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1839:3:13"},"nodeType":"YulFunctionCall","src":"1839:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1818:3:13"},"nodeType":"YulFunctionCall","src":"1818:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1809:3:13"},"nodeType":"YulFunctionCall","src":"1809:39:13"},{"kind":"number","nodeType":"YulLiteral","src":"1850:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1805:3:13"},"nodeType":"YulFunctionCall","src":"1805:50:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1798:3:13"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1465:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1472:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1480:3:13","type":""}],"src":"1438:423:13"},{"body":{"nodeType":"YulBlock","src":"1987:99:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2004:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2015:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1997:6:13"},"nodeType":"YulFunctionCall","src":"1997:21:13"},"nodeType":"YulExpressionStatement","src":"1997:21:13"},{"nodeType":"YulAssignment","src":"2027:53:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2053:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2065:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2076:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2061:3:13"},"nodeType":"YulFunctionCall","src":"2061:18:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2035:17:13"},"nodeType":"YulFunctionCall","src":"2035:45:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2027:4:13"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1956:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1967:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1978:4:13","type":""}],"src":"1866:220:13"},{"body":{"nodeType":"YulBlock","src":"2123:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2140:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2147:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2152:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2143:3:13"},"nodeType":"YulFunctionCall","src":"2143:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2133:6:13"},"nodeType":"YulFunctionCall","src":"2133:31:13"},"nodeType":"YulExpressionStatement","src":"2133:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2180:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2183:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2173:6:13"},"nodeType":"YulFunctionCall","src":"2173:15:13"},"nodeType":"YulExpressionStatement","src":"2173:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2204:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2207:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2197:6:13"},"nodeType":"YulFunctionCall","src":"2197:15:13"},"nodeType":"YulExpressionStatement","src":"2197:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2091:127:13"},{"body":{"nodeType":"YulBlock","src":"2270:202:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2280:58:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2302:6:13"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2318:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"2324:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:13"},"nodeType":"YulFunctionCall","src":"2314:13:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2333:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2329:3:13"},"nodeType":"YulFunctionCall","src":"2329:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2310:3:13"},"nodeType":"YulFunctionCall","src":"2310:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2298:3:13"},"nodeType":"YulFunctionCall","src":"2298:40:13"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2284:10:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2413:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2415:16:13"},"nodeType":"YulFunctionCall","src":"2415:18:13"},"nodeType":"YulExpressionStatement","src":"2415:18:13"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2356:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"2368:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2353:2:13"},"nodeType":"YulFunctionCall","src":"2353:34:13"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2392:10:13"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2404:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2389:2:13"},"nodeType":"YulFunctionCall","src":"2389:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2350:2:13"},"nodeType":"YulFunctionCall","src":"2350:62:13"},"nodeType":"YulIf","src":"2347:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2451:2:13","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2455:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2444:6:13"},"nodeType":"YulFunctionCall","src":"2444:22:13"},"nodeType":"YulExpressionStatement","src":"2444:22:13"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2252:6:13","type":""},{"name":"size","nodeType":"YulTypedName","src":"2260:4:13","type":""}],"src":"2223:249:13"},{"body":{"nodeType":"YulBlock","src":"2546:114:13","statements":[{"body":{"nodeType":"YulBlock","src":"2590:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2592:16:13"},"nodeType":"YulFunctionCall","src":"2592:18:13"},"nodeType":"YulExpressionStatement","src":"2592:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2562:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2570:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2559:2:13"},"nodeType":"YulFunctionCall","src":"2559:30:13"},"nodeType":"YulIf","src":"2556:56:13"},{"nodeType":"YulAssignment","src":"2621:33:13","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2637:1:13","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2640:6:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2633:3:13"},"nodeType":"YulFunctionCall","src":"2633:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"2649:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2629:3:13"},"nodeType":"YulFunctionCall","src":"2629:25:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2621:4:13"}]}]},"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2526:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2537:4:13","type":""}],"src":"2477:183:13"},{"body":{"nodeType":"YulBlock","src":"2729:660:13","statements":[{"body":{"nodeType":"YulBlock","src":"2778:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2787:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2790:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2780:6:13"},"nodeType":"YulFunctionCall","src":"2780:12:13"},"nodeType":"YulExpressionStatement","src":"2780:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2757:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2765:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2753:3:13"},"nodeType":"YulFunctionCall","src":"2753:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"2772:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2749:3:13"},"nodeType":"YulFunctionCall","src":"2749:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2742:6:13"},"nodeType":"YulFunctionCall","src":"2742:35:13"},"nodeType":"YulIf","src":"2739:55:13"},{"nodeType":"YulVariableDeclaration","src":"2803:30:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2826:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2813:12:13"},"nodeType":"YulFunctionCall","src":"2813:20:13"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2807:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2842:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2852:4:13","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2846:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2865:53:13","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2915:2:13"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"2875:39:13"},"nodeType":"YulFunctionCall","src":"2875:43:13"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2869:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2927:23:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2947:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2941:5:13"},"nodeType":"YulFunctionCall","src":"2941:9:13"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2931:6:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2979:6:13"},{"name":"_3","nodeType":"YulIdentifier","src":"2987:2:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2959:19:13"},"nodeType":"YulFunctionCall","src":"2959:31:13"},"nodeType":"YulExpressionStatement","src":"2959:31:13"},{"nodeType":"YulVariableDeclaration","src":"2999:17:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3010:6:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3003:3:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3032:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"3040:2:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3025:6:13"},"nodeType":"YulFunctionCall","src":"3025:18:13"},"nodeType":"YulExpressionStatement","src":"3025:18:13"},{"nodeType":"YulAssignment","src":"3052:22:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3063:6:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3071:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3059:3:13"},"nodeType":"YulFunctionCall","src":"3059:15:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3052:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"3083:46:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3105:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3117:1:13","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"3120:2:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3113:3:13"},"nodeType":"YulFunctionCall","src":"3113:10:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3101:3:13"},"nodeType":"YulFunctionCall","src":"3101:23:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3126:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3097:3:13"},"nodeType":"YulFunctionCall","src":"3097:32:13"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3087:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3157:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3166:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3169:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3159:6:13"},"nodeType":"YulFunctionCall","src":"3159:12:13"},"nodeType":"YulExpressionStatement","src":"3159:12:13"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3144:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"3152:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3141:2:13"},"nodeType":"YulFunctionCall","src":"3141:15:13"},"nodeType":"YulIf","src":"3138:35:13"},{"nodeType":"YulVariableDeclaration","src":"3182:26:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3197:6:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3205:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3193:3:13"},"nodeType":"YulFunctionCall","src":"3193:15:13"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3186:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3273:86:13","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3294:3:13"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3312:3:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3299:12:13"},"nodeType":"YulFunctionCall","src":"3299:17:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3287:6:13"},"nodeType":"YulFunctionCall","src":"3287:30:13"},"nodeType":"YulExpressionStatement","src":"3287:30:13"},{"nodeType":"YulAssignment","src":"3330:19:13","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3341:3:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3346:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3337:3:13"},"nodeType":"YulFunctionCall","src":"3337:12:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3330:3:13"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3228:3:13"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3233:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3225:2:13"},"nodeType":"YulFunctionCall","src":"3225:15:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3241:23:13","statements":[{"nodeType":"YulAssignment","src":"3243:19:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3254:3:13"},{"name":"_2","nodeType":"YulIdentifier","src":"3259:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3250:3:13"},"nodeType":"YulFunctionCall","src":"3250:12:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3243:3:13"}]}]},"pre":{"nodeType":"YulBlock","src":"3221:3:13","statements":[]},"src":"3217:142:13"},{"nodeType":"YulAssignment","src":"3368:15:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3377:6:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3368:5:13"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2703:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2711:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2719:5:13","type":""}],"src":"2665:724:13"},{"body":{"nodeType":"YulBlock","src":"3446:503:13","statements":[{"body":{"nodeType":"YulBlock","src":"3495:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3504:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3507:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3497:6:13"},"nodeType":"YulFunctionCall","src":"3497:12:13"},"nodeType":"YulExpressionStatement","src":"3497:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3474:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3482:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3470:3:13"},"nodeType":"YulFunctionCall","src":"3470:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"3489:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3466:3:13"},"nodeType":"YulFunctionCall","src":"3466:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3459:6:13"},"nodeType":"YulFunctionCall","src":"3459:35:13"},"nodeType":"YulIf","src":"3456:55:13"},{"nodeType":"YulVariableDeclaration","src":"3520:30:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3543:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3530:12:13"},"nodeType":"YulFunctionCall","src":"3530:20:13"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3524:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3589:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3591:16:13"},"nodeType":"YulFunctionCall","src":"3591:18:13"},"nodeType":"YulExpressionStatement","src":"3591:18:13"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3565:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"3569:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3562:2:13"},"nodeType":"YulFunctionCall","src":"3562:26:13"},"nodeType":"YulIf","src":"3559:52:13"},{"nodeType":"YulVariableDeclaration","src":"3620:23:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3640:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3634:5:13"},"nodeType":"YulFunctionCall","src":"3634:9:13"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3624:6:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3672:6:13"},{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3692:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"3696:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3688:3:13"},"nodeType":"YulFunctionCall","src":"3688:13:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3707:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3703:3:13"},"nodeType":"YulFunctionCall","src":"3703:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3684:3:13"},"nodeType":"YulFunctionCall","src":"3684:27:13"},{"kind":"number","nodeType":"YulLiteral","src":"3713:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3680:3:13"},"nodeType":"YulFunctionCall","src":"3680:38:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3652:19:13"},"nodeType":"YulFunctionCall","src":"3652:67:13"},"nodeType":"YulExpressionStatement","src":"3652:67:13"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3735:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"3743:2:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3728:6:13"},"nodeType":"YulFunctionCall","src":"3728:18:13"},"nodeType":"YulExpressionStatement","src":"3728:18:13"},{"body":{"nodeType":"YulBlock","src":"3794:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3803:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3806:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3796:6:13"},"nodeType":"YulFunctionCall","src":"3796:12:13"},"nodeType":"YulExpressionStatement","src":"3796:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3769:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"3777:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3765:3:13"},"nodeType":"YulFunctionCall","src":"3765:15:13"},{"kind":"number","nodeType":"YulLiteral","src":"3782:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3761:3:13"},"nodeType":"YulFunctionCall","src":"3761:26:13"},{"name":"end","nodeType":"YulIdentifier","src":"3789:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3758:2:13"},"nodeType":"YulFunctionCall","src":"3758:35:13"},"nodeType":"YulIf","src":"3755:55:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3836:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3844:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3832:3:13"},"nodeType":"YulFunctionCall","src":"3832:17:13"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3855:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3863:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3851:3:13"},"nodeType":"YulFunctionCall","src":"3851:17:13"},{"name":"_1","nodeType":"YulIdentifier","src":"3870:2:13"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3819:12:13"},"nodeType":"YulFunctionCall","src":"3819:54:13"},"nodeType":"YulExpressionStatement","src":"3819:54:13"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3897:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"3905:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3893:3:13"},"nodeType":"YulFunctionCall","src":"3893:15:13"},{"kind":"number","nodeType":"YulLiteral","src":"3910:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3889:3:13"},"nodeType":"YulFunctionCall","src":"3889:26:13"},{"kind":"number","nodeType":"YulLiteral","src":"3917:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3882:6:13"},"nodeType":"YulFunctionCall","src":"3882:37:13"},"nodeType":"YulExpressionStatement","src":"3882:37:13"},{"nodeType":"YulAssignment","src":"3928:15:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3937:6:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3928:5:13"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3420:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"3428:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3436:5:13","type":""}],"src":"3394:555:13"},{"body":{"nodeType":"YulBlock","src":"4151:874:13","statements":[{"body":{"nodeType":"YulBlock","src":"4198:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4207:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4210:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4200:6:13"},"nodeType":"YulFunctionCall","src":"4200:12:13"},"nodeType":"YulExpressionStatement","src":"4200:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4172:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"4181:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4168:3:13"},"nodeType":"YulFunctionCall","src":"4168:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"4193:3:13","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4164:3:13"},"nodeType":"YulFunctionCall","src":"4164:33:13"},"nodeType":"YulIf","src":"4161:53:13"},{"nodeType":"YulVariableDeclaration","src":"4223:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4249:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4236:12:13"},"nodeType":"YulFunctionCall","src":"4236:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4227:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4293:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4268:24:13"},"nodeType":"YulFunctionCall","src":"4268:31:13"},"nodeType":"YulExpressionStatement","src":"4268:31:13"},{"nodeType":"YulAssignment","src":"4308:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"4318:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4308:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"4332:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4364:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4375:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4360:3:13"},"nodeType":"YulFunctionCall","src":"4360:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4347:12:13"},"nodeType":"YulFunctionCall","src":"4347:32:13"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4336:7:13","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4413:7:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4388:24:13"},"nodeType":"YulFunctionCall","src":"4388:33:13"},"nodeType":"YulExpressionStatement","src":"4388:33:13"},{"nodeType":"YulAssignment","src":"4430:17:13","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4440:7:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4430:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"4456:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4487:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4498:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4483:3:13"},"nodeType":"YulFunctionCall","src":"4483:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4470:12:13"},"nodeType":"YulFunctionCall","src":"4470:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4460:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4511:28:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4521:18:13","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4515:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4566:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4575:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4578:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4568:6:13"},"nodeType":"YulFunctionCall","src":"4568:12:13"},"nodeType":"YulExpressionStatement","src":"4568:12:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4554:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"4562:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4551:2:13"},"nodeType":"YulFunctionCall","src":"4551:14:13"},"nodeType":"YulIf","src":"4548:34:13"},{"nodeType":"YulAssignment","src":"4591:71:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4634:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4645:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4630:3:13"},"nodeType":"YulFunctionCall","src":"4630:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4654:7:13"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4601:28:13"},"nodeType":"YulFunctionCall","src":"4601:61:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4591:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"4671:48:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4704:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:13"},"nodeType":"YulFunctionCall","src":"4700:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4687:12:13"},"nodeType":"YulFunctionCall","src":"4687:32:13"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4675:8:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4748:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4757:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4760:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4750:6:13"},"nodeType":"YulFunctionCall","src":"4750:12:13"},"nodeType":"YulExpressionStatement","src":"4750:12:13"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4734:8:13"},{"name":"_1","nodeType":"YulIdentifier","src":"4744:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4731:2:13"},"nodeType":"YulFunctionCall","src":"4731:16:13"},"nodeType":"YulIf","src":"4728:36:13"},{"nodeType":"YulAssignment","src":"4773:73:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4816:9:13"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4827:8:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4812:3:13"},"nodeType":"YulFunctionCall","src":"4812:24:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4838:7:13"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4783:28:13"},"nodeType":"YulFunctionCall","src":"4783:63:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4773:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"4855:49:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4888:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4899:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4884:3:13"},"nodeType":"YulFunctionCall","src":"4884:19:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4871:12:13"},"nodeType":"YulFunctionCall","src":"4871:33:13"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"4859:8:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4933:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4942:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4945:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4935:6:13"},"nodeType":"YulFunctionCall","src":"4935:12:13"},"nodeType":"YulExpressionStatement","src":"4935:12:13"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"4919:8:13"},{"name":"_1","nodeType":"YulIdentifier","src":"4929:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4916:2:13"},"nodeType":"YulFunctionCall","src":"4916:16:13"},"nodeType":"YulIf","src":"4913:36:13"},{"nodeType":"YulAssignment","src":"4958:61:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4989:9:13"},{"name":"offset_2","nodeType":"YulIdentifier","src":"5000:8:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4985:3:13"},"nodeType":"YulFunctionCall","src":"4985:24:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5011:7:13"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4968:16:13"},"nodeType":"YulFunctionCall","src":"4968:51:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4958:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4085:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4096:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4108:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4116:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4124:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4132:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4140:6:13","type":""}],"src":"3954:1071:13"},{"body":{"nodeType":"YulBlock","src":"5167:1140:13","statements":[{"body":{"nodeType":"YulBlock","src":"5213:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5222:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5225:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5215:6:13"},"nodeType":"YulFunctionCall","src":"5215:12:13"},"nodeType":"YulExpressionStatement","src":"5215:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5188:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"5197:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5184:3:13"},"nodeType":"YulFunctionCall","src":"5184:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"5209:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5180:3:13"},"nodeType":"YulFunctionCall","src":"5180:32:13"},"nodeType":"YulIf","src":"5177:52:13"},{"nodeType":"YulVariableDeclaration","src":"5238:37:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5265:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5252:12:13"},"nodeType":"YulFunctionCall","src":"5252:23:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5242:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5284:28:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5294:18:13","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5288:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5339:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5348:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5351:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5341:6:13"},"nodeType":"YulFunctionCall","src":"5341:12:13"},"nodeType":"YulExpressionStatement","src":"5341:12:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5327:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"5335:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5324:2:13"},"nodeType":"YulFunctionCall","src":"5324:14:13"},"nodeType":"YulIf","src":"5321:34:13"},{"nodeType":"YulVariableDeclaration","src":"5364:32:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5378:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5389:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5374:3:13"},"nodeType":"YulFunctionCall","src":"5374:22:13"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5368:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5444:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5453:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5456:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5446:6:13"},"nodeType":"YulFunctionCall","src":"5446:12:13"},"nodeType":"YulExpressionStatement","src":"5446:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5423:2:13"},{"kind":"number","nodeType":"YulLiteral","src":"5427:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5419:3:13"},"nodeType":"YulFunctionCall","src":"5419:13:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5434:7:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5415:3:13"},"nodeType":"YulFunctionCall","src":"5415:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5408:6:13"},"nodeType":"YulFunctionCall","src":"5408:35:13"},"nodeType":"YulIf","src":"5405:55:13"},{"nodeType":"YulVariableDeclaration","src":"5469:26:13","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5492:2:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5479:12:13"},"nodeType":"YulFunctionCall","src":"5479:16:13"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5473:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5504:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5514:4:13","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"5508:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5527:53:13","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5577:2:13"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"5537:39:13"},"nodeType":"YulFunctionCall","src":"5537:43:13"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"5531:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5589:23:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5609:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5603:5:13"},"nodeType":"YulFunctionCall","src":"5603:9:13"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5593:6:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5641:6:13"},{"name":"_5","nodeType":"YulIdentifier","src":"5649:2:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5621:19:13"},"nodeType":"YulFunctionCall","src":"5621:31:13"},"nodeType":"YulExpressionStatement","src":"5621:31:13"},{"nodeType":"YulVariableDeclaration","src":"5661:17:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"5672:6:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5665:3:13","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5694:6:13"},{"name":"_3","nodeType":"YulIdentifier","src":"5702:2:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5687:6:13"},"nodeType":"YulFunctionCall","src":"5687:18:13"},"nodeType":"YulExpressionStatement","src":"5687:18:13"},{"nodeType":"YulAssignment","src":"5714:22:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5725:6:13"},{"name":"_4","nodeType":"YulIdentifier","src":"5733:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5721:3:13"},"nodeType":"YulFunctionCall","src":"5721:15:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5714:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"5745:42:13","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5767:2:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5775:1:13","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"5778:2:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5771:3:13"},"nodeType":"YulFunctionCall","src":"5771:10:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5763:3:13"},"nodeType":"YulFunctionCall","src":"5763:19:13"},{"name":"_4","nodeType":"YulIdentifier","src":"5784:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5759:3:13"},"nodeType":"YulFunctionCall","src":"5759:28:13"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5749:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5819:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5828:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5831:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5821:6:13"},"nodeType":"YulFunctionCall","src":"5821:12:13"},"nodeType":"YulExpressionStatement","src":"5821:12:13"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5802:6:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5810:7:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5799:2:13"},"nodeType":"YulFunctionCall","src":"5799:19:13"},"nodeType":"YulIf","src":"5796:39:13"},{"nodeType":"YulVariableDeclaration","src":"5844:22:13","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5859:2:13"},{"name":"_4","nodeType":"YulIdentifier","src":"5863:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5855:3:13"},"nodeType":"YulFunctionCall","src":"5855:11:13"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5848:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5931:161:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5945:30:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5971:3:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5958:12:13"},"nodeType":"YulFunctionCall","src":"5958:17:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5949:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6013:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5988:24:13"},"nodeType":"YulFunctionCall","src":"5988:31:13"},"nodeType":"YulExpressionStatement","src":"5988:31:13"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6039:3:13"},{"name":"value","nodeType":"YulIdentifier","src":"6044:5:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6032:6:13"},"nodeType":"YulFunctionCall","src":"6032:18:13"},"nodeType":"YulExpressionStatement","src":"6032:18:13"},{"nodeType":"YulAssignment","src":"6063:19:13","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6074:3:13"},{"name":"_4","nodeType":"YulIdentifier","src":"6079:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6070:3:13"},"nodeType":"YulFunctionCall","src":"6070:12:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6063:3:13"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5886:3:13"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5891:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5883:2:13"},"nodeType":"YulFunctionCall","src":"5883:15:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5899:23:13","statements":[{"nodeType":"YulAssignment","src":"5901:19:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5912:3:13"},{"name":"_4","nodeType":"YulIdentifier","src":"5917:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5908:3:13"},"nodeType":"YulFunctionCall","src":"5908:12:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5901:3:13"}]}]},"pre":{"nodeType":"YulBlock","src":"5879:3:13","statements":[]},"src":"5875:217:13"},{"nodeType":"YulAssignment","src":"6101:16:13","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"6111:6:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6101:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"6126:48:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6159:9:13"},{"name":"_4","nodeType":"YulIdentifier","src":"6170:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6155:3:13"},"nodeType":"YulFunctionCall","src":"6155:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6142:12:13"},"nodeType":"YulFunctionCall","src":"6142:32:13"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"6130:8:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6203:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6212:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6215:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6205:6:13"},"nodeType":"YulFunctionCall","src":"6205:12:13"},"nodeType":"YulExpressionStatement","src":"6205:12:13"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6189:8:13"},{"name":"_1","nodeType":"YulIdentifier","src":"6199:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6186:2:13"},"nodeType":"YulFunctionCall","src":"6186:16:13"},"nodeType":"YulIf","src":"6183:36:13"},{"nodeType":"YulAssignment","src":"6228:73:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6271:9:13"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6282:8:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6267:3:13"},"nodeType":"YulFunctionCall","src":"6267:24:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6293:7:13"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"6238:28:13"},"nodeType":"YulFunctionCall","src":"6238:63:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6228:6:13"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5125:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5136:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5148:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5156:6:13","type":""}],"src":"5030:1277:13"},{"body":{"nodeType":"YulBlock","src":"6373:374:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6383:26:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6403:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6397:5:13"},"nodeType":"YulFunctionCall","src":"6397:12:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6387:6:13","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6425:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"6430:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6418:6:13"},"nodeType":"YulFunctionCall","src":"6418:19:13"},"nodeType":"YulExpressionStatement","src":"6418:19:13"},{"nodeType":"YulVariableDeclaration","src":"6446:14:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6456:4:13","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6450:2:13","type":""}]},{"nodeType":"YulAssignment","src":"6469:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6480:3:13"},{"name":"_1","nodeType":"YulIdentifier","src":"6485:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6476:3:13"},"nodeType":"YulFunctionCall","src":"6476:12:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6469:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"6497:28:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6515:5:13"},{"name":"_1","nodeType":"YulIdentifier","src":"6522:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6511:3:13"},"nodeType":"YulFunctionCall","src":"6511:14:13"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6501:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6534:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6543:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6538:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6602:120:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6623:3:13"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6634:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6628:5:13"},"nodeType":"YulFunctionCall","src":"6628:13:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6616:6:13"},"nodeType":"YulFunctionCall","src":"6616:26:13"},"nodeType":"YulExpressionStatement","src":"6616:26:13"},{"nodeType":"YulAssignment","src":"6655:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6666:3:13"},{"name":"_1","nodeType":"YulIdentifier","src":"6671:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6662:3:13"},"nodeType":"YulFunctionCall","src":"6662:12:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6655:3:13"}]},{"nodeType":"YulAssignment","src":"6687:25:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6701:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"6709:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6697:3:13"},"nodeType":"YulFunctionCall","src":"6697:15:13"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6687:6:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6564:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"6567:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6561:2:13"},"nodeType":"YulFunctionCall","src":"6561:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6575:18:13","statements":[{"nodeType":"YulAssignment","src":"6577:14:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6586:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"6589:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6582:3:13"},"nodeType":"YulFunctionCall","src":"6582:9:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6577:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"6557:3:13","statements":[]},"src":"6553:169:13"},{"nodeType":"YulAssignment","src":"6731:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"6738:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6731:3:13"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6350:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6357:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6365:3:13","type":""}],"src":"6312:435:13"},{"body":{"nodeType":"YulBlock","src":"6903:110:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6920:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6931:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6913:6:13"},"nodeType":"YulFunctionCall","src":"6913:21:13"},"nodeType":"YulExpressionStatement","src":"6913:21:13"},{"nodeType":"YulAssignment","src":"6943:64:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6980:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6992:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7003:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6988:3:13"},"nodeType":"YulFunctionCall","src":"6988:18:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"6951:28:13"},"nodeType":"YulFunctionCall","src":"6951:56:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6943:4:13"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6872:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6883:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6894:4:13","type":""}],"src":"6752:261:13"},{"body":{"nodeType":"YulBlock","src":"7191:211:13","statements":[{"nodeType":"YulAssignment","src":"7201:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7213:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7224:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7209:3:13"},"nodeType":"YulFunctionCall","src":"7209:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7201:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7243:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"7254:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7236:6:13"},"nodeType":"YulFunctionCall","src":"7236:25:13"},"nodeType":"YulExpressionStatement","src":"7236:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7281:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7292:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7277:3:13"},"nodeType":"YulFunctionCall","src":"7277:18:13"},{"name":"value1","nodeType":"YulIdentifier","src":"7297:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7270:6:13"},"nodeType":"YulFunctionCall","src":"7270:34:13"},"nodeType":"YulExpressionStatement","src":"7270:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7324:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7335:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7320:3:13"},"nodeType":"YulFunctionCall","src":"7320:18:13"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7344:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7352:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7340:3:13"},"nodeType":"YulFunctionCall","src":"7340:55:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7313:6:13"},"nodeType":"YulFunctionCall","src":"7313:83:13"},"nodeType":"YulExpressionStatement","src":"7313:83:13"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address_payable__to_t_uint256_t_uint256_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7144:9:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7155:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7163:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7171:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7182:4:13","type":""}],"src":"7018:384:13"},{"body":{"nodeType":"YulBlock","src":"7485:177:13","statements":[{"body":{"nodeType":"YulBlock","src":"7531:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7540:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7543:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7533:6:13"},"nodeType":"YulFunctionCall","src":"7533:12:13"},"nodeType":"YulExpressionStatement","src":"7533:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7506:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"7515:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7502:3:13"},"nodeType":"YulFunctionCall","src":"7502:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"7527:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7498:3:13"},"nodeType":"YulFunctionCall","src":"7498:32:13"},"nodeType":"YulIf","src":"7495:52:13"},{"nodeType":"YulVariableDeclaration","src":"7556:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7582:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7569:12:13"},"nodeType":"YulFunctionCall","src":"7569:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7560:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7626:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7601:24:13"},"nodeType":"YulFunctionCall","src":"7601:31:13"},"nodeType":"YulExpressionStatement","src":"7601:31:13"},{"nodeType":"YulAssignment","src":"7641:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"7651:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7641:6:13"}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7451:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7462:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7474:6:13","type":""}],"src":"7407:255:13"},{"body":{"nodeType":"YulBlock","src":"7751:332:13","statements":[{"body":{"nodeType":"YulBlock","src":"7797:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7806:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7809:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7799:6:13"},"nodeType":"YulFunctionCall","src":"7799:12:13"},"nodeType":"YulExpressionStatement","src":"7799:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7772:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"7781:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7768:3:13"},"nodeType":"YulFunctionCall","src":"7768:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"7793:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7764:3:13"},"nodeType":"YulFunctionCall","src":"7764:32:13"},"nodeType":"YulIf","src":"7761:52:13"},{"nodeType":"YulVariableDeclaration","src":"7822:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7848:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7835:12:13"},"nodeType":"YulFunctionCall","src":"7835:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7826:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7892:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7867:24:13"},"nodeType":"YulFunctionCall","src":"7867:31:13"},"nodeType":"YulExpressionStatement","src":"7867:31:13"},{"nodeType":"YulAssignment","src":"7907:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"7917:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7907:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"7931:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7963:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7974:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7959:3:13"},"nodeType":"YulFunctionCall","src":"7959:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7946:12:13"},"nodeType":"YulFunctionCall","src":"7946:32:13"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"7935:7:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"8035:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8044:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8047:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8037:6:13"},"nodeType":"YulFunctionCall","src":"8037:12:13"},"nodeType":"YulExpressionStatement","src":"8037:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"8000:7:13"},{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"8023:7:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8016:6:13"},"nodeType":"YulFunctionCall","src":"8016:15:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8009:6:13"},"nodeType":"YulFunctionCall","src":"8009:23:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7997:2:13"},"nodeType":"YulFunctionCall","src":"7997:36:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7990:6:13"},"nodeType":"YulFunctionCall","src":"7990:44:13"},"nodeType":"YulIf","src":"7987:64:13"},{"nodeType":"YulAssignment","src":"8060:17:13","value":{"name":"value_1","nodeType":"YulIdentifier","src":"8070:7:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8060:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7709:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7720:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7732:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7740:6:13","type":""}],"src":"7667:416:13"},{"body":{"nodeType":"YulBlock","src":"8187:103:13","statements":[{"nodeType":"YulAssignment","src":"8197:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8209:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8220:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8205:3:13"},"nodeType":"YulFunctionCall","src":"8205:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8197:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8239:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8254:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8266:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8271:10:13","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8262:3:13"},"nodeType":"YulFunctionCall","src":"8262:20:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8250:3:13"},"nodeType":"YulFunctionCall","src":"8250:33:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8232:6:13"},"nodeType":"YulFunctionCall","src":"8232:52:13"},"nodeType":"YulExpressionStatement","src":"8232:52:13"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8156:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8167:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8178:4:13","type":""}],"src":"8088:202:13"},{"body":{"nodeType":"YulBlock","src":"8462:530:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8472:12:13","value":{"kind":"number","nodeType":"YulLiteral","src":"8482:2:13","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8476:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8493:32:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8511:9:13"},{"name":"_1","nodeType":"YulIdentifier","src":"8522:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8507:3:13"},"nodeType":"YulFunctionCall","src":"8507:18:13"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"8497:6:13","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8541:9:13"},{"name":"_1","nodeType":"YulIdentifier","src":"8552:2:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8534:6:13"},"nodeType":"YulFunctionCall","src":"8534:21:13"},"nodeType":"YulExpressionStatement","src":"8534:21:13"},{"nodeType":"YulVariableDeclaration","src":"8564:17:13","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"8575:6:13"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"8568:3:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8590:27:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8610:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8604:5:13"},"nodeType":"YulFunctionCall","src":"8604:13:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8594:6:13","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"8633:6:13"},{"name":"length","nodeType":"YulIdentifier","src":"8641:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8626:6:13"},"nodeType":"YulFunctionCall","src":"8626:22:13"},"nodeType":"YulExpressionStatement","src":"8626:22:13"},{"nodeType":"YulAssignment","src":"8657:25:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8668:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8679:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8664:3:13"},"nodeType":"YulFunctionCall","src":"8664:18:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8657:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"8691:29:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8709:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"8717:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8705:3:13"},"nodeType":"YulFunctionCall","src":"8705:15:13"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"8695:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8729:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"8738:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8733:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"8797:169:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8818:3:13"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8833:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8827:5:13"},"nodeType":"YulFunctionCall","src":"8827:13:13"},{"kind":"number","nodeType":"YulLiteral","src":"8842:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8823:3:13"},"nodeType":"YulFunctionCall","src":"8823:62:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8811:6:13"},"nodeType":"YulFunctionCall","src":"8811:75:13"},"nodeType":"YulExpressionStatement","src":"8811:75:13"},{"nodeType":"YulAssignment","src":"8899:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8910:3:13"},{"name":"_1","nodeType":"YulIdentifier","src":"8915:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8906:3:13"},"nodeType":"YulFunctionCall","src":"8906:12:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8899:3:13"}]},{"nodeType":"YulAssignment","src":"8931:25:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8945:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"8953:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8941:3:13"},"nodeType":"YulFunctionCall","src":"8941:15:13"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8931:6:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8759:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"8762:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8756:2:13"},"nodeType":"YulFunctionCall","src":"8756:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8770:18:13","statements":[{"nodeType":"YulAssignment","src":"8772:14:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8781:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"8784:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8777:3:13"},"nodeType":"YulFunctionCall","src":"8777:9:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8772:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"8752:3:13","statements":[]},"src":"8748:218:13"},{"nodeType":"YulAssignment","src":"8975:11:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"8983:3:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8975:4:13"}]}]},"name":"abi_encode_tuple_t_array$_t_address_payable_$dyn_memory_ptr__to_t_array$_t_address_payable_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8431:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8442:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8453:4:13","type":""}],"src":"8295:697:13"},{"body":{"nodeType":"YulBlock","src":"9084:301:13","statements":[{"body":{"nodeType":"YulBlock","src":"9130:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9139:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9142:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9132:6:13"},"nodeType":"YulFunctionCall","src":"9132:12:13"},"nodeType":"YulExpressionStatement","src":"9132:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9105:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"9114:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9101:3:13"},"nodeType":"YulFunctionCall","src":"9101:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"9126:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9097:3:13"},"nodeType":"YulFunctionCall","src":"9097:32:13"},"nodeType":"YulIf","src":"9094:52:13"},{"nodeType":"YulVariableDeclaration","src":"9155:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9181:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9168:12:13"},"nodeType":"YulFunctionCall","src":"9168:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9159:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9225:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9200:24:13"},"nodeType":"YulFunctionCall","src":"9200:31:13"},"nodeType":"YulExpressionStatement","src":"9200:31:13"},{"nodeType":"YulAssignment","src":"9240:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"9250:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9240:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"9264:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9296:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9307:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9292:3:13"},"nodeType":"YulFunctionCall","src":"9292:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9279:12:13"},"nodeType":"YulFunctionCall","src":"9279:32:13"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"9268:7:13","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9345:7:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9320:24:13"},"nodeType":"YulFunctionCall","src":"9320:33:13"},"nodeType":"YulExpressionStatement","src":"9320:33:13"},{"nodeType":"YulAssignment","src":"9362:17:13","value":{"name":"value_1","nodeType":"YulIdentifier","src":"9372:7:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9362:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9042:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9053:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9065:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9073:6:13","type":""}],"src":"8997:388:13"},{"body":{"nodeType":"YulBlock","src":"9537:587:13","statements":[{"body":{"nodeType":"YulBlock","src":"9584:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9593:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9596:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9586:6:13"},"nodeType":"YulFunctionCall","src":"9586:12:13"},"nodeType":"YulExpressionStatement","src":"9586:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9558:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"9567:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9554:3:13"},"nodeType":"YulFunctionCall","src":"9554:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"9579:3:13","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9550:3:13"},"nodeType":"YulFunctionCall","src":"9550:33:13"},"nodeType":"YulIf","src":"9547:53:13"},{"nodeType":"YulVariableDeclaration","src":"9609:36:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9635:9:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9622:12:13"},"nodeType":"YulFunctionCall","src":"9622:23:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9613:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9679:5:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9654:24:13"},"nodeType":"YulFunctionCall","src":"9654:31:13"},"nodeType":"YulExpressionStatement","src":"9654:31:13"},{"nodeType":"YulAssignment","src":"9694:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"9704:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9694:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"9718:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9750:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9761:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9746:3:13"},"nodeType":"YulFunctionCall","src":"9746:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9733:12:13"},"nodeType":"YulFunctionCall","src":"9733:32:13"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"9722:7:13","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9799:7:13"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9774:24:13"},"nodeType":"YulFunctionCall","src":"9774:33:13"},"nodeType":"YulExpressionStatement","src":"9774:33:13"},{"nodeType":"YulAssignment","src":"9816:17:13","value":{"name":"value_1","nodeType":"YulIdentifier","src":"9826:7:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9816:6:13"}]},{"nodeType":"YulAssignment","src":"9842:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9869:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9880:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9865:3:13"},"nodeType":"YulFunctionCall","src":"9865:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9852:12:13"},"nodeType":"YulFunctionCall","src":"9852:32:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9842:6:13"}]},{"nodeType":"YulAssignment","src":"9893:42:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9920:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9931:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9916:3:13"},"nodeType":"YulFunctionCall","src":"9916:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9903:12:13"},"nodeType":"YulFunctionCall","src":"9903:32:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9893:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"9944:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9975:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9986:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9971:3:13"},"nodeType":"YulFunctionCall","src":"9971:19:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9958:12:13"},"nodeType":"YulFunctionCall","src":"9958:33:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9948:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"10034:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10043:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10046:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10036:6:13"},"nodeType":"YulFunctionCall","src":"10036:12:13"},"nodeType":"YulExpressionStatement","src":"10036:12:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10006:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10014:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10003:2:13"},"nodeType":"YulFunctionCall","src":"10003:30:13"},"nodeType":"YulIf","src":"10000:50:13"},{"nodeType":"YulAssignment","src":"10059:59:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10090:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"10101:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10086:3:13"},"nodeType":"YulFunctionCall","src":"10086:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10110:7:13"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"10069:16:13"},"nodeType":"YulFunctionCall","src":"10069:49:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10059:6:13"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9471:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9482:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9494:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9502:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9510:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9518:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9526:6:13","type":""}],"src":"9390:734:13"},{"body":{"nodeType":"YulBlock","src":"10303:232:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10320:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10331:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10313:6:13"},"nodeType":"YulFunctionCall","src":"10313:21:13"},"nodeType":"YulExpressionStatement","src":"10313:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10354:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10365:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10350:3:13"},"nodeType":"YulFunctionCall","src":"10350:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"10370:2:13","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10343:6:13"},"nodeType":"YulFunctionCall","src":"10343:30:13"},"nodeType":"YulExpressionStatement","src":"10343:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10393:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10404:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10389:3:13"},"nodeType":"YulFunctionCall","src":"10389:18:13"},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076","kind":"string","nodeType":"YulLiteral","src":"10409:34:13","type":"","value":"ERC1155: address zero is not a v"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10382:6:13"},"nodeType":"YulFunctionCall","src":"10382:62:13"},"nodeType":"YulExpressionStatement","src":"10382:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10464:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10475:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10460:3:13"},"nodeType":"YulFunctionCall","src":"10460:18:13"},{"hexValue":"616c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"10480:12:13","type":"","value":"alid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10453:6:13"},"nodeType":"YulFunctionCall","src":"10453:40:13"},"nodeType":"YulExpressionStatement","src":"10453:40:13"},{"nodeType":"YulAssignment","src":"10502:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10514:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10525:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10510:3:13"},"nodeType":"YulFunctionCall","src":"10510:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10502:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10280:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10294:4:13","type":""}],"src":"10129:406:13"},{"body":{"nodeType":"YulBlock","src":"10595:325:13","statements":[{"nodeType":"YulAssignment","src":"10605:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10619:1:13","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"10622:4:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10615:3:13"},"nodeType":"YulFunctionCall","src":"10615:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10605:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"10636:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10666:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"10672:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10662:3:13"},"nodeType":"YulFunctionCall","src":"10662:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10640:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"10713:31:13","statements":[{"nodeType":"YulAssignment","src":"10715:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10729:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10737:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10725:3:13"},"nodeType":"YulFunctionCall","src":"10725:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10715:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10693:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10686:6:13"},"nodeType":"YulFunctionCall","src":"10686:26:13"},"nodeType":"YulIf","src":"10683:61:13"},{"body":{"nodeType":"YulBlock","src":"10803:111:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10824:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10831:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10836:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10827:3:13"},"nodeType":"YulFunctionCall","src":"10827:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10817:6:13"},"nodeType":"YulFunctionCall","src":"10817:31:13"},"nodeType":"YulExpressionStatement","src":"10817:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10868:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10871:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10861:6:13"},"nodeType":"YulFunctionCall","src":"10861:15:13"},"nodeType":"YulExpressionStatement","src":"10861:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10896:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10899:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10889:6:13"},"nodeType":"YulFunctionCall","src":"10889:15:13"},"nodeType":"YulExpressionStatement","src":"10889:15:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10759:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10782:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10790:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10779:2:13"},"nodeType":"YulFunctionCall","src":"10779:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10756:2:13"},"nodeType":"YulFunctionCall","src":"10756:38:13"},"nodeType":"YulIf","src":"10753:161:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10575:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10584:6:13","type":""}],"src":"10540:380:13"},{"body":{"nodeType":"YulBlock","src":"11099:236:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11116:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11127:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11109:6:13"},"nodeType":"YulFunctionCall","src":"11109:21:13"},"nodeType":"YulExpressionStatement","src":"11109:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11150:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11161:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11146:3:13"},"nodeType":"YulFunctionCall","src":"11146:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"11166:2:13","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11139:6:13"},"nodeType":"YulFunctionCall","src":"11139:30:13"},"nodeType":"YulExpressionStatement","src":"11139:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11189:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11200:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11185:3:13"},"nodeType":"YulFunctionCall","src":"11185:18:13"},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e","kind":"string","nodeType":"YulLiteral","src":"11205:34:13","type":"","value":"ERC1155: caller is not token own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11178:6:13"},"nodeType":"YulFunctionCall","src":"11178:62:13"},"nodeType":"YulExpressionStatement","src":"11178:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11260:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11271:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11256:3:13"},"nodeType":"YulFunctionCall","src":"11256:18:13"},{"hexValue":"6572206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"11276:16:13","type":"","value":"er or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11249:6:13"},"nodeType":"YulFunctionCall","src":"11249:44:13"},"nodeType":"YulExpressionStatement","src":"11249:44:13"},{"nodeType":"YulAssignment","src":"11302:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11314:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11325:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11310:3:13"},"nodeType":"YulFunctionCall","src":"11310:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11302:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11076:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11090:4:13","type":""}],"src":"10925:410:13"},{"body":{"nodeType":"YulBlock","src":"11514:180:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11531:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11542:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11524:6:13"},"nodeType":"YulFunctionCall","src":"11524:21:13"},"nodeType":"YulExpressionStatement","src":"11524:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11565:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11576:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11561:3:13"},"nodeType":"YulFunctionCall","src":"11561:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"11581:2:13","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11554:6:13"},"nodeType":"YulFunctionCall","src":"11554:30:13"},"nodeType":"YulExpressionStatement","src":"11554:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11604:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11615:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11600:3:13"},"nodeType":"YulFunctionCall","src":"11600:18:13"},{"hexValue":"496e73756666696369656e742073686172657320746f20626520736f6c64","kind":"string","nodeType":"YulLiteral","src":"11620:32:13","type":"","value":"Insufficient shares to be sold"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11593:6:13"},"nodeType":"YulFunctionCall","src":"11593:60:13"},"nodeType":"YulExpressionStatement","src":"11593:60:13"},{"nodeType":"YulAssignment","src":"11662:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11674:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11685:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11670:3:13"},"nodeType":"YulFunctionCall","src":"11670:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11662:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_deec4200ccaf071840ccd9028f0968f70ac26a9f7072508882fe5e3ec5b74118__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11491:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11505:4:13","type":""}],"src":"11340:354:13"},{"body":{"nodeType":"YulBlock","src":"11731:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11748:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11755:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11760:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11751:3:13"},"nodeType":"YulFunctionCall","src":"11751:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11741:6:13"},"nodeType":"YulFunctionCall","src":"11741:31:13"},"nodeType":"YulExpressionStatement","src":"11741:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11788:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11791:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11781:6:13"},"nodeType":"YulFunctionCall","src":"11781:15:13"},"nodeType":"YulExpressionStatement","src":"11781:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11812:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11815:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11805:6:13"},"nodeType":"YulFunctionCall","src":"11805:15:13"},"nodeType":"YulExpressionStatement","src":"11805:15:13"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11699:127:13"},{"body":{"nodeType":"YulBlock","src":"11883:116:13","statements":[{"nodeType":"YulAssignment","src":"11893:20:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11908:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"11911:1:13"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11904:3:13"},"nodeType":"YulFunctionCall","src":"11904:9:13"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"11893:7:13"}]},{"body":{"nodeType":"YulBlock","src":"11971:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11973:16:13"},"nodeType":"YulFunctionCall","src":"11973:18:13"},"nodeType":"YulExpressionStatement","src":"11973:18:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11942:1:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11935:6:13"},"nodeType":"YulFunctionCall","src":"11935:9:13"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11949:1:13"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"11956:7:13"},{"name":"x","nodeType":"YulIdentifier","src":"11965:1:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11952:3:13"},"nodeType":"YulFunctionCall","src":"11952:15:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11946:2:13"},"nodeType":"YulFunctionCall","src":"11946:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11932:2:13"},"nodeType":"YulFunctionCall","src":"11932:37:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11925:6:13"},"nodeType":"YulFunctionCall","src":"11925:45:13"},"nodeType":"YulIf","src":"11922:71:13"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11862:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"11865:1:13","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"11871:7:13","type":""}],"src":"11831:168:13"},{"body":{"nodeType":"YulBlock","src":"12050:171:13","statements":[{"body":{"nodeType":"YulBlock","src":"12081:111:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12102:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12109:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12114:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12105:3:13"},"nodeType":"YulFunctionCall","src":"12105:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12095:6:13"},"nodeType":"YulFunctionCall","src":"12095:31:13"},"nodeType":"YulExpressionStatement","src":"12095:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12146:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12149:4:13","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12139:6:13"},"nodeType":"YulFunctionCall","src":"12139:15:13"},"nodeType":"YulExpressionStatement","src":"12139:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12174:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12177:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12167:6:13"},"nodeType":"YulFunctionCall","src":"12167:15:13"},"nodeType":"YulExpressionStatement","src":"12167:15:13"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12070:1:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12063:6:13"},"nodeType":"YulFunctionCall","src":"12063:9:13"},"nodeType":"YulIf","src":"12060:132:13"},{"nodeType":"YulAssignment","src":"12201:14:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12210:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"12213:1:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12206:3:13"},"nodeType":"YulFunctionCall","src":"12206:9:13"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"12201:1:13"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12035:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"12038:1:13","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"12044:1:13","type":""}],"src":"12004:217:13"},{"body":{"nodeType":"YulBlock","src":"12275:79:13","statements":[{"nodeType":"YulAssignment","src":"12285:17:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12297:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"12300:1:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12293:3:13"},"nodeType":"YulFunctionCall","src":"12293:9:13"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"12285:4:13"}]},{"body":{"nodeType":"YulBlock","src":"12326:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12328:16:13"},"nodeType":"YulFunctionCall","src":"12328:18:13"},"nodeType":"YulExpressionStatement","src":"12328:18:13"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"12317:4:13"},{"name":"x","nodeType":"YulIdentifier","src":"12323:1:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12314:2:13"},"nodeType":"YulFunctionCall","src":"12314:11:13"},"nodeType":"YulIf","src":"12311:37:13"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12257:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"12260:1:13","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"12266:4:13","type":""}],"src":"12226:128:13"},{"body":{"nodeType":"YulBlock","src":"12533:231:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12550:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12561:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12543:6:13"},"nodeType":"YulFunctionCall","src":"12543:21:13"},"nodeType":"YulExpressionStatement","src":"12543:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12584:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12595:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12580:3:13"},"nodeType":"YulFunctionCall","src":"12580:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"12600:2:13","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12573:6:13"},"nodeType":"YulFunctionCall","src":"12573:30:13"},"nodeType":"YulExpressionStatement","src":"12573:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12623:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12634:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12619:3:13"},"nodeType":"YulFunctionCall","src":"12619:18:13"},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468","kind":"string","nodeType":"YulLiteral","src":"12639:34:13","type":"","value":"ERC1155: accounts and ids length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12612:6:13"},"nodeType":"YulFunctionCall","src":"12612:62:13"},"nodeType":"YulExpressionStatement","src":"12612:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12694:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12705:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12690:3:13"},"nodeType":"YulFunctionCall","src":"12690:18:13"},{"hexValue":"206d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"12710:11:13","type":"","value":" mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12683:6:13"},"nodeType":"YulFunctionCall","src":"12683:39:13"},"nodeType":"YulExpressionStatement","src":"12683:39:13"},{"nodeType":"YulAssignment","src":"12731:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12743:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12754:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12739:3:13"},"nodeType":"YulFunctionCall","src":"12739:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12731:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12510:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12524:4:13","type":""}],"src":"12359:405:13"},{"body":{"nodeType":"YulBlock","src":"12801:95:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12818:1:13","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12825:3:13","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12830:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12821:3:13"},"nodeType":"YulFunctionCall","src":"12821:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12811:6:13"},"nodeType":"YulFunctionCall","src":"12811:31:13"},"nodeType":"YulExpressionStatement","src":"12811:31:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12858:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12861:4:13","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12851:6:13"},"nodeType":"YulFunctionCall","src":"12851:15:13"},"nodeType":"YulExpressionStatement","src":"12851:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12882:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12885:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12875:6:13"},"nodeType":"YulFunctionCall","src":"12875:15:13"},"nodeType":"YulExpressionStatement","src":"12875:15:13"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"12769:127:13"},{"body":{"nodeType":"YulBlock","src":"12948:88:13","statements":[{"body":{"nodeType":"YulBlock","src":"12979:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12981:16:13"},"nodeType":"YulFunctionCall","src":"12981:18:13"},"nodeType":"YulExpressionStatement","src":"12981:18:13"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12964:5:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12975:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12971:3:13"},"nodeType":"YulFunctionCall","src":"12971:6:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12961:2:13"},"nodeType":"YulFunctionCall","src":"12961:17:13"},"nodeType":"YulIf","src":"12958:43:13"},{"nodeType":"YulAssignment","src":"13010:20:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13021:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"13028:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13017:3:13"},"nodeType":"YulFunctionCall","src":"13017:13:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13010:3:13"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12930:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12940:3:13","type":""}],"src":"12901:135:13"},{"body":{"nodeType":"YulBlock","src":"13215:240:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13232:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13243:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13225:6:13"},"nodeType":"YulFunctionCall","src":"13225:21:13"},"nodeType":"YulExpressionStatement","src":"13225:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13266:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13277:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13262:3:13"},"nodeType":"YulFunctionCall","src":"13262:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"13282:2:13","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13255:6:13"},"nodeType":"YulFunctionCall","src":"13255:30:13"},"nodeType":"YulExpressionStatement","src":"13255:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13305:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13316:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13301:3:13"},"nodeType":"YulFunctionCall","src":"13301:18:13"},{"hexValue":"496e73756666696369656e742073686172657320746f206265207472616e7366","kind":"string","nodeType":"YulLiteral","src":"13321:34:13","type":"","value":"Insufficient shares to be transf"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13294:6:13"},"nodeType":"YulFunctionCall","src":"13294:62:13"},"nodeType":"YulExpressionStatement","src":"13294:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13376:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13387:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13372:3:13"},"nodeType":"YulFunctionCall","src":"13372:18:13"},{"hexValue":"657272656420746f20726563657069656e74","kind":"string","nodeType":"YulLiteral","src":"13392:20:13","type":"","value":"erred to recepient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13365:6:13"},"nodeType":"YulFunctionCall","src":"13365:48:13"},"nodeType":"YulExpressionStatement","src":"13365:48:13"},{"nodeType":"YulAssignment","src":"13422:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13434:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13445:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13430:3:13"},"nodeType":"YulFunctionCall","src":"13430:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13422:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_f63f1041bf6cc97048e7a9290e8ee69e6ed6322826dfcdf5952d03a441818414__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13192:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13206:4:13","type":""}],"src":"13041:414:13"},{"body":{"nodeType":"YulBlock","src":"13508:77:13","statements":[{"nodeType":"YulAssignment","src":"13518:16:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13529:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"13532:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13525:3:13"},"nodeType":"YulFunctionCall","src":"13525:9:13"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"13518:3:13"}]},{"body":{"nodeType":"YulBlock","src":"13557:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13559:16:13"},"nodeType":"YulFunctionCall","src":"13559:18:13"},"nodeType":"YulExpressionStatement","src":"13559:18:13"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13549:1:13"},{"name":"sum","nodeType":"YulIdentifier","src":"13552:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13546:2:13"},"nodeType":"YulFunctionCall","src":"13546:10:13"},"nodeType":"YulIf","src":"13543:36:13"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13491:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"13494:1:13","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"13500:3:13","type":""}],"src":"13460:125:13"},{"body":{"nodeType":"YulBlock","src":"13764:243:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13781:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13792:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13774:6:13"},"nodeType":"YulFunctionCall","src":"13774:21:13"},"nodeType":"YulExpressionStatement","src":"13774:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13815:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13826:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13811:3:13"},"nodeType":"YulFunctionCall","src":"13811:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"13831:2:13","type":"","value":"53"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13804:6:13"},"nodeType":"YulFunctionCall","src":"13804:30:13"},"nodeType":"YulExpressionStatement","src":"13804:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13854:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13865:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13850:3:13"},"nodeType":"YulFunctionCall","src":"13850:18:13"},{"hexValue":"4d6178696d756d206e756d626572206f66207368617265732074686174206361","kind":"string","nodeType":"YulLiteral","src":"13870:34:13","type":"","value":"Maximum number of shares that ca"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13843:6:13"},"nodeType":"YulFunctionCall","src":"13843:62:13"},"nodeType":"YulExpressionStatement","src":"13843:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13925:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13936:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13921:3:13"},"nodeType":"YulFunctionCall","src":"13921:18:13"},{"hexValue":"6e2062652070757263686173656420697320313030","kind":"string","nodeType":"YulLiteral","src":"13941:23:13","type":"","value":"n be purchased is 100"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13914:6:13"},"nodeType":"YulFunctionCall","src":"13914:51:13"},"nodeType":"YulExpressionStatement","src":"13914:51:13"},{"nodeType":"YulAssignment","src":"13974:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13986:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13997:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13982:3:13"},"nodeType":"YulFunctionCall","src":"13982:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13974:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_b811e0bcaee688beca1c4c876410450d1a5dc16535505777aeaad61e55c5affa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13741:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13755:4:13","type":""}],"src":"13590:417:13"},{"body":{"nodeType":"YulBlock","src":"14186:239:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14203:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14214:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14196:6:13"},"nodeType":"YulFunctionCall","src":"14196:21:13"},"nodeType":"YulExpressionStatement","src":"14196:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14237:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14248:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14233:3:13"},"nodeType":"YulFunctionCall","src":"14233:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"14253:2:13","type":"","value":"49"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14226:6:13"},"nodeType":"YulFunctionCall","src":"14226:30:13"},"nodeType":"YulExpressionStatement","src":"14226:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14276:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14287:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14272:3:13"},"nodeType":"YulFunctionCall","src":"14272:18:13"},{"hexValue":"4e756d626572206f6620736861726573207075726368617365642063616e6e6f","kind":"string","nodeType":"YulLiteral","src":"14292:34:13","type":"","value":"Number of shares purchased canno"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14265:6:13"},"nodeType":"YulFunctionCall","src":"14265:62:13"},"nodeType":"YulExpressionStatement","src":"14265:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14347:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14358:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14343:3:13"},"nodeType":"YulFunctionCall","src":"14343:18:13"},{"hexValue":"74206265207a65726f206f72206c657373","kind":"string","nodeType":"YulLiteral","src":"14363:19:13","type":"","value":"t be zero or less"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14336:6:13"},"nodeType":"YulFunctionCall","src":"14336:47:13"},"nodeType":"YulExpressionStatement","src":"14336:47:13"},{"nodeType":"YulAssignment","src":"14392:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14404:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14415:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14400:3:13"},"nodeType":"YulFunctionCall","src":"14400:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14392:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_1f6a885451413330205333b102dbb88440037fd5075a0982c9316f29ebbfc47b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14163:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14177:4:13","type":""}],"src":"14012:413:13"},{"body":{"nodeType":"YulBlock","src":"14604:236:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14621:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14632:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14614:6:13"},"nodeType":"YulFunctionCall","src":"14614:21:13"},"nodeType":"YulExpressionStatement","src":"14614:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14655:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14666:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14651:3:13"},"nodeType":"YulFunctionCall","src":"14651:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"14671:2:13","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14644:6:13"},"nodeType":"YulFunctionCall","src":"14644:30:13"},"nodeType":"YulExpressionStatement","src":"14644:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14694:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14705:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14690:3:13"},"nodeType":"YulFunctionCall","src":"14690:18:13"},{"hexValue":"5468657265206172656e27742073756666696369656e74207368617265732074","kind":"string","nodeType":"YulLiteral","src":"14710:34:13","type":"","value":"There aren't sufficient shares t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14683:6:13"},"nodeType":"YulFunctionCall","src":"14683:62:13"},"nodeType":"YulExpressionStatement","src":"14683:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14765:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14776:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14761:3:13"},"nodeType":"YulFunctionCall","src":"14761:18:13"},{"hexValue":"6f20626520707572636861736564","kind":"string","nodeType":"YulLiteral","src":"14781:16:13","type":"","value":"o be purchased"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14754:6:13"},"nodeType":"YulFunctionCall","src":"14754:44:13"},"nodeType":"YulExpressionStatement","src":"14754:44:13"},{"nodeType":"YulAssignment","src":"14807:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14819:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14830:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14815:3:13"},"nodeType":"YulFunctionCall","src":"14815:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14807:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_3ae004e89fa8ffc258c665923ea1b97ab7a44ceac26f6e4dd4d520fe101daea5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14581:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14595:4:13","type":""}],"src":"14430:410:13"},{"body":{"nodeType":"YulBlock","src":"15019:230:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15036:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15047:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15029:6:13"},"nodeType":"YulFunctionCall","src":"15029:21:13"},"nodeType":"YulExpressionStatement","src":"15029:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15070:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15081:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15066:3:13"},"nodeType":"YulFunctionCall","src":"15066:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"15086:2:13","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15059:6:13"},"nodeType":"YulFunctionCall","src":"15059:30:13"},"nodeType":"YulExpressionStatement","src":"15059:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15109:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15120:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15105:3:13"},"nodeType":"YulFunctionCall","src":"15105:18:13"},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e67746820","kind":"string","nodeType":"YulLiteral","src":"15125:34:13","type":"","value":"ERC1155: ids and amounts length "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15098:6:13"},"nodeType":"YulFunctionCall","src":"15098:62:13"},"nodeType":"YulExpressionStatement","src":"15098:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15180:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15191:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15176:3:13"},"nodeType":"YulFunctionCall","src":"15176:18:13"},{"hexValue":"6d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"15196:10:13","type":"","value":"mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15169:6:13"},"nodeType":"YulFunctionCall","src":"15169:38:13"},"nodeType":"YulExpressionStatement","src":"15169:38:13"},{"nodeType":"YulAssignment","src":"15216:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15228:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15239:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15224:3:13"},"nodeType":"YulFunctionCall","src":"15224:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15216:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14996:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15010:4:13","type":""}],"src":"14845:404:13"},{"body":{"nodeType":"YulBlock","src":"15428:227:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15445:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15456:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15438:6:13"},"nodeType":"YulFunctionCall","src":"15438:21:13"},"nodeType":"YulExpressionStatement","src":"15438:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15479:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15490:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15475:3:13"},"nodeType":"YulFunctionCall","src":"15475:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"15495:2:13","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15468:6:13"},"nodeType":"YulFunctionCall","src":"15468:30:13"},"nodeType":"YulExpressionStatement","src":"15468:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15518:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15529:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15514:3:13"},"nodeType":"YulFunctionCall","src":"15514:18:13"},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"15534:34:13","type":"","value":"ERC1155: transfer to the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15507:6:13"},"nodeType":"YulFunctionCall","src":"15507:62:13"},"nodeType":"YulExpressionStatement","src":"15507:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15589:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15600:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15585:3:13"},"nodeType":"YulFunctionCall","src":"15585:18:13"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"15605:7:13","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15578:6:13"},"nodeType":"YulFunctionCall","src":"15578:35:13"},"nodeType":"YulExpressionStatement","src":"15578:35:13"},{"nodeType":"YulAssignment","src":"15622:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15634:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15645:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15630:3:13"},"nodeType":"YulFunctionCall","src":"15630:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15622:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15405:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15419:4:13","type":""}],"src":"15254:401:13"},{"body":{"nodeType":"YulBlock","src":"15834:232:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15851:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15862:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15844:6:13"},"nodeType":"YulFunctionCall","src":"15844:21:13"},"nodeType":"YulExpressionStatement","src":"15844:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15885:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15896:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15881:3:13"},"nodeType":"YulFunctionCall","src":"15881:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"15901:2:13","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15874:6:13"},"nodeType":"YulFunctionCall","src":"15874:30:13"},"nodeType":"YulExpressionStatement","src":"15874:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15924:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15935:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15920:3:13"},"nodeType":"YulFunctionCall","src":"15920:18:13"},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"15940:34:13","type":"","value":"ERC1155: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15913:6:13"},"nodeType":"YulFunctionCall","src":"15913:62:13"},"nodeType":"YulExpressionStatement","src":"15913:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15995:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16006:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15991:3:13"},"nodeType":"YulFunctionCall","src":"15991:18:13"},{"hexValue":"72207472616e73666572","kind":"string","nodeType":"YulLiteral","src":"16011:12:13","type":"","value":"r transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15984:6:13"},"nodeType":"YulFunctionCall","src":"15984:40:13"},"nodeType":"YulExpressionStatement","src":"15984:40:13"},{"nodeType":"YulAssignment","src":"16033:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16045:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16056:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16041:3:13"},"nodeType":"YulFunctionCall","src":"16041:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16033:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15811:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15825:4:13","type":""}],"src":"15660:406:13"},{"body":{"nodeType":"YulBlock","src":"16300:236:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16317:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16328:2:13","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16310:6:13"},"nodeType":"YulFunctionCall","src":"16310:21:13"},"nodeType":"YulExpressionStatement","src":"16310:21:13"},{"nodeType":"YulVariableDeclaration","src":"16340:70:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16383:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16395:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16406:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16391:3:13"},"nodeType":"YulFunctionCall","src":"16391:18:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"16354:28:13"},"nodeType":"YulFunctionCall","src":"16354:56:13"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"16344:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16430:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16441:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16426:3:13"},"nodeType":"YulFunctionCall","src":"16426:18:13"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"16450:6:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"16458:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16446:3:13"},"nodeType":"YulFunctionCall","src":"16446:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16419:6:13"},"nodeType":"YulFunctionCall","src":"16419:50:13"},"nodeType":"YulExpressionStatement","src":"16419:50:13"},{"nodeType":"YulAssignment","src":"16478:52:13","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16515:6:13"},{"name":"tail_1","nodeType":"YulIdentifier","src":"16523:6:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"16486:28:13"},"nodeType":"YulFunctionCall","src":"16486:44:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16478:4:13"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16261:9:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16272:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16280:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16291:4:13","type":""}],"src":"16071:465:13"},{"body":{"nodeType":"YulBlock","src":"16715:231:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16732:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16743:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16725:6:13"},"nodeType":"YulFunctionCall","src":"16725:21:13"},"nodeType":"YulExpressionStatement","src":"16725:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16766:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16777:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16762:3:13"},"nodeType":"YulFunctionCall","src":"16762:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"16782:2:13","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16755:6:13"},"nodeType":"YulFunctionCall","src":"16755:30:13"},"nodeType":"YulExpressionStatement","src":"16755:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16805:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16816:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16801:3:13"},"nodeType":"YulFunctionCall","src":"16801:18:13"},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c20737461747573","kind":"string","nodeType":"YulLiteral","src":"16821:34:13","type":"","value":"ERC1155: setting approval status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16794:6:13"},"nodeType":"YulFunctionCall","src":"16794:62:13"},"nodeType":"YulExpressionStatement","src":"16794:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16876:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16887:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16872:3:13"},"nodeType":"YulFunctionCall","src":"16872:18:13"},{"hexValue":"20666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"16892:11:13","type":"","value":" for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16865:6:13"},"nodeType":"YulFunctionCall","src":"16865:39:13"},"nodeType":"YulExpressionStatement","src":"16865:39:13"},{"nodeType":"YulAssignment","src":"16913:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16925:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16936:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16921:3:13"},"nodeType":"YulFunctionCall","src":"16921:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16913:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16692:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16706:4:13","type":""}],"src":"16541:405:13"},{"body":{"nodeType":"YulBlock","src":"17080:119:13","statements":[{"nodeType":"YulAssignment","src":"17090:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17102:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17113:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17098:3:13"},"nodeType":"YulFunctionCall","src":"17098:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17090:4:13"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17132:9:13"},{"name":"value0","nodeType":"YulIdentifier","src":"17143:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17125:6:13"},"nodeType":"YulFunctionCall","src":"17125:25:13"},"nodeType":"YulExpressionStatement","src":"17125:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17170:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17181:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17166:3:13"},"nodeType":"YulFunctionCall","src":"17166:18:13"},{"name":"value1","nodeType":"YulIdentifier","src":"17186:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17159:6:13"},"nodeType":"YulFunctionCall","src":"17159:34:13"},"nodeType":"YulExpressionStatement","src":"17159:34:13"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17041:9:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17052:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17060:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17071:4:13","type":""}],"src":"16951:248:13"},{"body":{"nodeType":"YulBlock","src":"17535:519:13","statements":[{"nodeType":"YulVariableDeclaration","src":"17545:52:13","value":{"kind":"number","nodeType":"YulLiteral","src":"17555:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"17549:2:13","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17613:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17628:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"17636:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17624:3:13"},"nodeType":"YulFunctionCall","src":"17624:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17606:6:13"},"nodeType":"YulFunctionCall","src":"17606:34:13"},"nodeType":"YulExpressionStatement","src":"17606:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17660:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17671:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17656:3:13"},"nodeType":"YulFunctionCall","src":"17656:18:13"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17680:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"17688:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17676:3:13"},"nodeType":"YulFunctionCall","src":"17676:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17649:6:13"},"nodeType":"YulFunctionCall","src":"17649:43:13"},"nodeType":"YulExpressionStatement","src":"17649:43:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17712:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17723:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17708:3:13"},"nodeType":"YulFunctionCall","src":"17708:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"17728:3:13","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17701:6:13"},"nodeType":"YulFunctionCall","src":"17701:31:13"},"nodeType":"YulExpressionStatement","src":"17701:31:13"},{"nodeType":"YulVariableDeclaration","src":"17741:71:13","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17784:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17796:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17807:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17792:3:13"},"nodeType":"YulFunctionCall","src":"17792:19:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"17755:28:13"},"nodeType":"YulFunctionCall","src":"17755:57:13"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"17745:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17832:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17843:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17828:3:13"},"nodeType":"YulFunctionCall","src":"17828:18:13"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"17852:6:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"17860:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17848:3:13"},"nodeType":"YulFunctionCall","src":"17848:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17821:6:13"},"nodeType":"YulFunctionCall","src":"17821:50:13"},"nodeType":"YulExpressionStatement","src":"17821:50:13"},{"nodeType":"YulVariableDeclaration","src":"17880:58:13","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17923:6:13"},{"name":"tail_1","nodeType":"YulIdentifier","src":"17931:6:13"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"17894:28:13"},"nodeType":"YulFunctionCall","src":"17894:44:13"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"17884:6:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17958:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17969:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17954:3:13"},"nodeType":"YulFunctionCall","src":"17954:19:13"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"17979:6:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"17987:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17975:3:13"},"nodeType":"YulFunctionCall","src":"17975:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17947:6:13"},"nodeType":"YulFunctionCall","src":"17947:51:13"},"nodeType":"YulExpressionStatement","src":"17947:51:13"},{"nodeType":"YulAssignment","src":"18007:41:13","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"18033:6:13"},{"name":"tail_2","nodeType":"YulIdentifier","src":"18041:6:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"18015:17:13"},"nodeType":"YulFunctionCall","src":"18015:33:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18007:4:13"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17472:9:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17483:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17491:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17499:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17507:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17515:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17526:4:13","type":""}],"src":"17204:850:13"},{"body":{"nodeType":"YulBlock","src":"18139:169:13","statements":[{"body":{"nodeType":"YulBlock","src":"18185:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18187:6:13"},"nodeType":"YulFunctionCall","src":"18187:12:13"},"nodeType":"YulExpressionStatement","src":"18187:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18160:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"18169:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18156:3:13"},"nodeType":"YulFunctionCall","src":"18156:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"18181:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18152:3:13"},"nodeType":"YulFunctionCall","src":"18152:32:13"},"nodeType":"YulIf","src":"18149:52:13"},{"nodeType":"YulVariableDeclaration","src":"18210:29:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18229:9:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18223:5:13"},"nodeType":"YulFunctionCall","src":"18223:16:13"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"18214:5:13","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18272:5:13"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"18248:23:13"},"nodeType":"YulFunctionCall","src":"18248:30:13"},"nodeType":"YulExpressionStatement","src":"18248:30:13"},{"nodeType":"YulAssignment","src":"18287:15:13","value":{"name":"value","nodeType":"YulIdentifier","src":"18297:5:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18287:6:13"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18105:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18116:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18128:6:13","type":""}],"src":"18059:249:13"},{"body":{"nodeType":"YulBlock","src":"18356:136:13","statements":[{"body":{"nodeType":"YulBlock","src":"18401:85:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18430:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18433:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18436:1:13","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"18415:14:13"},"nodeType":"YulFunctionCall","src":"18415:23:13"},"nodeType":"YulExpressionStatement","src":"18415:23:13"},{"nodeType":"YulAssignment","src":"18451:25:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18462:3:13","type":"","value":"224"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18473:1:13","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18467:5:13"},"nodeType":"YulFunctionCall","src":"18467:8:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18458:3:13"},"nodeType":"YulFunctionCall","src":"18458:18:13"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"18451:3:13"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"18372:14:13"},"nodeType":"YulFunctionCall","src":"18372:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"18390:1:13","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18369:2:13"},"nodeType":"YulFunctionCall","src":"18369:23:13"},"nodeType":"YulIf","src":"18366:120:13"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"18348:3:13","type":""}],"src":"18313:179:13"},{"body":{"nodeType":"YulBlock","src":"18544:624:13","statements":[{"body":{"nodeType":"YulBlock","src":"18584:9:13","statements":[{"nodeType":"YulLeave","src":"18586:5:13"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"18560:14:13"},"nodeType":"YulFunctionCall","src":"18560:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"18578:4:13","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18557:2:13"},"nodeType":"YulFunctionCall","src":"18557:26:13"},"nodeType":"YulIf","src":"18554:39:13"},{"nodeType":"YulVariableDeclaration","src":"18602:21:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18620:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18614:5:13"},"nodeType":"YulFunctionCall","src":"18614:9:13"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"18606:4:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18632:16:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18646:1:13","type":"","value":"3"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18642:3:13"},"nodeType":"YulFunctionCall","src":"18642:6:13"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18636:2:13","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18672:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"18678:1:13","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"18685:14:13"},"nodeType":"YulFunctionCall","src":"18685:16:13"},{"name":"_1","nodeType":"YulIdentifier","src":"18703:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18681:3:13"},"nodeType":"YulFunctionCall","src":"18681:25:13"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"18657:14:13"},"nodeType":"YulFunctionCall","src":"18657:50:13"},"nodeType":"YulExpressionStatement","src":"18657:50:13"},{"nodeType":"YulVariableDeclaration","src":"18716:25:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18736:4:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18730:5:13"},"nodeType":"YulFunctionCall","src":"18730:11:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18720:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18750:26:13","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"18760:14:13"},"nodeType":"YulFunctionCall","src":"18760:16:13"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"18754:2:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18785:28:13","value":{"kind":"number","nodeType":"YulLiteral","src":"18795:18:13","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"18789:2:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"18871:9:13","statements":[{"nodeType":"YulLeave","src":"18873:5:13"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18831:6:13"},{"name":"_3","nodeType":"YulIdentifier","src":"18839:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18828:2:13"},"nodeType":"YulFunctionCall","src":"18828:14:13"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18851:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"18859:4:13","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18847:3:13"},"nodeType":"YulFunctionCall","src":"18847:17:13"},{"name":"_2","nodeType":"YulIdentifier","src":"18866:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18844:2:13"},"nodeType":"YulFunctionCall","src":"18844:25:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18825:2:13"},"nodeType":"YulFunctionCall","src":"18825:45:13"},"nodeType":"YulIf","src":"18822:58:13"},{"nodeType":"YulVariableDeclaration","src":"18889:28:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18904:4:13"},{"name":"offset","nodeType":"YulIdentifier","src":"18910:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18900:3:13"},"nodeType":"YulFunctionCall","src":"18900:17:13"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"18893:3:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18926:24:13","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"18946:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18940:5:13"},"nodeType":"YulFunctionCall","src":"18940:10:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18930:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"18977:9:13","statements":[{"nodeType":"YulLeave","src":"18979:5:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18965:6:13"},{"name":"_3","nodeType":"YulIdentifier","src":"18973:2:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18962:2:13"},"nodeType":"YulFunctionCall","src":"18962:14:13"},"nodeType":"YulIf","src":"18959:27:13"},{"body":{"nodeType":"YulBlock","src":"19068:9:13","statements":[{"nodeType":"YulLeave","src":"19070:5:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"19009:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"19014:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19005:3:13"},"nodeType":"YulFunctionCall","src":"19005:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"19023:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19001:3:13"},"nodeType":"YulFunctionCall","src":"19001:27:13"},{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19038:4:13"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"19044:14:13"},"nodeType":"YulFunctionCall","src":"19044:16:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19034:3:13"},"nodeType":"YulFunctionCall","src":"19034:27:13"},{"name":"_1","nodeType":"YulIdentifier","src":"19063:2:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19030:3:13"},"nodeType":"YulFunctionCall","src":"19030:36:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18998:2:13"},"nodeType":"YulFunctionCall","src":"18998:69:13"},"nodeType":"YulIf","src":"18995:82:13"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19106:4:13"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19120:6:13"},{"name":"length","nodeType":"YulIdentifier","src":"19128:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19116:3:13"},"nodeType":"YulFunctionCall","src":"19116:19:13"},{"kind":"number","nodeType":"YulLiteral","src":"19137:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19112:3:13"},"nodeType":"YulFunctionCall","src":"19112:30:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"19086:19:13"},"nodeType":"YulFunctionCall","src":"19086:57:13"},"nodeType":"YulExpressionStatement","src":"19086:57:13"},{"nodeType":"YulAssignment","src":"19152:10:13","value":{"name":"msg","nodeType":"YulIdentifier","src":"19159:3:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19152:3:13"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18536:3:13","type":""}],"src":"18497:671:13"},{"body":{"nodeType":"YulBlock","src":"19347:242:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19364:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19375:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19357:6:13"},"nodeType":"YulFunctionCall","src":"19357:21:13"},"nodeType":"YulExpressionStatement","src":"19357:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19398:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19409:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19394:3:13"},"nodeType":"YulFunctionCall","src":"19394:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"19414:2:13","type":"","value":"52"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19387:6:13"},"nodeType":"YulFunctionCall","src":"19387:30:13"},"nodeType":"YulExpressionStatement","src":"19387:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19437:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19448:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19433:3:13"},"nodeType":"YulFunctionCall","src":"19433:18:13"},{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535","kind":"string","nodeType":"YulLiteral","src":"19453:34:13","type":"","value":"ERC1155: transfer to non-ERC1155"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19426:6:13"},"nodeType":"YulFunctionCall","src":"19426:62:13"},"nodeType":"YulExpressionStatement","src":"19426:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19508:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19519:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19504:3:13"},"nodeType":"YulFunctionCall","src":"19504:18:13"},{"hexValue":"526563656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"19524:22:13","type":"","value":"Receiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19497:6:13"},"nodeType":"YulFunctionCall","src":"19497:50:13"},"nodeType":"YulExpressionStatement","src":"19497:50:13"},{"nodeType":"YulAssignment","src":"19556:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19568:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19579:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19564:3:13"},"nodeType":"YulFunctionCall","src":"19564:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19556:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19324:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19338:4:13","type":""}],"src":"19173:416:13"},{"body":{"nodeType":"YulBlock","src":"19768:230:13","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19785:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19796:2:13","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19778:6:13"},"nodeType":"YulFunctionCall","src":"19778:21:13"},"nodeType":"YulExpressionStatement","src":"19778:21:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19819:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19830:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19815:3:13"},"nodeType":"YulFunctionCall","src":"19815:18:13"},{"kind":"number","nodeType":"YulLiteral","src":"19835:2:13","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19808:6:13"},"nodeType":"YulFunctionCall","src":"19808:30:13"},"nodeType":"YulExpressionStatement","src":"19808:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19858:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19869:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19854:3:13"},"nodeType":"YulFunctionCall","src":"19854:18:13"},{"hexValue":"455243313135353a204552433131353552656365697665722072656a65637465","kind":"string","nodeType":"YulLiteral","src":"19874:34:13","type":"","value":"ERC1155: ERC1155Receiver rejecte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19847:6:13"},"nodeType":"YulFunctionCall","src":"19847:62:13"},"nodeType":"YulExpressionStatement","src":"19847:62:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19929:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19940:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19925:3:13"},"nodeType":"YulFunctionCall","src":"19925:18:13"},{"hexValue":"6420746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"19945:10:13","type":"","value":"d tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19918:6:13"},"nodeType":"YulFunctionCall","src":"19918:38:13"},"nodeType":"YulExpressionStatement","src":"19918:38:13"},{"nodeType":"YulAssignment","src":"19965:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19977:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19988:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19973:3:13"},"nodeType":"YulFunctionCall","src":"19973:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19965:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19745:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19759:4:13","type":""}],"src":"19594:404:13"},{"body":{"nodeType":"YulBlock","src":"20234:353:13","statements":[{"nodeType":"YulVariableDeclaration","src":"20244:52:13","value":{"kind":"number","nodeType":"YulLiteral","src":"20254:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"20248:2:13","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20312:9:13"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20327:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"20335:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20323:3:13"},"nodeType":"YulFunctionCall","src":"20323:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20305:6:13"},"nodeType":"YulFunctionCall","src":"20305:34:13"},"nodeType":"YulExpressionStatement","src":"20305:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20359:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20370:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20355:3:13"},"nodeType":"YulFunctionCall","src":"20355:18:13"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20379:6:13"},{"name":"_1","nodeType":"YulIdentifier","src":"20387:2:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20375:3:13"},"nodeType":"YulFunctionCall","src":"20375:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20348:6:13"},"nodeType":"YulFunctionCall","src":"20348:43:13"},"nodeType":"YulExpressionStatement","src":"20348:43:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20411:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20422:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20407:3:13"},"nodeType":"YulFunctionCall","src":"20407:18:13"},{"name":"value2","nodeType":"YulIdentifier","src":"20427:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20400:6:13"},"nodeType":"YulFunctionCall","src":"20400:34:13"},"nodeType":"YulExpressionStatement","src":"20400:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20454:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20465:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20450:3:13"},"nodeType":"YulFunctionCall","src":"20450:18:13"},{"name":"value3","nodeType":"YulIdentifier","src":"20470:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20443:6:13"},"nodeType":"YulFunctionCall","src":"20443:34:13"},"nodeType":"YulExpressionStatement","src":"20443:34:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20497:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20508:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20493:3:13"},"nodeType":"YulFunctionCall","src":"20493:19:13"},{"kind":"number","nodeType":"YulLiteral","src":"20514:3:13","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20486:6:13"},"nodeType":"YulFunctionCall","src":"20486:32:13"},"nodeType":"YulExpressionStatement","src":"20486:32:13"},{"nodeType":"YulAssignment","src":"20527:54:13","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"20553:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20565:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20576:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20561:3:13"},"nodeType":"YulFunctionCall","src":"20561:19:13"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"20535:17:13"},"nodeType":"YulFunctionCall","src":"20535:46:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20527:4:13"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20171:9:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20182:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20190:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20198:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20206:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20214:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20225:4:13","type":""}],"src":"20003:584:13"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_payable__to_t_uint256_t_uint256_t_address_payable__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_array$_t_address_payable_$dyn_memory_ptr__to_t_array$_t_address_payable_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_deec4200ccaf071840ccd9028f0968f70ac26a9f7072508882fe5e3ec5b74118__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Insufficient shares to be sold\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_f63f1041bf6cc97048e7a9290e8ee69e6ed6322826dfcdf5952d03a441818414__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Insufficient shares to be transf\")\n        mstore(add(headStart, 96), \"erred to recepient\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_b811e0bcaee688beca1c4c876410450d1a5dc16535505777aeaad61e55c5affa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"Maximum number of shares that ca\")\n        mstore(add(headStart, 96), \"n be purchased is 100\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1f6a885451413330205333b102dbb88440037fd5075a0982c9316f29ebbfc47b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Number of shares purchased canno\")\n        mstore(add(headStart, 96), \"t be zero or less\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3ae004e89fa8ffc258c665923ea1b97ab7a44ceac26f6e4dd4d520fe101daea5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"There aren't sufficient shares t\")\n        mstore(add(headStart, 96), \"o be purchased\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100f25760003560e01c806391a625231161008a578063df48981a11610059578063df48981a14610300578063e985e9c514610313578063f23a6e611461035c578063f242432a1461038857600080fd5b806391a6252314610243578063a22cb46514610279578063bc197c8114610299578063d0a2f2c4146102de57600080fd5b80634ba8ae81116100c65780634ba8ae81146101a95780634e1273f4146101bc57806380bb4ef4146101e95780638fcb4e5b1461022357600080fd5b8062fdd58e146100f757806301ffc9a71461012a5780630e89341c1461015a5780632eb2c2d614610187575b600080fd5b34801561010357600080fd5b506101176101123660046113d1565b6103a8565b6040519081526020015b60405180910390f35b34801561013657600080fd5b5061014a610145366004611413565b610441565b6040519015158152602001610121565b34801561016657600080fd5b5061017a610175366004611437565b610491565b6040516101219190611496565b34801561019357600080fd5b506101a76101a23660046115f5565b610525565b005b6101a76101b7366004611437565b6105b8565b3480156101c857600080fd5b506101dc6101d73660046116a3565b6106bc565b60405161012191906117ab565b3480156101f557600080fd5b506003546004546005546040805193845260208401929092526001600160a01b031690820152606001610121565b34801561022f57600080fd5b506101a761023e3660046113d1565b6107e6565b34801561024f57600080fd5b5061011761025e3660046117be565b6001600160a01b031660009081526006602052604090205490565b34801561028557600080fd5b506101a76102943660046117db565b6108d4565b3480156102a557600080fd5b506102c56102b43660046115f5565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610121565b3480156102ea57600080fd5b506102f36108e3565b6040516101219190611819565b6101a761030e366004611437565b610945565b34801561031f57600080fd5b5061014a61032e366004611866565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561036857600080fd5b506102c5610377366004611894565b63f23a6e6160e01b95945050505050565b34801561039457600080fd5b506101a76103a3366004611894565b610b4f565b60006001600160a01b0383166104185760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061047257506001600160e01b031982166303a24d0760e21b145b8061043b57506301ffc9a760e01b6001600160e01b031983161461043b565b6060600280546104a0906118fd565b80601f01602080910402602001604051908101604052809291908181526020018280546104cc906118fd565b80156105195780601f106104ee57610100808354040283529160200191610519565b820191906000526020600020905b8154815290600101906020018083116104fc57829003601f168201915b50505050509050919050565b6001600160a01b0385163314806105415750610541853361032e565b6105a45760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526d195c881bdc88185c1c1c9bdd995960921b606482015260840161040f565b6105b18585858585610bdb565b5050505050565b336000908152600660205260409020548111156106175760405162461bcd60e51b815260206004820152601e60248201527f496e73756666696369656e742073686172657320746f20626520736f6c640000604482015260640161040f565b610634333060008460405180602001604052806000815250610b4f565b6000816064600454670de0b6b3a764000061064f919061194d565b6106599190611964565b610663919061194d565b604051909150339082156108fc029083906000818181858888f19350505050158015610693573d6000803e3d6000fd5b5033600090815260066020526040812080548492906106b3908490611986565b90915550505050565b606081518351146107215760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161040f565b6000835167ffffffffffffffff81111561073d5761073d6114a9565b604051908082528060200260200182016040528015610766578160200160208202803683370190505b50905060005b84518110156107de576107b185828151811061078a5761078a611999565b60200260200101518583815181106107a4576107a4611999565b60200260200101516103a8565b8282815181106107c3576107c3611999565b60209081029190910101526107d7816119af565b905061076c565b509392505050565b3360009081526006602052604090205481111561086b5760405162461bcd60e51b815260206004820152603260248201527f496e73756666696369656e742073686172657320746f206265207472616e736660448201527f657272656420746f20726563657069656e740000000000000000000000000000606482015260840161040f565b610888338360008460405180602001604052806000815250610b4f565b33600090815260066020526040812080548392906108a7908490611986565b90915550506001600160a01b038216600090815260066020526040812080548392906106b39084906119c8565b6108df338383610e39565b5050565b6060600780548060200260200160405190810160405280929190818152602001828054801561093b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161091d575b5050505050905090565b60648111156109bc5760405162461bcd60e51b815260206004820152603560248201527f4d6178696d756d206e756d626572206f6620736861726573207468617420636160448201527f6e20626520707572636861736564206973203130300000000000000000000000606482015260840161040f565b60008111610a325760405162461bcd60e51b815260206004820152603160248201527f4e756d626572206f6620736861726573207075726368617365642063616e6e6f60448201527f74206265207a65726f206f72206c657373000000000000000000000000000000606482015260840161040f565b610a3d3060006103a8565b8110610aa25760405162461bcd60e51b815260206004820152602e60248201527f5468657265206172656e27742073756666696369656e7420736861726573207460448201526d1bc81899481c1d5c98da185cd95960921b606482015260840161040f565b60405130903480156108fc02916000818181858888f19350505050158015610ace573d6000803e3d6000fd5b50610aec303360008460405180602001604052806000815250610b4f565b336000818152600660205260408120929092556007805460018101825592527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688909101805473ffffffffffffffffffffffffffffffffffffffff19169091179055565b6001600160a01b038516331480610b6b5750610b6b853361032e565b610bce5760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526d195c881bdc88185c1c1c9bdd995960921b606482015260840161040f565b6105b18585858585610f19565b8151835114610c3d5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161040f565b6001600160a01b038416610ca15760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161040f565b3360005b8451811015610dcb576000858281518110610cc257610cc2611999565b602002602001015190506000858381518110610ce057610ce0611999565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610d735760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161040f565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610db09084906119c8565b9250508190555050505080610dc4906119af565b9050610ca5565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610e1b9291906119db565b60405180910390a4610e318187878787876110c4565b505050505050565b816001600160a01b0316836001600160a01b031603610eac5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161040f565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610f7d5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161040f565b336000610f8985611272565b90506000610f9685611272565b90506000868152602081815260408083206001600160a01b038c1684529091529020548581101561101c5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161040f565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906110599084906119c8565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46110b9848a8a8a8a8a6112bd565b505050505050505050565b6001600160a01b0384163b15610e315760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906111089089908990889088908890600401611a09565b6020604051808303816000875af1925050508015611143575060408051601f3d908101601f1916820190925261114091810190611a67565b60015b6111f85761114f611a84565b806308c379a0036111885750611163611aa0565b8061116e575061118a565b8060405162461bcd60e51b815260040161040f9190611496565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840161040f565b6001600160e01b0319811663bc197c8160e01b146112695760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161040f565b50505050505050565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106112ac576112ac611999565b602090810291909101015292915050565b6001600160a01b0384163b15610e315760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906113019089908990889088908890600401611b2a565b6020604051808303816000875af192505050801561133c575060408051601f3d908101601f1916820190925261133991810190611a67565b60015b6113485761114f611a84565b6001600160e01b0319811663f23a6e6160e01b146112695760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161040f565b6001600160a01b03811681146113ce57600080fd5b50565b600080604083850312156113e457600080fd5b82356113ef816113b9565b946020939093013593505050565b6001600160e01b0319811681146113ce57600080fd5b60006020828403121561142557600080fd5b8135611430816113fd565b9392505050565b60006020828403121561144957600080fd5b5035919050565b6000815180845260005b818110156114765760208185018101518683018201520161145a565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006114306020830184611450565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156114e5576114e56114a9565b6040525050565b600067ffffffffffffffff821115611506576115066114a9565b5060051b60200190565b600082601f83011261152157600080fd5b8135602061152e826114ec565b60405161153b82826114bf565b83815260059390931b850182019282810191508684111561155b57600080fd5b8286015b84811015611576578035835291830191830161155f565b509695505050505050565b600082601f83011261159257600080fd5b813567ffffffffffffffff8111156115ac576115ac6114a9565b6040516115c3601f8301601f1916602001826114bf565b8181528460208386010111156115d857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561160d57600080fd5b8535611618816113b9565b94506020860135611628816113b9565b9350604086013567ffffffffffffffff8082111561164557600080fd5b61165189838a01611510565b9450606088013591508082111561166757600080fd5b61167389838a01611510565b9350608088013591508082111561168957600080fd5b5061169688828901611581565b9150509295509295909350565b600080604083850312156116b657600080fd5b823567ffffffffffffffff808211156116ce57600080fd5b818501915085601f8301126116e257600080fd5b813560206116ef826114ec565b6040516116fc82826114bf565b83815260059390931b850182019282810191508984111561171c57600080fd5b948201945b83861015611743578535611734816113b9565b82529482019490820190611721565b9650508601359250508082111561175957600080fd5b5061176685828601611510565b9150509250929050565b600081518084526020808501945080840160005b838110156117a057815187529582019590820190600101611784565b509495945050505050565b6020815260006114306020830184611770565b6000602082840312156117d057600080fd5b8135611430816113b9565b600080604083850312156117ee57600080fd5b82356117f9816113b9565b91506020830135801515811461180e57600080fd5b809150509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561185a5783516001600160a01b031683529284019291840191600101611835565b50909695505050505050565b6000806040838503121561187957600080fd5b8235611884816113b9565b9150602083013561180e816113b9565b600080600080600060a086880312156118ac57600080fd5b85356118b7816113b9565b945060208601356118c7816113b9565b93506040860135925060608601359150608086013567ffffffffffffffff8111156118f157600080fd5b61169688828901611581565b600181811c9082168061191157607f821691505b60208210810361193157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761043b5761043b611937565b60008261198157634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561043b5761043b611937565b634e487b7160e01b600052603260045260246000fd5b6000600182016119c1576119c1611937565b5060010190565b8082018082111561043b5761043b611937565b6040815260006119ee6040830185611770565b8281036020840152611a008185611770565b95945050505050565b60006001600160a01b03808816835280871660208401525060a06040830152611a3560a0830186611770565b8281036060840152611a478186611770565b90508281036080840152611a5b8185611450565b98975050505050505050565b600060208284031215611a7957600080fd5b8151611430816113fd565b600060033d1115611a9d5760046000803e5060005160e01c5b90565b600060443d1015611aae5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611ade57505050505090565b8285019150815181811115611af65750505050505090565b843d8701016020828501011115611b105750505050505090565b611b1f602082860101876114bf565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152611b6260a0830184611450565b97965050505050505056fea2646970667358221220c460c5fc1f9b0eb27e0e89ae9b7a82b89ac5ea9793fafdcf8df724b8067f24ee64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91A62523 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDF48981A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xDF48981A EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91A62523 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xD0A2F2C4 EQ PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4BA8AE81 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x4BA8AE81 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x80BB4EF4 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x8FCB4E5B EQ PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x441 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A7 PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x121 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x8D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F5 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1819 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x1866 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x1894 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x418 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x472 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x43B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x43B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x4A0 SWAP1 PUSH2 0x18FD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4CC SWAP1 PUSH2 0x18FD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x519 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x519 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4FC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x541 JUMPI POP PUSH2 0x541 DUP6 CALLER PUSH2 0x32E JUMP JUMPDEST PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0x5B1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xBDB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742073686172657320746F20626520736F6C640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0x634 CALLER ADDRESS PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x64 PUSH1 0x4 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH2 0x659 SWAP2 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH2 0x663 SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x693 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B3 SWAP1 DUP5 SWAP1 PUSH2 0x1986 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x73D JUMPI PUSH2 0x73D PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x766 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x7DE JUMPI PUSH2 0x7B1 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x78A JUMPI PUSH2 0x78A PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7A4 JUMPI PUSH2 0x7A4 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3A8 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7C3 JUMPI PUSH2 0x7C3 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x7D7 DUP2 PUSH2 0x19AF JUMP JUMPDEST SWAP1 POP PUSH2 0x76C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742073686172657320746F206265207472616E7366 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x657272656420746F20726563657069656E740000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0x888 CALLER DUP4 PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB4F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x8A7 SWAP1 DUP5 SWAP1 PUSH2 0x1986 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6B3 SWAP1 DUP5 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST PUSH2 0x8DF CALLER DUP4 DUP4 PUSH2 0xE39 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x93B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x91D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D206E756D626572206F66207368617265732074686174206361 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E20626520707572636861736564206973203130300000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F6620736861726573207075726368617365642063616E6E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74206265207A65726F206F72206C657373000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0xA3D ADDRESS PUSH1 0x0 PUSH2 0x3A8 JUMP JUMPDEST DUP2 LT PUSH2 0xAA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206172656E27742073756666696369656E74207368617265732074 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x1BC81899481C1D5C98DA185CD959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD ADDRESS SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xACE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xAEC ADDRESS CALLER PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB4F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0xB6B JUMPI POP PUSH2 0xB6B DUP6 CALLER PUSH2 0x32E JUMP JUMPDEST PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH2 0x5B1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF19 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCC2 JUMPI PUSH2 0xCC2 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCE0 JUMPI PUSH2 0xCE0 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xDB0 SWAP1 DUP5 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xDC4 SWAP1 PUSH2 0x19AF JUMP JUMPDEST SWAP1 POP PUSH2 0xCA5 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xE1B SWAP3 SWAP2 SWAP1 PUSH2 0x19DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE31 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x10C4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xEAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xF7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xF89 DUP6 PUSH2 0x1272 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF96 DUP6 PUSH2 0x1272 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1059 SWAP1 DUP5 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10B9 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x12BD JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1108 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A09 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1143 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1140 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11F8 JUMPI PUSH2 0x114F PUSH2 0x1A84 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1188 JUMPI POP PUSH2 0x1163 PUSH2 0x1AA0 JUMP JUMPDEST DUP1 PUSH2 0x116E JUMPI POP PUSH2 0x118A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x12AC JUMPI PUSH2 0x12AC PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1301 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x133C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1339 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1348 JUMPI PUSH2 0x114F PUSH2 0x1A84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x13EF DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x13CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1430 DUP2 PUSH2 0x13FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1476 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x145A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1430 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1450 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x14E5 JUMPI PUSH2 0x14E5 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1506 JUMPI PUSH2 0x1506 PUSH2 0x14A9 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x152E DUP3 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153B DUP3 DUP3 PUSH2 0x14BF JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x155B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1576 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x155F JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15AC JUMPI PUSH2 0x15AC PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C3 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x14BF JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x15D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x160D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1618 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1628 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1651 DUP10 DUP4 DUP11 ADD PUSH2 0x1510 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1673 DUP10 DUP4 DUP11 ADD PUSH2 0x1510 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1696 DUP9 DUP3 DUP10 ADD PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x16EF DUP3 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16FC DUP3 DUP3 PUSH2 0x14BF JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x171C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1743 JUMPI DUP6 CALLDATALOAD PUSH2 0x1734 DUP2 PUSH2 0x13B9 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1721 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1766 DUP6 DUP3 DUP7 ADD PUSH2 0x1510 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17A0 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1784 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1430 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1430 DUP2 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x17F9 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x180E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x185A JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1835 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1884 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x180E DUP2 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x18AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x18B7 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x18C7 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1696 DUP9 DUP3 DUP10 ADD PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1911 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1931 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x43B JUMPI PUSH2 0x43B PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1981 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x43B JUMPI PUSH2 0x43B PUSH2 0x1937 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x19C1 JUMPI PUSH2 0x19C1 PUSH2 0x1937 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x43B JUMPI PUSH2 0x43B PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x19EE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1770 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1A00 DUP2 DUP6 PUSH2 0x1770 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1A35 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1770 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1A47 DUP2 DUP7 PUSH2 0x1770 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1A5B DUP2 DUP6 PUSH2 0x1450 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1430 DUP2 PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1A9D JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1AAE JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1ADE JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1AF6 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1B10 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1B1F PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x14BF JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B62 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1450 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 PUSH1 0xC5 0xFC 0x1F SWAP12 0xE 0xB2 PUSH31 0xE89AE9B7A82B89AC5EA9793FAFDCF8DF724B8067F24EE64736F6C63430008 EQ STOP CALLER ","sourceMap":"300:2994:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227:1;;;;;;;;;;-1:-1:-1;2185:227:1;;;;;:::i;:::-;;:::i;:::-;;;639:25:13;;;627:2;612:18;2185:227:1;;;;;;;;1236:305;;;;;;;;;;-1:-1:-1;1236:305:1;;;;;:::i;:::-;;:::i;:::-;;;1226:14:13;;1219:22;1201:41;;1189:2;1174:18;1236:305:1;1061:187:13;1940:103:1;;;;;;;;;;-1:-1:-1;1940:103:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4042:426::-;;;;;;;;;;-1:-1:-1;4042:426:1;;;;;:::i;:::-;;:::i;:::-;;2442:467:12;;;;;;:::i;:::-;;:::i;2569:486:1:-;;;;;;;;;;-1:-1:-1;2569:486:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;830:150:12:-;;;;;;;;;;-1:-1:-1;934:8:12;;943:16;;960:11;;830:150;;;7236:25:13;;;7292:2;7277:18;;7270:34;;;;-1:-1:-1;;;;;960:11:12;7320:18:13;;;7313:83;7224:2;7209:18;830:150:12;7018:384:13;2034:400:12;;;;;;;;;;-1:-1:-1;2034:400:12;;;;;:::i;:::-;;:::i;1106:142::-;;;;;;;;;;-1:-1:-1;1106:142:12;;;;;:::i;:::-;-1:-1:-1;;;;;1211:28:12;1184:7;1211:28;;;:18;:28;;;;;;;1106:142;3123:153:1;;;;;;;;;;-1:-1:-1;3123:153:1;;;;;:::i;:::-;;:::i;3093:196:12:-;;;;;;;;;;-1:-1:-1;3093:196:12;;;;;:::i;:::-;-1:-1:-1;;;3093:196:12;;;;;;;;;;;-1:-1:-1;;;;;;8250:33:13;;;8232:52;;8220:2;8205:18;3093:196:12;8088:202:13;988:110:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1256:770::-;;;;;;:::i;:::-;;:::i;3343:166:1:-;;;;;;;;;;-1:-1:-1;3343:166:1;;;;;:::i;:::-;-1:-1:-1;;;;;3465:27:1;;;3442:4;3465:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3343:166;2917:168:12;;;;;;;;;;-1:-1:-1;2917:168:12;;;;;:::i;:::-;-1:-1:-1;;;2917:168:12;;;;;;;;3576:394:1;;;;;;;;;;-1:-1:-1;3576:394:1;;;;;:::i;:::-;;:::i;2185:227::-;2271:7;-1:-1:-1;;;;;2298:21:1;;2290:76;;;;-1:-1:-1;;;2290:76:1;;10331:2:13;2290:76:1;;;10313:21:13;10370:2;10350:18;;;10343:30;10409:34;10389:18;;;10382:62;-1:-1:-1;;;10460:18:13;;;10453:40;10510:19;;2290:76:1;;;;;;;;;-1:-1:-1;2383:9:1;:13;;;;;;;;;;;-1:-1:-1;;;;;2383:22:1;;;;;;;;;;2185:227;;;;;:::o;1236:305::-;1338:4;-1:-1:-1;;;;;;1373:41:1;;-1:-1:-1;;;1373:41:1;;:109;;-1:-1:-1;;;;;;;1430:52:1;;-1:-1:-1;;;1430:52:1;1373:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:8;;;1498:36:1;829:155:8;1940:103:1;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4042:426::-;-1:-1:-1;;;;;4267:20:1;;719:10:6;4267:20:1;;:60;;-1:-1:-1;4291:36:1;4308:4;719:10:6;3343:166:1;:::i;4291:36::-;4246:153;;;;-1:-1:-1;;;4246:153:1;;11127:2:13;4246:153:1;;;11109:21:13;11166:2;11146:18;;;11139:30;11205:34;11185:18;;;11178:62;-1:-1:-1;;;11256:18:13;;;11249:44;11310:19;;4246:153:1;10925:410:13;4246:153:1;4409:52;4432:4;4438:2;4442:3;4447:7;4456:4;4409:22;:52::i;:::-;4042:426;;;;;:::o;2442:467:12:-;2555:10;2528:39;;;;:18;:39;;;;;;2516:51;;;2508:94;;;;-1:-1:-1;;;2508:94:12;;11542:2:13;2508:94:12;;;11524:21:13;11581:2;11561:18;;;11554:30;11620:32;11600:18;;;11593:60;11670:18;;2508:94:12;11340:354:13;2508:94:12;2613:80;2638:10;2659:4;399:1;2680:8;2613:80;;;;;;;;;;;;:16;:80::i;:::-;2706:24;2765:8;2760:3;2735:16;;2752:6;2735:23;;;;:::i;:::-;2734:29;;;;:::i;:::-;2733:40;;;;:::i;:::-;2784:55;;2706:67;;-1:-1:-1;2800:10:12;;2784:55;;;;;2706:67;;2784:55;;;;2706:67;2800:10;2784:55;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2877:10:12;2850:39;;;;:18;:39;;;;;:50;;2892:8;;2850:39;:50;;2892:8;;2850:50;:::i;:::-;;;;-1:-1:-1;;;;2442:467:12:o;2569:486:1:-;2702:16;2757:3;:10;2738:8;:15;:29;2730:83;;;;-1:-1:-1;;;2730:83:1;;12561:2:13;2730:83:1;;;12543:21:13;12600:2;12580:18;;;12573:30;12639:34;12619:18;;;12612:62;-1:-1:-1;;;12690:18:13;;;12683:39;12739:19;;2730:83:1;12359:405:13;2730:83:1;2824:30;2871:8;:15;2857:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2857:30:1;;2824:63;;2903:9;2898:120;2922:8;:15;2918:1;:19;2898:120;;;2977:30;2987:8;2996:1;2987:11;;;;;;;;:::i;:::-;;;;;;;3000:3;3004:1;3000:6;;;;;;;;:::i;:::-;;;;;;;2977:9;:30::i;:::-;2958:13;2972:1;2958:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2939:3;;;:::i;:::-;;;2898:120;;;-1:-1:-1;3035:13:1;2569:486;-1:-1:-1;;;2569:486:1:o;2034:400:12:-;2160:10;2133:39;;;;:18;:39;;;;;;2121:51;;;2113:114;;;;-1:-1:-1;;;2113:114:12;;13243:2:13;2113:114:12;;;13225:21:13;13282:2;13262:18;;;13255:30;13321:34;13301:18;;;13294:62;13392:20;13372:18;;;13365:48;13430:19;;2113:114:12;13041:414:13;2113:114:12;2238:75;2263:10;2276:8;399:1;2300:8;2238:75;;;;;;;;;;;;:16;:75::i;:::-;2351:10;2324:39;;;;:18;:39;;;;;:51;;2367:8;;2324:39;:51;;2367:8;;2324:51;:::i;:::-;;;;-1:-1:-1;;;;;;;2386:28:12;;;;;;:18;:28;;;;;:40;;2418:8;;2386:28;:40;;2418:8;;2386:40;:::i;3123:153:1:-;3217:52;719:10:6;3250:8:1;3260;3217:18;:52::i;:::-;3123:153;;:::o;988:110:12:-;1037:25;1081:9;1074:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1074:16:12;;;;;;;;;;;;;;;;;;;;;;;988:110;:::o;1256:770::-;1345:3;1335:8;:13;;1327:78;;;;-1:-1:-1;;;1327:78:12;;13792:2:13;1327:78:12;;;13774:21:13;13831:2;13811:18;;;13804:30;13870:34;13850:18;;;13843:62;13941:23;13921:18;;;13914:51;13982:19;;1327:78:12;13590:417:13;1327:78:12;1433:1;1424:8;:10;1416:72;;;;-1:-1:-1;;;1416:72:12;;14214:2:13;1416:72:12;;;14196:21:13;14253:2;14233:18;;;14226:30;14292:34;14272:18;;;14265:62;14363:19;14343:18;;;14336:47;14400:19;;1416:72:12;14012:413:13;1416:72:12;1516:38;1534:4;399:1;1516:9;:38::i;:::-;1507:8;:47;1499:105;;;;-1:-1:-1;;;1499:105:12;;14632:2:13;1499:105:12;;;14614:21:13;14671:2;14651:18;;;14644:30;14710:34;14690:18;;;14683:62;-1:-1:-1;;;14761:18:13;;;14754:44;14815:19;;1499:105:12;14430:410:13;1499:105:12;1770:42;;1786:4;;1802:9;1770:42;;;;;;;;;1802:9;1786:4;1770:42;;;;;;;;;;;;;;;;;;;;;1824:80;1849:4;1864:10;399:1;1891:8;1824:80;;;;;;;;;;;;:16;:80::i;:::-;1941:10;1914:39;;;;:18;:39;;;;;:50;;;;1974:9;:44;;;;;;;;;;;;;;;-1:-1:-1;;1974:44:12;;;;;;1256:770::o;3576:394:1:-;-1:-1:-1;;;;;3776:20:1;;719:10:6;3776:20:1;;:60;;-1:-1:-1;3800:36:1;3817:4;719:10:6;3343:166:1;:::i;3800:36::-;3755:153;;;;-1:-1:-1;;;3755:153:1;;11127:2:13;3755:153:1;;;11109:21:13;11166:2;11146:18;;;11139:30;11205:34;11185:18;;;11178:62;-1:-1:-1;;;11256:18:13;;;11249:44;11310:19;;3755:153:1;10925:410:13;3755:153:1;3918:45;3936:4;3942:2;3946;3950:6;3958:4;3918:17;:45::i;6211:1115::-;6431:7;:14;6417:3;:10;:28;6409:81;;;;-1:-1:-1;;;6409:81:1;;15047:2:13;6409:81:1;;;15029:21:13;15086:2;15066:18;;;15059:30;15125:34;15105:18;;;15098:62;-1:-1:-1;;;15176:18:13;;;15169:38;15224:19;;6409:81:1;14845:404:13;6409:81:1;-1:-1:-1;;;;;6508:16:1;;6500:66;;;;-1:-1:-1;;;6500:66:1;;15456:2:13;6500:66:1;;;15438:21:13;15495:2;15475:18;;;15468:30;15534:34;15514:18;;;15507:62;-1:-1:-1;;;15585:18:13;;;15578:35;15630:19;;6500:66:1;15254:401:13;6500:66:1;719:10:6;6577:16:1;6690:411;6714:3;:10;6710:1;:14;6690:411;;;6745:10;6758:3;6762:1;6758:6;;;;;;;;:::i;:::-;;;;;;;6745:19;;6778:14;6795:7;6803:1;6795:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6820:19;6842:13;;;;;;;;;;-1:-1:-1;;;;;6842:19:1;;;;;;;;;;;;6795:10;;-1:-1:-1;6883:21:1;;;;6875:76;;;;-1:-1:-1;;;6875:76:1;;15862:2:13;6875:76:1;;;15844:21:13;15901:2;15881:18;;;15874:30;15940:34;15920:18;;;15913:62;-1:-1:-1;;;15991:18:13;;;15984:40;16041:19;;6875:76:1;15660:406:13;6875:76:1;6993:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6993:19:1;;;;;;;;;;7015:20;;;6993:42;;7063:17;;;;;;;:27;;7015:20;;6993:9;7063:27;;7015:20;;7063:27;:::i;:::-;;;;;;;;6731:370;;;6726:3;;;;:::i;:::-;;;6690:411;;;;7146:2;-1:-1:-1;;;;;7116:47:1;7140:4;-1:-1:-1;;;;;7116:47:1;7130:8;-1:-1:-1;;;;;7116:47:1;;7150:3;7155:7;7116:47;;;;;;;:::i;:::-;;;;;;;;7244:75;7280:8;7290:4;7296:2;7300:3;7305:7;7314:4;7244:35;:75::i;:::-;6399:927;6211:1115;;;;;:::o;12790:293::-;12910:8;-1:-1:-1;;;;;12901:17:1;:5;-1:-1:-1;;;;;12901:17:1;;12893:71;;;;-1:-1:-1;;;12893:71:1;;16743:2:13;12893:71:1;;;16725:21:13;16782:2;16762:18;;;16755:30;16821:34;16801:18;;;16794:62;-1:-1:-1;;;16872:18:13;;;16865:39;16921:19;;12893:71:1;16541:405:13;12893:71:1;-1:-1:-1;;;;;12974:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12974:46:1;;;;;;;;;;13035:41;;1201::13;;;13035::1;;1174:18:13;13035:41:1;;;;;;;12790:293;;;:::o;4918:947::-;-1:-1:-1;;;;;5099:16:1;;5091:66;;;;-1:-1:-1;;;5091:66:1;;15456:2:13;5091:66:1;;;15438:21:13;15495:2;15475:18;;;15468:30;15534:34;15514:18;;;15507:62;-1:-1:-1;;;15585:18:13;;;15578:35;15630:19;;5091:66:1;15254:401:13;5091:66:1;719:10:6;5168:16:1;5232:21;5250:2;5232:17;:21::i;:::-;5209:44;;5263:24;5290:25;5308:6;5290:17;:25::i;:::-;5263:52;;5397:19;5419:13;;;;;;;;;;;-1:-1:-1;;;;;5419:19:1;;;;;;;;;;5456:21;;;;5448:76;;;;-1:-1:-1;;;5448:76:1;;15862:2:13;5448:76:1;;;15844:21:13;15901:2;15881:18;;;15874:30;15940:34;15920:18;;;15913:62;-1:-1:-1;;;15991:18:13;;;15984:40;16041:19;;5448:76:1;15660:406:13;5448:76:1;5558:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5558:19:1;;;;;;;;;;5580:20;;;5558:42;;5620:17;;;;;;;:27;;5580:20;;5558:9;5620:27;;5580:20;;5620:27;:::i;:::-;;;;-1:-1:-1;;5663:46:1;;;17125:25:13;;;17181:2;17166:18;;17159:34;;;-1:-1:-1;;;;;5663:46:1;;;;;;;;;;;;;;17098:18:13;5663:46:1;;;;;;;5790:68;5821:8;5831:4;5837:2;5841;5845:6;5853:4;5790:30;:68::i;:::-;5081:784;;;;4918:947;;;;;:::o;16116:792::-;-1:-1:-1;;;;;16348:13:1;;1702:19:5;:23;16344:558:1;;16383:79;;-1:-1:-1;;;16383:79:1;;-1:-1:-1;;;;;16383:43:1;;;;;:79;;16427:8;;16437:4;;16443:3;;16448:7;;16457:4;;16383:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16383:79:1;;;;;;;;-1:-1:-1;;16383:79:1;;;;;;;;;;;;:::i;:::-;;;16379:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16768:6;16761:14;;-1:-1:-1;;;16761:14:1;;;;;;;;:::i;16379:513::-;;;16815:62;;-1:-1:-1;;;16815:62:1;;19375:2:13;16815:62:1;;;19357:21:13;19414:2;19394:18;;;19387:30;19453:34;19433:18;;;19426:62;19524:22;19504:18;;;19497:50;19564:19;;16815:62:1;19173:416:13;16379:513:1;-1:-1:-1;;;;;;16541:60:1;;-1:-1:-1;;;16541:60:1;16537:157;;16625:50;;-1:-1:-1;;;16625:50:1;;19796:2:13;16625:50:1;;;19778:21:13;19835:2;19815:18;;;19808:30;19874:34;19854:18;;;19847:62;-1:-1:-1;;;19925:18:13;;;19918:38;19973:19;;16625:50:1;19594:404:13;16537:157:1;16463:245;16116:792;;;;;;:::o;16914:193::-;17033:16;;;17047:1;17033:16;;;;;;;;;16980;;17008:22;;17033:16;;;;;;;;;;;;-1:-1:-1;17033:16:1;17008:41;;17070:7;17059:5;17065:1;17059:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17095:5;16914:193;-1:-1:-1;;16914:193:1:o;15385:725::-;-1:-1:-1;;;;;15592:13:1;;1702:19:5;:23;15588:516:1;;15627:72;;-1:-1:-1;;;15627:72:1;;-1:-1:-1;;;;;15627:38:1;;;;;:72;;15666:8;;15676:4;;15682:2;;15686:6;;15694:4;;15627:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15627:72:1;;;;;;;;-1:-1:-1;;15627:72:1;;;;;;;;;;;;:::i;:::-;;;15623:471;;;;:::i;:::-;-1:-1:-1;;;;;;15748:55:1;;-1:-1:-1;;;15748:55:1;15744:152;;15827:50;;-1:-1:-1;;;15827:50:1;;19796:2:13;15827:50:1;;;19778:21:13;19835:2;19815:18;;;19808:30;19874:34;19854:18;;;19847:62;-1:-1:-1;;;19925:18:13;;;19918:38;19973:19;;15827:50:1;19594:404:13;14:154;-1:-1:-1;;;;;93:5:13;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:315::-;241:6;249;302:2;290:9;281:7;277:23;273:32;270:52;;;318:1;315;308:12;270:52;357:9;344:23;376:31;401:5;376:31;:::i;:::-;426:5;478:2;463:18;;;;450:32;;-1:-1:-1;;;173:315:13:o;675:131::-;-1:-1:-1;;;;;;749:32:13;;739:43;;729:71;;796:1;793;786:12;811:245;869:6;922:2;910:9;901:7;897:23;893:32;890:52;;;938:1;935;928:12;890:52;977:9;964:23;996:30;1020:5;996:30;:::i;:::-;1045:5;811:245;-1:-1:-1;;;811:245:13:o;1253:180::-;1312:6;1365:2;1353:9;1344:7;1340:23;1336:32;1333:52;;;1381:1;1378;1371:12;1333:52;-1:-1:-1;1404:23:13;;1253:180;-1:-1:-1;1253:180:13:o;1438:423::-;1480:3;1518:5;1512:12;1545:6;1540:3;1533:19;1570:1;1580:162;1594:6;1591:1;1588:13;1580:162;;;1656:4;1712:13;;;1708:22;;1702:29;1684:11;;;1680:20;;1673:59;1609:12;1580:162;;;1584:3;1787:1;1780:4;1771:6;1766:3;1762:16;1758:27;1751:38;1850:4;1843:2;1839:7;1834:2;1826:6;1822:15;1818:29;1813:3;1809:39;1805:50;1798:57;;;1438:423;;;;:::o;1866:220::-;2015:2;2004:9;1997:21;1978:4;2035:45;2076:2;2065:9;2061:18;2053:6;2035:45;:::i;2091:127::-;2152:10;2147:3;2143:20;2140:1;2133:31;2183:4;2180:1;2173:15;2207:4;2204:1;2197:15;2223:249;2333:2;2314:13;;-1:-1:-1;;2310:27:13;2298:40;;2368:18;2353:34;;2389:22;;;2350:62;2347:88;;;2415:18;;:::i;:::-;2451:2;2444:22;-1:-1:-1;;2223:249:13:o;2477:183::-;2537:4;2570:18;2562:6;2559:30;2556:56;;;2592:18;;:::i;:::-;-1:-1:-1;2637:1:13;2633:14;2649:4;2629:25;;2477:183::o;2665:724::-;2719:5;2772:3;2765:4;2757:6;2753:17;2749:27;2739:55;;2790:1;2787;2780:12;2739:55;2826:6;2813:20;2852:4;2875:43;2915:2;2875:43;:::i;:::-;2947:2;2941:9;2959:31;2987:2;2979:6;2959:31;:::i;:::-;3025:18;;;3117:1;3113:10;;;;3101:23;;3097:32;;;3059:15;;;;-1:-1:-1;3141:15:13;;;3138:35;;;3169:1;3166;3159:12;3138:35;3205:2;3197:6;3193:15;3217:142;3233:6;3228:3;3225:15;3217:142;;;3299:17;;3287:30;;3337:12;;;;3250;;3217:142;;;-1:-1:-1;3377:6:13;2665:724;-1:-1:-1;;;;;;2665:724:13:o;3394:555::-;3436:5;3489:3;3482:4;3474:6;3470:17;3466:27;3456:55;;3507:1;3504;3497:12;3456:55;3543:6;3530:20;3569:18;3565:2;3562:26;3559:52;;;3591:18;;:::i;:::-;3640:2;3634:9;3652:67;3707:2;3688:13;;-1:-1:-1;;3684:27:13;3713:4;3680:38;3634:9;3652:67;:::i;:::-;3743:2;3735:6;3728:18;3789:3;3782:4;3777:2;3769:6;3765:15;3761:26;3758:35;3755:55;;;3806:1;3803;3796:12;3755:55;3870:2;3863:4;3855:6;3851:17;3844:4;3836:6;3832:17;3819:54;3917:1;3893:15;;;3910:4;3889:26;3882:37;;;;3897:6;3394:555;-1:-1:-1;;;3394:555:13:o;3954:1071::-;4108:6;4116;4124;4132;4140;4193:3;4181:9;4172:7;4168:23;4164:33;4161:53;;;4210:1;4207;4200:12;4161:53;4249:9;4236:23;4268:31;4293:5;4268:31;:::i;:::-;4318:5;-1:-1:-1;4375:2:13;4360:18;;4347:32;4388:33;4347:32;4388:33;:::i;:::-;4440:7;-1:-1:-1;4498:2:13;4483:18;;4470:32;4521:18;4551:14;;;4548:34;;;4578:1;4575;4568:12;4548:34;4601:61;4654:7;4645:6;4634:9;4630:22;4601:61;:::i;:::-;4591:71;;4715:2;4704:9;4700:18;4687:32;4671:48;;4744:2;4734:8;4731:16;4728:36;;;4760:1;4757;4750:12;4728:36;4783:63;4838:7;4827:8;4816:9;4812:24;4783:63;:::i;:::-;4773:73;;4899:3;4888:9;4884:19;4871:33;4855:49;;4929:2;4919:8;4916:16;4913:36;;;4945:1;4942;4935:12;4913:36;;4968:51;5011:7;5000:8;4989:9;4985:24;4968:51;:::i;:::-;4958:61;;;3954:1071;;;;;;;;:::o;5030:1277::-;5148:6;5156;5209:2;5197:9;5188:7;5184:23;5180:32;5177:52;;;5225:1;5222;5215:12;5177:52;5265:9;5252:23;5294:18;5335:2;5327:6;5324:14;5321:34;;;5351:1;5348;5341:12;5321:34;5389:6;5378:9;5374:22;5364:32;;5434:7;5427:4;5423:2;5419:13;5415:27;5405:55;;5456:1;5453;5446:12;5405:55;5492:2;5479:16;5514:4;5537:43;5577:2;5537:43;:::i;:::-;5609:2;5603:9;5621:31;5649:2;5641:6;5621:31;:::i;:::-;5687:18;;;5775:1;5771:10;;;;5763:19;;5759:28;;;5721:15;;;;-1:-1:-1;5799:19:13;;;5796:39;;;5831:1;5828;5821:12;5796:39;5855:11;;;;5875:217;5891:6;5886:3;5883:15;5875:217;;;5971:3;5958:17;5988:31;6013:5;5988:31;:::i;:::-;6032:18;;5908:12;;;;6070;;;;5875:217;;;6111:6;-1:-1:-1;;6155:18:13;;6142:32;;-1:-1:-1;;6186:16:13;;;6183:36;;;6215:1;6212;6205:12;6183:36;;6238:63;6293:7;6282:8;6271:9;6267:24;6238:63;:::i;:::-;6228:73;;;5030:1277;;;;;:::o;6312:435::-;6365:3;6403:5;6397:12;6430:6;6425:3;6418:19;6456:4;6485:2;6480:3;6476:12;6469:19;;6522:2;6515:5;6511:14;6543:1;6553:169;6567:6;6564:1;6561:13;6553:169;;;6628:13;;6616:26;;6662:12;;;;6697:15;;;;6589:1;6582:9;6553:169;;;-1:-1:-1;6738:3:13;;6312:435;-1:-1:-1;;;;;6312:435:13:o;6752:261::-;6931:2;6920:9;6913:21;6894:4;6951:56;7003:2;6992:9;6988:18;6980:6;6951:56;:::i;7407:255::-;7474:6;7527:2;7515:9;7506:7;7502:23;7498:32;7495:52;;;7543:1;7540;7533:12;7495:52;7582:9;7569:23;7601:31;7626:5;7601:31;:::i;7667:416::-;7732:6;7740;7793:2;7781:9;7772:7;7768:23;7764:32;7761:52;;;7809:1;7806;7799:12;7761:52;7848:9;7835:23;7867:31;7892:5;7867:31;:::i;:::-;7917:5;-1:-1:-1;7974:2:13;7959:18;;7946:32;8016:15;;8009:23;7997:36;;7987:64;;8047:1;8044;8037:12;7987:64;8070:7;8060:17;;;7667:416;;;;;:::o;8295:697::-;8482:2;8534:21;;;8604:13;;8507:18;;;8626:22;;;8453:4;;8482:2;8705:15;;;;8679:2;8664:18;;;8453:4;8748:218;8762:6;8759:1;8756:13;8748:218;;;8827:13;;-1:-1:-1;;;;;8823:62:13;8811:75;;8941:15;;;;8906:12;;;;8784:1;8777:9;8748:218;;;-1:-1:-1;8983:3:13;;8295:697;-1:-1:-1;;;;;;8295:697:13:o;8997:388::-;9065:6;9073;9126:2;9114:9;9105:7;9101:23;9097:32;9094:52;;;9142:1;9139;9132:12;9094:52;9181:9;9168:23;9200:31;9225:5;9200:31;:::i;:::-;9250:5;-1:-1:-1;9307:2:13;9292:18;;9279:32;9320:33;9279:32;9320:33;:::i;9390:734::-;9494:6;9502;9510;9518;9526;9579:3;9567:9;9558:7;9554:23;9550:33;9547:53;;;9596:1;9593;9586:12;9547:53;9635:9;9622:23;9654:31;9679:5;9654:31;:::i;:::-;9704:5;-1:-1:-1;9761:2:13;9746:18;;9733:32;9774:33;9733:32;9774:33;:::i;:::-;9826:7;-1:-1:-1;9880:2:13;9865:18;;9852:32;;-1:-1:-1;9931:2:13;9916:18;;9903:32;;-1:-1:-1;9986:3:13;9971:19;;9958:33;10014:18;10003:30;;10000:50;;;10046:1;10043;10036:12;10000:50;10069:49;10110:7;10101:6;10090:9;10086:22;10069:49;:::i;10540:380::-;10619:1;10615:12;;;;10662;;;10683:61;;10737:4;10729:6;10725:17;10715:27;;10683:61;10790:2;10782:6;10779:14;10759:18;10756:38;10753:161;;10836:10;10831:3;10827:20;10824:1;10817:31;10871:4;10868:1;10861:15;10899:4;10896:1;10889:15;10753:161;;10540:380;;;:::o;11699:127::-;11760:10;11755:3;11751:20;11748:1;11741:31;11791:4;11788:1;11781:15;11815:4;11812:1;11805:15;11831:168;11904:9;;;11935;;11952:15;;;11946:22;;11932:37;11922:71;;11973:18;;:::i;12004:217::-;12044:1;12070;12060:132;;12114:10;12109:3;12105:20;12102:1;12095:31;12149:4;12146:1;12139:15;12177:4;12174:1;12167:15;12060:132;-1:-1:-1;12206:9:13;;12004:217::o;12226:128::-;12293:9;;;12314:11;;;12311:37;;;12328:18;;:::i;12769:127::-;12830:10;12825:3;12821:20;12818:1;12811:31;12861:4;12858:1;12851:15;12885:4;12882:1;12875:15;12901:135;12940:3;12961:17;;;12958:43;;12981:18;;:::i;:::-;-1:-1:-1;13028:1:13;13017:13;;12901:135::o;13460:125::-;13525:9;;;13546:10;;;13543:36;;;13559:18;;:::i;16071:465::-;16328:2;16317:9;16310:21;16291:4;16354:56;16406:2;16395:9;16391:18;16383:6;16354:56;:::i;:::-;16458:9;16450:6;16446:22;16441:2;16430:9;16426:18;16419:50;16486:44;16523:6;16515;16486:44;:::i;:::-;16478:52;16071:465;-1:-1:-1;;;;;16071:465:13:o;17204:850::-;17526:4;-1:-1:-1;;;;;17636:2:13;17628:6;17624:15;17613:9;17606:34;17688:2;17680:6;17676:15;17671:2;17660:9;17656:18;17649:43;;17728:3;17723:2;17712:9;17708:18;17701:31;17755:57;17807:3;17796:9;17792:19;17784:6;17755:57;:::i;:::-;17860:9;17852:6;17848:22;17843:2;17832:9;17828:18;17821:50;17894:44;17931:6;17923;17894:44;:::i;:::-;17880:58;;17987:9;17979:6;17975:22;17969:3;17958:9;17954:19;17947:51;18015:33;18041:6;18033;18015:33;:::i;:::-;18007:41;17204:850;-1:-1:-1;;;;;;;;17204:850:13:o;18059:249::-;18128:6;18181:2;18169:9;18160:7;18156:23;18152:32;18149:52;;;18197:1;18194;18187:12;18149:52;18229:9;18223:16;18248:30;18272:5;18248:30;:::i;18313:179::-;18348:3;18390:1;18372:16;18369:23;18366:120;;;18436:1;18433;18430;18415:23;-1:-1:-1;18473:1:13;18467:8;18462:3;18458:18;18366:120;18313:179;:::o;18497:671::-;18536:3;18578:4;18560:16;18557:26;18554:39;;;18497:671;:::o;18554:39::-;18620:2;18614:9;-1:-1:-1;;18685:16:13;18681:25;;18678:1;18614:9;18657:50;18736:4;18730:11;18760:16;18795:18;18866:2;18859:4;18851:6;18847:17;18844:25;18839:2;18831:6;18828:14;18825:45;18822:58;;;18873:5;;;;;18497:671;:::o;18822:58::-;18910:6;18904:4;18900:17;18889:28;;18946:3;18940:10;18973:2;18965:6;18962:14;18959:27;;;18979:5;;;;;;18497:671;:::o;18959:27::-;19063:2;19044:16;19038:4;19034:27;19030:36;19023:4;19014:6;19009:3;19005:16;19001:27;18998:69;18995:82;;;19070:5;;;;;;18497:671;:::o;18995:82::-;19086:57;19137:4;19128:6;19120;19116:19;19112:30;19106:4;19086:57;:::i;:::-;-1:-1:-1;19159:3:13;;18497:671;-1:-1:-1;;;;;18497:671:13:o;20003:584::-;20225:4;-1:-1:-1;;;;;20335:2:13;20327:6;20323:15;20312:9;20305:34;20387:2;20379:6;20375:15;20370:2;20359:9;20355:18;20348:43;;20427:6;20422:2;20411:9;20407:18;20400:34;20470:6;20465:2;20454:9;20450:18;20443:34;20514:3;20508;20497:9;20493:19;20486:32;20535:46;20576:3;20565:9;20561:19;20553:6;20535:46;:::i;:::-;20527:54;20003:584;-1:-1:-1;;;;;;;20003:584:13:o"},"gasEstimates":{"creation":{"codeDepositCost":"1415000","executionCost":"infinite","totalCost":"infinite"},"external":{"balanceOf(address,uint256)":"2694","balanceOfBatch(address[],uint256[])":"infinite","getAllInvestors()":"infinite","getInvestmentDetails()":"6613","getInvestmentDetails(address)":"2543","isApprovedForAll(address,address)":"infinite","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"infinite","onERC1155Received(address,address,uint256,uint256,bytes)":"infinite","purchaseShares(uint256)":"infinite","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"infinite","safeTransferFrom(address,address,uint256,uint256,bytes)":"infinite","sellShares(uint256)":"infinite","setApprovalForAll(address,bool)":"26722","supportsInterface(bytes4)":"578","transferShares(address,uint256)":"infinite","uri(uint256)":"infinite"}},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","getAllInvestors()":"d0a2f2c4","getInvestmentDetails()":"80bb4ef4","getInvestmentDetails(address)":"91a62523","isApprovedForAll(address,address)":"e985e9c5","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","purchaseShares(uint256)":"df48981a","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","sellShares(uint256)":"4ba8ae81","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferShares(address,uint256)":"8fcb4e5b","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_evaluation\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllInvestors\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInvestmentDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"getInvestmentDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"purchaseShares\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"sellShares\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"transferShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WalletEstate.sol\":\"WalletEstate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":400},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155.sol\\\";\\nimport \\\"./IERC1155Receiver.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURI.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\\n    using Address for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping(uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    constructor(string memory uri_) {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: address zero is not a valid owner\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] memory accounts,\\n        uint256[] memory ids\\n    ) public view virtual override returns (uint256[] memory) {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeTransferFrom(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _balances[id][to] += amount;\\n        emit TransferSingle(operator, address(0), to, id, amount);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(address from, uint256 id, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory amounts) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n        }\\n\\n        emit TransferBatch(operator, from, address(0), ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC1155: setting approval status for self\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n}\\n\",\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/WalletEstate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Compatible with OpenZeppelin Contracts ^5.0.0\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\n\\r\\ncontract WalletEstate is ERC1155,IERC1155Receiver {\\r\\n\\r\\n    uint256 private constant WALLET_TOKEN = 0;\\r\\n    uint256 private estateId;\\r\\n    uint256 private estateEvaluation;\\r\\n    address payable private estateOwner;\\r\\n\\r\\n    mapping (address=>uint256) estateShareHolders;\\r\\n\\r\\n    address payable [] private investors;\\r\\n\\r\\n    constructor(uint256 _id,uint256 _evaluation)\\r\\n        ERC1155(\\\"\\\")\\r\\n    {   estateId = _id;\\r\\n        estateEvaluation = _evaluation;\\r\\n        estateOwner = payable(address(msg.sender));\\r\\n        \\r\\n    }\\r\\n\\r\\n     function getInvestmentDetails() external view returns(uint256,uint256,address payable){\\r\\n        return(estateId,estateEvaluation,estateOwner);\\r\\n    }\\r\\n\\r\\n    function getAllInvestors() external view returns(address payable [] memory){\\r\\n        return investors;\\r\\n    }\\r\\n\\r\\n    function getInvestmentDetails(address payable investor) external view returns(uint256){\\r\\n        return (estateShareHolders[investor]);\\r\\n    }\\r\\n\\r\\n    function purchaseShares(uint256 quantity) external payable  {\\r\\n        require(quantity<=100,\\\"Maximum number of shares that can be purchased is 100\\\");\\r\\n        require(quantity>0, \\\"Number of shares purchased cannot be zero or less\\\");\\r\\n        require(quantity<balanceOf(address(this), WALLET_TOKEN),\\\"There aren't sufficient shares to be purchased\\\");\\r\\n\\r\\n        //uint256 share_evaluation = ((estateEvaluation*10**18)/100)*quantity;\\r\\n        //require(share_evaluation==msg.value,\\\"Incorrect funds sent!\\\");\\r\\n        payable(address(this)).transfer(msg.value);\\r\\n\\r\\n       safeTransferFrom(address(this), address(msg.sender), WALLET_TOKEN, quantity, \\\"\\\");\\r\\n       estateShareHolders[address(msg.sender)] = quantity;\\r\\n       investors.push(payable(address(msg.sender)));\\r\\n    }\\r\\n\\r\\n    function transferShares(address receiver,uint256 quantity) external {\\r\\n        require(quantity <= estateShareHolders[address(msg.sender)], \\\"Insufficient shares to be transferred to recepient\\\");\\r\\n        safeTransferFrom(address(msg.sender), receiver, WALLET_TOKEN, quantity, \\\"\\\");\\r\\n        estateShareHolders[address(msg.sender)] -= quantity;\\r\\n        estateShareHolders[receiver] += quantity;\\r\\n    }\\r\\n\\r\\n    function sellShares(uint256 quantity) external payable {\\r\\n        require(quantity <= estateShareHolders[address(msg.sender)], \\\"Insufficient shares to be sold\\\");\\r\\n        safeTransferFrom(address(msg.sender), address(this), WALLET_TOKEN, quantity, \\\"\\\");\\r\\n\\r\\n        uint256 share_evaluation = ((estateEvaluation*10**18)/100)*quantity;\\r\\n        payable(address(msg.sender)).transfer(share_evaluation);\\r\\n        estateShareHolders[address(msg.sender)] -=quantity; \\r\\n    }\\r\\n\\r\\n    function onERC1155Received(address, address, uint256, uint256, bytes memory) external virtual returns (bytes4) {\\r\\n        return this.onERC1155Received.selector;\\r\\n    }\\r\\n\\r\\n    function onERC1155BatchReceived(address, address, uint256[] memory, uint256[] memory, bytes memory) external virtual returns (bytes4) {\\r\\n        return this.onERC1155BatchReceived.selector;\\r\\n    }\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0xf653340e56b8f28141b33c65806378bd61c4049d0b700654f6381726abdb0004\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"contracts/WalletEstate.sol:WalletEstate","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":144,"contract":"contracts/WalletEstate.sol:WalletEstate","label":"_operatorApprovals","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":146,"contract":"contracts/WalletEstate.sol:WalletEstate","label":"_uri","offset":0,"slot":"2","type":"t_string_storage"},{"astId":2746,"contract":"contracts/WalletEstate.sol:WalletEstate","label":"estateId","offset":0,"slot":"3","type":"t_uint256"},{"astId":2748,"contract":"contracts/WalletEstate.sol:WalletEstate","label":"estateEvaluation","offset":0,"slot":"4","type":"t_uint256"},{"astId":2750,"contract":"contracts/WalletEstate.sol:WalletEstate","label":"estateOwner","offset":0,"slot":"5","type":"t_address_payable"},{"astId":2754,"contract":"contracts/WalletEstate.sol:WalletEstate","label":"estateShareHolders","offset":0,"slot":"6","type":"t_mapping(t_address,t_uint256)"},{"astId":2757,"contract":"contracts/WalletEstate.sol:WalletEstate","label":"investors","offset":0,"slot":"7","type":"t_array(t_address_payable)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_address_payable)dyn_storage":{"base":"t_address_payable","encoding":"dynamic_array","label":"address payable[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}